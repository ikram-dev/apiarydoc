FORMAT: 1A
HOST: http://localhost:80/flex/services/rest/latest

# Zephyr Enterprise REST API
Zephyr Enterprise REST API allows access to test assets.

Authentication: Use basic authentication for REST authentication, provide Zephyr username and password.
Zephyr server responds with a cookie containing token. Please use cookies for better performance. 
Note: Basic authentication requires that username and password should be ASCII.

# Group AdminPreferences
The following API is a resource related to Admin preferences.

## Get All Preferences - Admin [/admin/preference/admin]
### Get All Preferences - Admin [GET]
Retrive all preferences wit admin privilages. These Preferences will be used for configuring zephyr.
    



+ Response 200 (application/json application/xml)

        [ { "name" : "admin.api.timeout", "value" : "30", "defaultValue" : "30", "isCustomizable" : true, "editable" : false, "accessLevel" : 2 }, { "name" : "admin.app.company.name", "value" : "Your Company", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.dashboard.url", "value" : "localhost${serverport.forurl}", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.desktop.url", "value" : "localhost${serverport.forurl}", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.gadget.refreshrate", "value" : "240", "defaultValue" : "240", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.app.logo", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.app.setup", "value" : "false", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.system.name", "value" : "Test Department", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.timeout", "value" : "90", "defaultValue" : "90", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.application.selected.skin", "value" : "Carbon", "defaultValue" : "Carbon", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.application.skins", "value" : "Carbon;Classic;Steel", "defaultValue" : "Carbon;Classic;Steel", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "admin.attachment.path", "value" : "${ZEPHYR_DATA}/attachment", "defaultValue" : "${ZEPHYR_DATA}/attachment", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authentication.secondary.auth", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authentication.security.policy", "value" : "Default", "defaultValue" : "Default", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authentication.security.policy.LOV", "value" : "[{\"policyName\":\"Default\",\"description\":\"Default password requires minimum of 4 characters.\",\"minLength\":\"4\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"0\",\"minLowerCase\":\"0\",\"minNumricLength\":\"0\",\"active\":\"true\"},{\"policyName\":\"Strong\",\"description\":\"Strong policy requires password to have minimum of 8 characters with at least 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"8\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"1\",\"minUpperCase\":\"1\",\"minLowerCase\":\"1\",\"minNumricLength\":\"1\",\"active\":\"false\"},{\"policyName\":\"Very Strong\",\"description\":\"Very strong policy requires password to have minimum of 10 characters with at least 2 lowercase letters, 2 uppercase letters, 2 numbers, and 2 special characters out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"10\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"2\",\"minUpperCase\":\"2\",\"minLowerCase\":\"2\",\"minNumricLength\":\"2\",\"active\":\"false\"},{\"policyName\":\"Weak\",\"description\":\"Weak policy requires password to have minimum of 6 characters with at least 1 uppercase letter and 1 number\",\"minLength\":\"6\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"1\",\"minLowerCase\":\"0\",\"minNumricLength\":\"1\",\"active\":\"false\"}]", "defaultValue" : "[{\"policyName\":\"Default\",\"description\":\"Default password requires minimum of 4 characters.\",\"minLength\":\"4\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"0\",\"minLowerCase\":\"0\",\"minNumricLength\":\"0\",\"active\":\"true\"},{\"policyName\":\"Strong\",\"description\":\"Strong policy requires password to have minimum of 8 characters with at least 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"8\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"1\",\"minUpperCase\":\"1\",\"minLowerCase\":\"1\",\"minNumricLength\":\"1\",\"active\":\"false\"},{\"policyName\":\"Very Strong\",\"description\":\"Very strong policy requires password to have minimum of 10 characters with at least 2 lowercase letters, 2 uppercase letters, 2 numbers, and 2 special characters out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"10\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"2\",\"minUpperCase\":\"2\",\"minLowerCase\":\"2\",\"minNumricLength\":\"2\",\"active\":\"false\"},{\"policyName\":\"Weak\",\"description\":\"Weak policy requires password to have minimum of 6 characters with at least 1 uppercase letter and 1 number\",\"minLength\":\"6\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"1\",\"minLowerCase\":\"0\",\"minNumricLength\":\"1\",\"active\":\"false\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "admin.authenticationSystem.crowd.appName", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.crowd.url", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.baseDn", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.bindDn", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.searchAttribute", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.url", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Internal\"},{\"id\":\"2\",\"value\":\"LDAP\"},{\"id\":\"3\",\"value\":\"Crowd\"},{\"id\":\"4\",\"value\":\"WebService\"},{\"id\":\"5\",\"value\":\"Single Sign-On\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Internal\"},{\"id\":\"2\",\"value\":\"LDAP\"},{\"id\":\"3\",\"value\":\"Crowd\"},{\"id\":\"4\",\"value\":\"WebService\"},{\"id\":\"5\",\"value\":\"Single Sign-On\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.sso.appUrl", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.sso.certificate", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.sso.issuerId", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.type", "value" : "1", "defaultValue" : "1", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authenticationSystem.url", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.collaboration.visible", "value" : "true", "defaultValue" : "true", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.hot.backup.file", "value" : "12", "defaultValue" : "12", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "admin.mail.server.ip", "value" : "0.0.0.0", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.server.port", "value" : "25", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.server.username", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.smtp.auth", "value" : "false", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.smtp.starttls.enable", "value" : "false", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.tcc.nodeacceess.restricted", "value" : "true", "defaultValue" : "true", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.user.lock.attempt.limit", "value" : "10", "defaultValue" : "10", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.user.lock.available", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.user.lock.timeout", "value" : "60", "defaultValue" : "60", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authenticationSystem.crowd.apppwd", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.bindPassword", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.server.password", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.dfp", "value" : "0000200015000000000000123500000034" } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get All Applications  [/admin/app]
### Get All Applications  [GET]
Get information and details of all applications for system.
    



+ Response 200 (application/json application/xml)

        [ { "id" : 1, "applicationName" : "btn_Setup_Icon", "description" : "desc", "desktopLevel" : 1, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 2, "applicationName" : "btn_ResourceMgmt_Icon", "description" : "desc", "desktopLevel" : 1, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 3, "applicationName" : "btn_ProjectSetup_Icon", "description" : "desc", "desktopLevel" : 1, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 4, "applicationName" : "btn_DeptDashboardMgmt_Icon", "description" : "desc", "desktopLevel" : 1, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 5, "applicationName" : "btn_DefectTrackingSystem_Icon", "description" : "desc", "desktopLevel" : 1, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 6, "applicationName" : "btn_DefectTrackingAdmin_Icon", "description" : "desc", "desktopLevel" : 1, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 7, "applicationName" : "btn_MetricAndReports_Icon", "description" : "desc", "desktopLevel" : 1, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 8, "applicationName" : "btn_ReleaseSetupMgmt_Icon", "description" : "desc", "desktopLevel" : 2, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 9, "applicationName" : "btn_Requirement_Icon", "description" : "desc", "desktopLevel" : 2, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 10, "applicationName" : "btn_TestCaseRepository_Icon", "description" : "desc", "desktopLevel" : 2, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 11, "applicationName" : "btn_TestCaseScheduling_Icon", "description" : "desc", "desktopLevel" : 2, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 12, "applicationName" : "btn_ReleaseDashboardMgmt_Icon", "description" : "desc", "desktopLevel" : 2, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 13, "applicationName" : "btn_MetricAndReports_Icon", "description" : "desc", "desktopLevel" : 2, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 14, "applicationName" : "btn_DocumentManagement_Icon", "description" : "desc", "desktopLevel" : 2, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : false, "editable" : false, "deleteable" : false }, { "id" : 15, "applicationName" : "btn_TestCaseCreation_Icon", "description" : "desc", "desktopLevel" : 2, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 16, "applicationName" : "btn_TestCaseExecution_Icon", "description" : "desc", "desktopLevel" : 2, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 17, "applicationName" : "btn_DefectTrackingSystem_Icon", "description" : "desc", "desktopLevel" : 2, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 18, "applicationName" : "btn_standaloneProjectDashboard_Icon", "description" : "desc", "desktopLevel" : 3, "accessTypes" : 3, "type" : 0, "url" : "", "launchInstructions" : "", "readable" : false, "editable" : false, "deleteable" : false }, { "id" : 19, "applicationName" : "btn_standaloneDeptDashboard_Icon", "description" : "desc", "desktopLevel" : 3, "accessTypes" : 3, "type" : 0, "url" : "", "launchInstructions" : "", "readable" : false, "editable" : false, "deleteable" : false }, { "id" : 20, "applicationName" : "btn_Testcase_Execution_Admin_Icon", "description" : "view all executions", "desktopLevel" : 2, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 30, "applicationName" : "btn_Global_Repository_Icon", "description" : "Show Global Repository Icon", "desktopLevel" : 1, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true }, { "id" : 31, "applicationName" : "btn_Global_Repository_Config_Icon", "description" : "Allow global repo to share with other projects", "desktopLevel" : 1, "accessTypes" : 3, "type" : 0, "launchInstructions" : "", "readable" : true, "editable" : true, "deleteable" : true } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get list of values [/admin/preference/lov/all]
### Get list of values [GET]
Get all values based on preferences and Value
    



+ Response 200 (application/json application/xml)

        [ { "name" : "admin.authentication.security.policy.LOV", "value" : "[{\"policyName\":\"Default\",\"description\":\"Default password requires minimum of 4 characters.\",\"minLength\":\"4\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"0\",\"minLowerCase\":\"0\",\"minNumricLength\":\"0\",\"active\":\"true\"},{\"policyName\":\"Strong\",\"description\":\"Strong policy requires password to have minimum of 8 characters with at least 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"8\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"1\",\"minUpperCase\":\"1\",\"minLowerCase\":\"1\",\"minNumricLength\":\"1\",\"active\":\"false\"},{\"policyName\":\"Very Strong\",\"description\":\"Very strong policy requires password to have minimum of 10 characters with at least 2 lowercase letters, 2 uppercase letters, 2 numbers, and 2 special characters out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"10\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"2\",\"minUpperCase\":\"2\",\"minLowerCase\":\"2\",\"minNumricLength\":\"2\",\"active\":\"false\"},{\"policyName\":\"Weak\",\"description\":\"Weak policy requires password to have minimum of 6 characters with at least 1 uppercase letter and 1 number\",\"minLength\":\"6\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"1\",\"minLowerCase\":\"0\",\"minNumricLength\":\"1\",\"active\":\"false\"}]", "defaultValue" : "[{\"policyName\":\"Default\",\"description\":\"Default password requires minimum of 4 characters.\",\"minLength\":\"4\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"0\",\"minLowerCase\":\"0\",\"minNumricLength\":\"0\",\"active\":\"true\"},{\"policyName\":\"Strong\",\"description\":\"Strong policy requires password to have minimum of 8 characters with at least 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"8\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"1\",\"minUpperCase\":\"1\",\"minLowerCase\":\"1\",\"minNumricLength\":\"1\",\"active\":\"false\"},{\"policyName\":\"Very Strong\",\"description\":\"Very strong policy requires password to have minimum of 10 characters with at least 2 lowercase letters, 2 uppercase letters, 2 numbers, and 2 special characters out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"10\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"2\",\"minUpperCase\":\"2\",\"minLowerCase\":\"2\",\"minNumricLength\":\"2\",\"active\":\"false\"},{\"policyName\":\"Weak\",\"description\":\"Weak policy requires password to have minimum of 6 characters with at least 1 uppercase letter and 1 number\",\"minLength\":\"6\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"1\",\"minLowerCase\":\"0\",\"minNumricLength\":\"1\",\"active\":\"false\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "admin.authenticationSystem.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Internal\"},{\"id\":\"2\",\"value\":\"LDAP\"},{\"id\":\"3\",\"value\":\"Crowd\"},{\"id\":\"4\",\"value\":\"WebService\"},{\"id\":\"5\",\"value\":\"Single Sign-On\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Internal\"},{\"id\":\"2\",\"value\":\"LDAP\"},{\"id\":\"3\",\"value\":\"Crowd\"},{\"id\":\"4\",\"value\":\"WebService\"},{\"id\":\"5\",\"value\":\"Single Sign-On\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 3 }, { "name" : "bugtracking.system.LOV", "value" : "[{\"id\":\"1\",\"value\":\"None\"},{\"id\":\"2\",\"value\":\"Zephyr\"},{\"id\":\"5\",\"value\":\"Bugzilla 4 Series\"},{\"id\":\"4\",\"value\":\"JIRA\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"None\"},{\"id\":\"2\",\"value\":\"Zephyr\"},{\"id\":\"5\",\"value\":\"Bugzilla 4 Series\"},{\"id\":\"4\",\"value\":\"JIRA\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 3 }, { "name" : "defect.coverage.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Defects\"},{\"id\":\"0\",\"value\":\"No Defects \"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Defects\"},{\"id\":\"0\",\"value\":\"No Defects \"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 3 }, { "name" : "indexing.search.fuzziness.LOV", "value" : "[{\"name\":\"testcase.name\",\"value\":\"0\"}]", "defaultValue" : "[{\"name\":\"testcase.name\",\"value\":\"0\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "metrics.reports.category.LOV", "value" : "[{\"id\":\"realtime\",\"value\":\"Real Time charts\"},{\"id\":\"trend\",\"value\":\"Trend charts\"},{\"id\":\"custom\",\"value\":\"Custom charts\"}]", "defaultValue" : "[{\"id\":\"realtime\",\"value\":\"Real Time charts\"},{\"id\":\"trend\",\"value\":\"Trend charts\"},{\"id\":\"custom\",\"value\":\"Custom charts\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "metrics.reports.realtime.minorcategory.LOV", "value" : "[{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"},{\"id\":\"req\",\"value\":\"Requirements\"}]", "defaultValue" : "[{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"},{\"id\":\"req\",\"value\":\"Requirements\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "metrics.reports.trend.minorcategory.LOV", "value" : "[{\"id\":\"overall\",\"value\":\"Overall\"},{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"}]", "defaultValue" : "[{\"id\":\"overall\",\"value\":\"Overall\"},{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "project.type.LOV", "value" : "[{\"id\":\"0\",\"value\":\"Normal\"},{\"id\":\"1\",\"value\":\"Restricted\"},{\"id\":\"2\",\"value\":\"Isolated\"}]", "defaultValue" : "[{\"id\":\"0\",\"value\":\"Normal\"},{\"id\":\"1\",\"value\":\"Restricted\"},{\"id\":\"2\",\"value\":\"Isolated\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "projectSetup.projectStatus.LOV", "value" : "[{\"id\":\"2\",\"value\":\"Active\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"New\"},{\"id\":\"2\",\"value\":\"Active\"},{\"id\":\"3\",\"value\":\"Freeze\"},{\"id\":\"4\",\"value\":\"Done\"}]", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "release.releaseStatus.LOV", "value" : "[{\"id\":\"0\",\"value\":\"Visible\"},{\"id\":\"1\",\"value\":\"Invisible\"},{\"id\":\"2\",\"value\":\"Archived\"}]", "defaultValue" : "[{\"id\":\"0\",\"value\":\"Visible\"},{\"id\":\"1\",\"value\":\"Invisible\"},{\"id\":\"2\",\"value\":\"Archived\"}]", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.coverage.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.requirementPriority.LOV", "value" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.LOV", "value" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Requirement Name Change\"}]", "defaultValue" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Requirement Name Change\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.requiredField.byemptyrow.LOV", "value" : "[\"101\"]", "defaultValue" : "[\"101\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.requiredField.byidchange.LOV", "value" : "[\"101\",\"103\"]", "defaultValue" : "[\"101\",\"103\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.requiredField.bytestcasenamechange.LOV", "value" : "[\"101\"]", "defaultValue" : "[\"101\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "resourceManagement.userType.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Employee (FT)\"},{\"id\":\"2\",\"value\":\"Employee(PT)\"},{\"id\":\"3\",\"value\":\"Contractor\"},{\"id\":\"4\",\"value\":\"Temp\"},{\"id\":\"5\",\"value\":\"Intern\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Employee (FT)\"},{\"id\":\"2\",\"value\":\"Employee(PT)\"},{\"id\":\"3\",\"value\":\"Contractor\"},{\"id\":\"4\",\"value\":\"Temp\"},{\"id\":\"5\",\"value\":\"Intern\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "search.customfield.reserved.names.LOV", "value" : "[\"creator\",\"release\",\"releasename\",\"assigneeid\",\"executor\",\"executorid\",\"statusId\",\"tcrCatalogTreeId\",\"tree\",\"treeId\",\"revision\",\"flagged\",\"stateFlag\",\"where\",\"order\",\"group\",\"select\",\"aggregate\",\"by\",\"connect\",\"by\",\"sql\",\"zql\",\"having\",\"project\",\"projectid\",\"time\"]", "defaultValue" : "[\"creator\",\"release\",\"releasename\",\"assigneeid\",\"executor\",\"executorid\",\"statusId\",\"tcrCatalogTreeId\",\"tree\",\"treeId\",\"revision\",\"flagged\",\"stateFlag\",\"where\",\"order\",\"group\",\"select\",\"aggregate\",\"by\",\"connect\",\"by\",\"sql\",\"zql\",\"having\",\"project\",\"projectid\",\"time\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.automated.LOV", "value" : "[{\"id\":\"0\",\"value\":\"Manual\",\"color\":\"#6291AC\"},{\"id\":\"1\",\"value\":\"Automated\",\"color\":\"#C2F123\"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"0\",\"value\":\"Manual\",\"color\":\"#6291AC\"},{\"id\":\"1\",\"value\":\"Automated\",\"color\":\"#C2F123\"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.coverage.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.testcasePriority.LOV", "value" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.LOV", "value" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Testcase Name Change\"}]", "defaultValue" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Testcase Name Change\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.requiredField.byemptyrow.LOV", "value" : "[\"1\",\"2\",\"3\"]", "defaultValue" : "[\"1\",\"2\",\"3\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.requiredField.byidchange.LOV", "value" : "[\"1\",\"2\",\"3\",\"21\"]", "defaultValue" : "[\"1\",\"2\",\"3\",\"21\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.requiredField.bytestcasenamechange.LOV", "value" : "[\"1\",\"2\",\"3\"]", "defaultValue" : "[\"1\",\"2\",\"3\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcasecategorydetail.testcasecategorydetailStatus.LOV", "value" : "[{\"id\":\"1\",\"value\":\"New\"},{\"id\":\"2\",\"value\":\"Partial\"},{\"id\":\"3\",\"value\":\"complete\"},{\"id\":\"4\",\"value\":\"inactive\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"New\"},{\"id\":\"2\",\"value\":\"Partial\"},{\"id\":\"3\",\"value\":\"complete\"},{\"id\":\"4\",\"value\":\"inactive\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testcaseSetup.testcaseStatus.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Created\"},{\"id\":\"2\",\"value\":\"In Progress\"},{\"id\":\"3\",\"value\":\"Ready\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Created\"},{\"id\":\"2\",\"value\":\"In Progress\"},{\"id\":\"3\",\"value\":\"Ready\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testresult.testresultStatus.LOV", "value" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}, {\"id\":\"5\",\"value\":\"Predicted Fail\",\"color\":\"#ba6043\",\"active\":\"true\",\"type\":\"type\"}]", "defaultValue" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testStepResult.testStepResultStatus.LOV", "value" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}]", "defaultValue" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "zie.zephyrFields.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Name *\"},{\"id\":\"2\",\"value\":\"Test Steps *\"},{\"id\":\"3\",\"value\":\"Expected Results *\"},{\"id\":\"21\",\"value\":\"External ID\"},{\"id\":\"22\",\"value\":\"Test Data\"},{\"id\":\"23\",\"value\":\"Priority\"},{\"id\":\"24\",\"value\":\"Category\"},{\"id\":\"25\",\"value\":\"Created By\"},{\"id\":\"26\",\"value\":\"Created On\"},{\"id\":\"27\",\"value\":\"Tags\"},{\"id\":\"28\",\"value\":\"Comments\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Name *\"},{\"id\":\"2\",\"value\":\"Test Steps *\"},{\"id\":\"3\",\"value\":\"Expected Results *\"},{\"id\":\"21\",\"value\":\"External ID\"},{\"id\":\"22\",\"value\":\"Test Data\"},{\"id\":\"23\",\"value\":\"Priority\"},{\"id\":\"24\",\"value\":\"Category\"},{\"id\":\"25\",\"value\":\"Created By\"},{\"id\":\"26\",\"value\":\"Created On\"},{\"id\":\"27\",\"value\":\"Tags\"},{\"id\":\"28\",\"value\":\"Comments\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "execution.status.maxAllowed.VALUE", "value" : "20", "defaultValue" : "20", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "metrics.options.calculateHiddenCycles.VALUE", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "metrics.options.calculateHiddenReleases.VALUE", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "testcase.estimatedTimeToTest.VALUE", "value" : "600", "defaultValue" : "600", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "testcase.move.confirmation.VALUE", "value" : "1=true", "defaultValue" : "1=true", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get All Preferences  [/admin/preference/all]
### Get All Preferences  [GET]
Get all preferences from system based on the logged in user type such as Manager or User.
    



+ Response 200 (application/json application/xml)

        [ { "name" : "admin.api.timeout", "value" : "30", "defaultValue" : "30", "isCustomizable" : true, "editable" : false, "accessLevel" : 2 }, { "name" : "admin.app.company.name", "value" : "Your Company", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.dashboard.url", "value" : "localhost${serverport.forurl}", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.desktop.url", "value" : "localhost${serverport.forurl}", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.gadget.refreshrate", "value" : "240", "defaultValue" : "240", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.app.logo", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.app.setup", "value" : "false", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.system.name", "value" : "Test Department", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.timeout", "value" : "90", "defaultValue" : "90", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.application.selected.skin", "value" : "Carbon", "defaultValue" : "Carbon", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.application.skins", "value" : "Carbon;Classic;Steel", "defaultValue" : "Carbon;Classic;Steel", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "admin.attachment.path", "value" : "${ZEPHYR_DATA}/attachment", "defaultValue" : "${ZEPHYR_DATA}/attachment", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authentication.secondary.auth", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authentication.security.policy", "value" : "Default", "defaultValue" : "Default", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authentication.security.policy.LOV", "value" : "[{\"policyName\":\"Default\",\"description\":\"Default password requires minimum of 4 characters.\",\"minLength\":\"4\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"0\",\"minLowerCase\":\"0\",\"minNumricLength\":\"0\",\"active\":\"true\"},{\"policyName\":\"Strong\",\"description\":\"Strong policy requires password to have minimum of 8 characters with at least 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"8\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"1\",\"minUpperCase\":\"1\",\"minLowerCase\":\"1\",\"minNumricLength\":\"1\",\"active\":\"false\"},{\"policyName\":\"Very Strong\",\"description\":\"Very strong policy requires password to have minimum of 10 characters with at least 2 lowercase letters, 2 uppercase letters, 2 numbers, and 2 special characters out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"10\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"2\",\"minUpperCase\":\"2\",\"minLowerCase\":\"2\",\"minNumricLength\":\"2\",\"active\":\"false\"},{\"policyName\":\"Weak\",\"description\":\"Weak policy requires password to have minimum of 6 characters with at least 1 uppercase letter and 1 number\",\"minLength\":\"6\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"1\",\"minLowerCase\":\"0\",\"minNumricLength\":\"1\",\"active\":\"false\"}]", "defaultValue" : "[{\"policyName\":\"Default\",\"description\":\"Default password requires minimum of 4 characters.\",\"minLength\":\"4\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"0\",\"minLowerCase\":\"0\",\"minNumricLength\":\"0\",\"active\":\"true\"},{\"policyName\":\"Strong\",\"description\":\"Strong policy requires password to have minimum of 8 characters with at least 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"8\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"1\",\"minUpperCase\":\"1\",\"minLowerCase\":\"1\",\"minNumricLength\":\"1\",\"active\":\"false\"},{\"policyName\":\"Very Strong\",\"description\":\"Very strong policy requires password to have minimum of 10 characters with at least 2 lowercase letters, 2 uppercase letters, 2 numbers, and 2 special characters out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"10\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"2\",\"minUpperCase\":\"2\",\"minLowerCase\":\"2\",\"minNumricLength\":\"2\",\"active\":\"false\"},{\"policyName\":\"Weak\",\"description\":\"Weak policy requires password to have minimum of 6 characters with at least 1 uppercase letter and 1 number\",\"minLength\":\"6\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"1\",\"minLowerCase\":\"0\",\"minNumricLength\":\"1\",\"active\":\"false\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "admin.authenticationSystem.crowd.appName", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.crowd.apppwd", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.crowd.url", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.baseDn", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.bindDn", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.bindPassword", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.searchAttribute", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.url", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Internal\"},{\"id\":\"2\",\"value\":\"LDAP\"},{\"id\":\"3\",\"value\":\"Crowd\"},{\"id\":\"4\",\"value\":\"WebService\"},{\"id\":\"5\",\"value\":\"Single Sign-On\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Internal\"},{\"id\":\"2\",\"value\":\"LDAP\"},{\"id\":\"3\",\"value\":\"Crowd\"},{\"id\":\"4\",\"value\":\"WebService\"},{\"id\":\"5\",\"value\":\"Single Sign-On\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.sso.appUrl", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.sso.certificate", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.sso.issuerId", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.type", "value" : "1", "defaultValue" : "1", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authenticationSystem.url", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.collaboration.visible", "value" : "true", "defaultValue" : "true", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.hot.backup.file", "value" : "12", "defaultValue" : "12", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "admin.mail.server.ip", "value" : "0.0.0.0", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.server.password", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.server.port", "value" : "25", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.server.username", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.smtp.auth", "value" : "false", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.smtp.starttls.enable", "value" : "false", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.tcc.nodeacceess.restricted", "value" : "true", "defaultValue" : "true", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.user.lock.attempt.limit", "value" : "10", "defaultValue" : "10", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.user.lock.available", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.user.lock.timeout", "value" : "60", "defaultValue" : "60", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "api.attachment.maxallowed", "value" : "20", "defaultValue" : "10", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "api.attachment.maxsize", "value" : "20971520", "defaultValue" : "20971520", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "api.records.maxallowed", "value" : "400", "defaultValue" : "100", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "bugtracking.system.LOV", "value" : "[{\"id\":\"1\",\"value\":\"None\"},{\"id\":\"2\",\"value\":\"Zephyr\"},{\"id\":\"5\",\"value\":\"Bugzilla 4 Series\"},{\"id\":\"4\",\"value\":\"JIRA\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"None\"},{\"id\":\"2\",\"value\":\"Zephyr\"},{\"id\":\"5\",\"value\":\"Bugzilla 4 Series\"},{\"id\":\"4\",\"value\":\"JIRA\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 3 }, { "name" : "defect.bug.label.preference", "value" : "Defect", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "defect.coverage.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Defects\"},{\"id\":\"0\",\"value\":\"No Defects \"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Defects\"},{\"id\":\"0\",\"value\":\"No Defects \"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 3 }, { "name" : "elastic.index.name", "value" : "zephyr-1536228031088", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "execution.status.maxAllowed.VALUE", "value" : "20", "defaultValue" : "20", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.bulk.batch.size", "value" : "10", "defaultValue" : "10", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.bulk.thread.count", "value" : "5", "defaultValue" : "5", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.full.autostart.triggerPercentage", "value" : "5", "defaultValue" : "5", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.full.batch.size", "value" : "1000", "defaultValue" : "1000", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.full.thread.count", "value" : "3", "defaultValue" : "3", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.normal.batch.size", "value" : "10", "defaultValue" : "10", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.normal.thread.count", "value" : "3", "defaultValue" : "3", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.search.fuzziness.LOV", "value" : "[{\"name\":\"testcase.name\",\"value\":\"0\"}]", "defaultValue" : "[{\"name\":\"testcase.name\",\"value\":\"0\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "mail.smtp.connectiontimeout", "value" : "60000", "defaultValue" : "60000", "isCustomizable" : false, "editable" : false, "accessLevel" : 3 }, { "name" : "mail.smtp.timeout", "value" : "30000", "defaultValue" : "30000", "isCustomizable" : false, "editable" : false, "accessLevel" : 3 }, { "name" : "max.supported.custom.field.count", "value" : "200", "defaultValue" : "200", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "metrics.options.calculateHiddenCycles.VALUE", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "metrics.options.calculateHiddenReleases.VALUE", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "metrics.reports.category.LOV", "value" : "[{\"id\":\"realtime\",\"value\":\"Real Time charts\"},{\"id\":\"trend\",\"value\":\"Trend charts\"},{\"id\":\"custom\",\"value\":\"Custom charts\"}]", "defaultValue" : "[{\"id\":\"realtime\",\"value\":\"Real Time charts\"},{\"id\":\"trend\",\"value\":\"Trend charts\"},{\"id\":\"custom\",\"value\":\"Custom charts\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "metrics.reports.realtime.minorcategory.LOV", "value" : "[{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"},{\"id\":\"req\",\"value\":\"Requirements\"}]", "defaultValue" : "[{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"},{\"id\":\"req\",\"value\":\"Requirements\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "metrics.reports.trend.minorcategory.LOV", "value" : "[{\"id\":\"overall\",\"value\":\"Overall\"},{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"}]", "defaultValue" : "[{\"id\":\"overall\",\"value\":\"Overall\"},{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "notification.disable", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 3 }, { "name" : "project.type.LOV", "value" : "[{\"id\":\"0\",\"value\":\"Normal\"},{\"id\":\"1\",\"value\":\"Restricted\"},{\"id\":\"2\",\"value\":\"Isolated\"}]", "defaultValue" : "[{\"id\":\"0\",\"value\":\"Normal\"},{\"id\":\"1\",\"value\":\"Restricted\"},{\"id\":\"2\",\"value\":\"Isolated\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "projectSetup.projectStatus.LOV", "value" : "[{\"id\":\"2\",\"value\":\"Active\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"New\"},{\"id\":\"2\",\"value\":\"Active\"},{\"id\":\"3\",\"value\":\"Freeze\"},{\"id\":\"4\",\"value\":\"Done\"}]", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "release.releaseStatus.LOV", "value" : "[{\"id\":\"0\",\"value\":\"Visible\"},{\"id\":\"1\",\"value\":\"Invisible\"},{\"id\":\"2\",\"value\":\"Archived\"}]", "defaultValue" : "[{\"id\":\"0\",\"value\":\"Visible\"},{\"id\":\"1\",\"value\":\"Invisible\"},{\"id\":\"2\",\"value\":\"Archived\"}]", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.coverage.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.requirementPriority.LOV", "value" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.LOV", "value" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Requirement Name Change\"}]", "defaultValue" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Requirement Name Change\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.requiredField.byemptyrow.LOV", "value" : "[\"101\"]", "defaultValue" : "[\"101\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.requiredField.byidchange.LOV", "value" : "[\"101\",\"103\"]", "defaultValue" : "[\"101\",\"103\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.requiredField.bytestcasenamechange.LOV", "value" : "[\"101\"]", "defaultValue" : "[\"101\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "resourceManagement.userType.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Employee (FT)\"},{\"id\":\"2\",\"value\":\"Employee(PT)\"},{\"id\":\"3\",\"value\":\"Contractor\"},{\"id\":\"4\",\"value\":\"Temp\"},{\"id\":\"5\",\"value\":\"Intern\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Employee (FT)\"},{\"id\":\"2\",\"value\":\"Employee(PT)\"},{\"id\":\"3\",\"value\":\"Contractor\"},{\"id\":\"4\",\"value\":\"Temp\"},{\"id\":\"5\",\"value\":\"Intern\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "search.customfield.reserved.names.LOV", "value" : "[\"creator\",\"release\",\"releasename\",\"assigneeid\",\"executor\",\"executorid\",\"statusId\",\"tcrCatalogTreeId\",\"tree\",\"treeId\",\"revision\",\"flagged\",\"stateFlag\",\"where\",\"order\",\"group\",\"select\",\"aggregate\",\"by\",\"connect\",\"by\",\"sql\",\"zql\",\"having\",\"project\",\"projectid\",\"time\"]", "defaultValue" : "[\"creator\",\"release\",\"releasename\",\"assigneeid\",\"executor\",\"executorid\",\"statusId\",\"tcrCatalogTreeId\",\"tree\",\"treeId\",\"revision\",\"flagged\",\"stateFlag\",\"where\",\"order\",\"group\",\"select\",\"aggregate\",\"by\",\"connect\",\"by\",\"sql\",\"zql\",\"having\",\"project\",\"projectid\",\"time\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "search.zql.lookup.pagesize", "value" : "20", "defaultValue" : "20", "isCustomizable" : true, "editable" : true, "accessLevel" : 3 }, { "name" : "testcase.automated.LOV", "value" : "[{\"id\":\"0\",\"value\":\"Manual\",\"color\":\"#6291AC\"},{\"id\":\"1\",\"value\":\"Automated\",\"color\":\"#C2F123\"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"0\",\"value\":\"Manual\",\"color\":\"#6291AC\"},{\"id\":\"1\",\"value\":\"Automated\",\"color\":\"#C2F123\"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.coverage.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.estimatedTimeToTest.VALUE", "value" : "600", "defaultValue" : "600", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "testcase.move.confirmation.VALUE", "value" : "1=true", "defaultValue" : "1=true", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "testcase.testcasePriority.LOV", "value" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.LOV", "value" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Testcase Name Change\"}]", "defaultValue" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Testcase Name Change\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.requiredField.byemptyrow.LOV", "value" : "[\"1\",\"2\",\"3\"]", "defaultValue" : "[\"1\",\"2\",\"3\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.requiredField.byidchange.LOV", "value" : "[\"1\",\"2\",\"3\",\"21\"]", "defaultValue" : "[\"1\",\"2\",\"3\",\"21\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.requiredField.bytestcasenamechange.LOV", "value" : "[\"1\",\"2\",\"3\"]", "defaultValue" : "[\"1\",\"2\",\"3\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcasecategorydetail.testcasecategorydetailStatus.LOV", "value" : "[{\"id\":\"1\",\"value\":\"New\"},{\"id\":\"2\",\"value\":\"Partial\"},{\"id\":\"3\",\"value\":\"complete\"},{\"id\":\"4\",\"value\":\"inactive\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"New\"},{\"id\":\"2\",\"value\":\"Partial\"},{\"id\":\"3\",\"value\":\"complete\"},{\"id\":\"4\",\"value\":\"inactive\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testcaseSetup.testcaseStatus.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Created\"},{\"id\":\"2\",\"value\":\"In Progress\"},{\"id\":\"3\",\"value\":\"Ready\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Created\"},{\"id\":\"2\",\"value\":\"In Progress\"},{\"id\":\"3\",\"value\":\"Ready\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testresult.testresultStatus.LOV", "value" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}, {\"id\":\"5\",\"value\":\"Predicted Fail\",\"color\":\"#ba6043\",\"active\":\"true\",\"type\":\"type\"}]", "defaultValue" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testStepResult.testStepResultStatus.LOV", "value" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}]", "defaultValue" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "trend.chart.no.of.days", "value" : "180", "defaultValue" : "180", "isCustomizable" : true, "editable" : true, "accessLevel" : 3 }, { "name" : "user.password.max.history", "value" : "1", "defaultValue" : "1", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "user.password.max.life", "value" : "180", "defaultValue" : "180", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "zephyr.bdd.enabled", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 3 }, { "name" : "zephyr.export.hierarchy.separator", "value" : ">", "defaultValue" : ">", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "zephyr.import.folder.format", "value" : "{fileName}{ext}{MMM:dd:yyyy}{HH:mm:ss}", "defaultValue" : "{fileName}{ext}{MMM:dd:yyyy}{HH:mm:ss}", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "zie.zephyrFields.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Name *\"},{\"id\":\"2\",\"value\":\"Test Steps *\"},{\"id\":\"3\",\"value\":\"Expected Results *\"},{\"id\":\"21\",\"value\":\"External ID\"},{\"id\":\"22\",\"value\":\"Test Data\"},{\"id\":\"23\",\"value\":\"Priority\"},{\"id\":\"24\",\"value\":\"Category\"},{\"id\":\"25\",\"value\":\"Created By\"},{\"id\":\"26\",\"value\":\"Created On\"},{\"id\":\"27\",\"value\":\"Tags\"},{\"id\":\"28\",\"value\":\"Comments\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Name *\"},{\"id\":\"2\",\"value\":\"Test Steps *\"},{\"id\":\"3\",\"value\":\"Expected Results *\"},{\"id\":\"21\",\"value\":\"External ID\"},{\"id\":\"22\",\"value\":\"Test Data\"},{\"id\":\"23\",\"value\":\"Priority\"},{\"id\":\"24\",\"value\":\"Category\"},{\"id\":\"25\",\"value\":\"Created By\"},{\"id\":\"26\",\"value\":\"Created On\"},{\"id\":\"27\",\"value\":\"Tags\"},{\"id\":\"28\",\"value\":\"Comments\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Anonymous Preferences  [/admin/preference/anonymous]
### Get Anonymous Preferences  [GET]
Get all anonymous preferences from database with access level as Anonymous.
    



+ Response 200 (application/json application/xml)

        [ { "name" : "admin.app.gadget.refreshrate", "value" : "240", "defaultValue" : "240", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.app.logo", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.app.timeout", "value" : "90", "defaultValue" : "90", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.application.selected.skin", "value" : "Carbon", "defaultValue" : "Carbon", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.application.skins", "value" : "Carbon;Classic;Steel", "defaultValue" : "Carbon;Classic;Steel", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "admin.attachment.path", "value" : "${ZEPHYR_DATA}/attachment", "defaultValue" : "${ZEPHYR_DATA}/attachment", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authentication.secondary.auth", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authentication.security.policy", "value" : "Default", "defaultValue" : "Default", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authentication.security.policy.LOV", "value" : "[{\"policyName\":\"Default\",\"description\":\"Default password requires minimum of 4 characters.\",\"minLength\":\"4\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"0\",\"minLowerCase\":\"0\",\"minNumricLength\":\"0\",\"active\":\"true\"},{\"policyName\":\"Strong\",\"description\":\"Strong policy requires password to have minimum of 8 characters with at least 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"8\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"1\",\"minUpperCase\":\"1\",\"minLowerCase\":\"1\",\"minNumricLength\":\"1\",\"active\":\"false\"},{\"policyName\":\"Very Strong\",\"description\":\"Very strong policy requires password to have minimum of 10 characters with at least 2 lowercase letters, 2 uppercase letters, 2 numbers, and 2 special characters out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"10\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"2\",\"minUpperCase\":\"2\",\"minLowerCase\":\"2\",\"minNumricLength\":\"2\",\"active\":\"false\"},{\"policyName\":\"Weak\",\"description\":\"Weak policy requires password to have minimum of 6 characters with at least 1 uppercase letter and 1 number\",\"minLength\":\"6\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"1\",\"minLowerCase\":\"0\",\"minNumricLength\":\"1\",\"active\":\"false\"}]", "defaultValue" : "[{\"policyName\":\"Default\",\"description\":\"Default password requires minimum of 4 characters.\",\"minLength\":\"4\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"0\",\"minLowerCase\":\"0\",\"minNumricLength\":\"0\",\"active\":\"true\"},{\"policyName\":\"Strong\",\"description\":\"Strong policy requires password to have minimum of 8 characters with at least 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"8\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"1\",\"minUpperCase\":\"1\",\"minLowerCase\":\"1\",\"minNumricLength\":\"1\",\"active\":\"false\"},{\"policyName\":\"Very Strong\",\"description\":\"Very strong policy requires password to have minimum of 10 characters with at least 2 lowercase letters, 2 uppercase letters, 2 numbers, and 2 special characters out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"10\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"2\",\"minUpperCase\":\"2\",\"minLowerCase\":\"2\",\"minNumricLength\":\"2\",\"active\":\"false\"},{\"policyName\":\"Weak\",\"description\":\"Weak policy requires password to have minimum of 6 characters with at least 1 uppercase letter and 1 number\",\"minLength\":\"6\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"1\",\"minLowerCase\":\"0\",\"minNumricLength\":\"1\",\"active\":\"false\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "admin.authenticationSystem.type", "value" : "1", "defaultValue" : "1", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.hot.backup.file", "value" : "12", "defaultValue" : "12", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "admin.user.lock.attempt.limit", "value" : "10", "defaultValue" : "10", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.user.lock.available", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.user.lock.timeout", "value" : "60", "defaultValue" : "60", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "api.attachment.maxallowed", "value" : "20", "defaultValue" : "10", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "api.attachment.maxsize", "value" : "20971520", "defaultValue" : "20971520", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "api.records.maxallowed", "value" : "400", "defaultValue" : "100", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "elastic.index.name", "value" : "zephyr-1536228031088", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "indexing.search.fuzziness.LOV", "value" : "[{\"name\":\"testcase.name\",\"value\":\"0\"}]", "defaultValue" : "[{\"name\":\"testcase.name\",\"value\":\"0\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "metrics.options.calculateHiddenCycles.VALUE", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "metrics.options.calculateHiddenReleases.VALUE", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "metrics.reports.category.LOV", "value" : "[{\"id\":\"realtime\",\"value\":\"Real Time charts\"},{\"id\":\"trend\",\"value\":\"Trend charts\"},{\"id\":\"custom\",\"value\":\"Custom charts\"}]", "defaultValue" : "[{\"id\":\"realtime\",\"value\":\"Real Time charts\"},{\"id\":\"trend\",\"value\":\"Trend charts\"},{\"id\":\"custom\",\"value\":\"Custom charts\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "metrics.reports.realtime.minorcategory.LOV", "value" : "[{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"},{\"id\":\"req\",\"value\":\"Requirements\"}]", "defaultValue" : "[{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"},{\"id\":\"req\",\"value\":\"Requirements\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "metrics.reports.trend.minorcategory.LOV", "value" : "[{\"id\":\"overall\",\"value\":\"Overall\"},{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"}]", "defaultValue" : "[{\"id\":\"overall\",\"value\":\"Overall\"},{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "project.type.LOV", "value" : "[{\"id\":\"0\",\"value\":\"Normal\"},{\"id\":\"1\",\"value\":\"Restricted\"},{\"id\":\"2\",\"value\":\"Isolated\"}]", "defaultValue" : "[{\"id\":\"0\",\"value\":\"Normal\"},{\"id\":\"1\",\"value\":\"Restricted\"},{\"id\":\"2\",\"value\":\"Isolated\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "projectSetup.projectStatus.LOV", "value" : "[{\"id\":\"2\",\"value\":\"Active\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"New\"},{\"id\":\"2\",\"value\":\"Active\"},{\"id\":\"3\",\"value\":\"Freeze\"},{\"id\":\"4\",\"value\":\"Done\"}]", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "release.releaseStatus.LOV", "value" : "[{\"id\":\"0\",\"value\":\"Visible\"},{\"id\":\"1\",\"value\":\"Invisible\"},{\"id\":\"2\",\"value\":\"Archived\"}]", "defaultValue" : "[{\"id\":\"0\",\"value\":\"Visible\"},{\"id\":\"1\",\"value\":\"Invisible\"},{\"id\":\"2\",\"value\":\"Archived\"}]", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.coverage.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.requirementPriority.LOV", "value" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.LOV", "value" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Requirement Name Change\"}]", "defaultValue" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Requirement Name Change\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.requiredField.byemptyrow.LOV", "value" : "[\"101\"]", "defaultValue" : "[\"101\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.requiredField.byidchange.LOV", "value" : "[\"101\",\"103\"]", "defaultValue" : "[\"101\",\"103\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.requiredField.bytestcasenamechange.LOV", "value" : "[\"101\"]", "defaultValue" : "[\"101\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "resourceManagement.userType.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Employee (FT)\"},{\"id\":\"2\",\"value\":\"Employee(PT)\"},{\"id\":\"3\",\"value\":\"Contractor\"},{\"id\":\"4\",\"value\":\"Temp\"},{\"id\":\"5\",\"value\":\"Intern\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Employee (FT)\"},{\"id\":\"2\",\"value\":\"Employee(PT)\"},{\"id\":\"3\",\"value\":\"Contractor\"},{\"id\":\"4\",\"value\":\"Temp\"},{\"id\":\"5\",\"value\":\"Intern\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "search.customfield.reserved.names.LOV", "value" : "[\"creator\",\"release\",\"releasename\",\"assigneeid\",\"executor\",\"executorid\",\"statusId\",\"tcrCatalogTreeId\",\"tree\",\"treeId\",\"revision\",\"flagged\",\"stateFlag\",\"where\",\"order\",\"group\",\"select\",\"aggregate\",\"by\",\"connect\",\"by\",\"sql\",\"zql\",\"having\",\"project\",\"projectid\",\"time\"]", "defaultValue" : "[\"creator\",\"release\",\"releasename\",\"assigneeid\",\"executor\",\"executorid\",\"statusId\",\"tcrCatalogTreeId\",\"tree\",\"treeId\",\"revision\",\"flagged\",\"stateFlag\",\"where\",\"order\",\"group\",\"select\",\"aggregate\",\"by\",\"connect\",\"by\",\"sql\",\"zql\",\"having\",\"project\",\"projectid\",\"time\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.automated.LOV", "value" : "[{\"id\":\"0\",\"value\":\"Manual\",\"color\":\"#6291AC\"},{\"id\":\"1\",\"value\":\"Automated\",\"color\":\"#C2F123\"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"0\",\"value\":\"Manual\",\"color\":\"#6291AC\"},{\"id\":\"1\",\"value\":\"Automated\",\"color\":\"#C2F123\"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.coverage.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.estimatedTimeToTest.VALUE", "value" : "600", "defaultValue" : "600", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "testcase.move.confirmation.VALUE", "value" : "1=true", "defaultValue" : "1=true", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "testcase.testcasePriority.LOV", "value" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.LOV", "value" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Testcase Name Change\"}]", "defaultValue" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Testcase Name Change\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.requiredField.byemptyrow.LOV", "value" : "[\"1\",\"2\",\"3\"]", "defaultValue" : "[\"1\",\"2\",\"3\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.requiredField.byidchange.LOV", "value" : "[\"1\",\"2\",\"3\",\"21\"]", "defaultValue" : "[\"1\",\"2\",\"3\",\"21\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.requiredField.bytestcasenamechange.LOV", "value" : "[\"1\",\"2\",\"3\"]", "defaultValue" : "[\"1\",\"2\",\"3\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcasecategorydetail.testcasecategorydetailStatus.LOV", "value" : "[{\"id\":\"1\",\"value\":\"New\"},{\"id\":\"2\",\"value\":\"Partial\"},{\"id\":\"3\",\"value\":\"complete\"},{\"id\":\"4\",\"value\":\"inactive\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"New\"},{\"id\":\"2\",\"value\":\"Partial\"},{\"id\":\"3\",\"value\":\"complete\"},{\"id\":\"4\",\"value\":\"inactive\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testcaseSetup.testcaseStatus.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Created\"},{\"id\":\"2\",\"value\":\"In Progress\"},{\"id\":\"3\",\"value\":\"Ready\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Created\"},{\"id\":\"2\",\"value\":\"In Progress\"},{\"id\":\"3\",\"value\":\"Ready\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testresult.testresultStatus.LOV", "value" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}, {\"id\":\"5\",\"value\":\"Predicted Fail\",\"color\":\"#ba6043\",\"active\":\"true\",\"type\":\"type\"}]", "defaultValue" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testStepResult.testStepResultStatus.LOV", "value" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}]", "defaultValue" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "zephyr.export.hierarchy.separator", "value" : ">", "defaultValue" : ">", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "zephyr.import.folder.format", "value" : "{fileName}{ext}{MMM:dd:yyyy}{HH:mm:ss}", "defaultValue" : "{fileName}{ext}{MMM:dd:yyyy}{HH:mm:ss}", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "zie.zephyrFields.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Name *\"},{\"id\":\"2\",\"value\":\"Test Steps *\"},{\"id\":\"3\",\"value\":\"Expected Results *\"},{\"id\":\"21\",\"value\":\"External ID\"},{\"id\":\"22\",\"value\":\"Test Data\"},{\"id\":\"23\",\"value\":\"Priority\"},{\"id\":\"24\",\"value\":\"Category\"},{\"id\":\"25\",\"value\":\"Created By\"},{\"id\":\"26\",\"value\":\"Created On\"},{\"id\":\"27\",\"value\":\"Tags\"},{\"id\":\"28\",\"value\":\"Comments\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Name *\"},{\"id\":\"2\",\"value\":\"Test Steps *\"},{\"id\":\"3\",\"value\":\"Expected Results *\"},{\"id\":\"21\",\"value\":\"External ID\"},{\"id\":\"22\",\"value\":\"Test Data\"},{\"id\":\"23\",\"value\":\"Priority\"},{\"id\":\"24\",\"value\":\"Category\"},{\"id\":\"25\",\"value\":\"Created By\"},{\"id\":\"26\",\"value\":\"Created On\"},{\"id\":\"27\",\"value\":\"Tags\"},{\"id\":\"28\",\"value\":\"Comments\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Daily Back-up Schedule [/admin/backup/schedule]
### Get Daily Back-up Schedule [GET]
Get daily back up schedule timing hour as key and map value shows if its executed daily
    



+ Response 200 (application/json application/xml)

        { "flag" : "false", "hour" : "12" }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get All user preferences  [/admin/ldap/default/settings]
### Get All user preferences  [GET]
Get preferences of current logged in user based on users access level. Preference will be filetered by access type Manager or User 
    



+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Preference by key [/admin/preference{?key}]
### Get Preference by key [GET]
Retrive information of preference with help of current logged in user's access level and preference key.
    

+ Parameters
    + key (required, String) ... Preference name


+ Response 200 (application/json application/xml)

        { "name": "admin.app.company.name", "value": "Company", "isCustomizable": false }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Preference Item Usage [/admin/preference/item/usage{?preferencename}{?value}{?id}]
### Get Preference Item Usage [GET]
Display preferences of item usage based on the query parameters like preference name, value and ID.
    

+ Parameters
    + preferencename (required, String) ... Preference name
    + value (required, String) ... Preference name
    + id (required, String) ... Preference name


+ Response 200 (application/json application/xml)

        1
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get All user preferences  [/admin/user/preference]
### Get All user preferences  [GET]
Get preferences of current logged in user based on users access level. Preference will be filetered by access type Manager or User 
    



+ Response 200 (application/json application/xml)

        [ { "name" : "admin.api.timeout", "value" : "30", "defaultValue" : "30", "isCustomizable" : true, "editable" : false, "accessLevel" : 2 }, { "name" : "admin.app.company.name", "value" : "Your Company", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.dashboard.url", "value" : "localhost${serverport.forurl}", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.desktop.url", "value" : "localhost${serverport.forurl}", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.gadget.refreshrate", "value" : "240", "defaultValue" : "240", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.app.logo", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.app.setup", "value" : "false", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.system.name", "value" : "Test Department", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.app.timeout", "value" : "90", "defaultValue" : "90", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.application.selected.skin", "value" : "Carbon", "defaultValue" : "Carbon", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.application.skins", "value" : "Carbon;Classic;Steel", "defaultValue" : "Carbon;Classic;Steel", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "admin.attachment.path", "value" : "${ZEPHYR_DATA}/attachment", "defaultValue" : "${ZEPHYR_DATA}/attachment", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authentication.secondary.auth", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authentication.security.policy", "value" : "Default", "defaultValue" : "Default", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authentication.security.policy.LOV", "value" : "[{\"policyName\":\"Default\",\"description\":\"Default password requires minimum of 4 characters.\",\"minLength\":\"4\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"0\",\"minLowerCase\":\"0\",\"minNumricLength\":\"0\",\"active\":\"true\"},{\"policyName\":\"Strong\",\"description\":\"Strong policy requires password to have minimum of 8 characters with at least 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"8\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"1\",\"minUpperCase\":\"1\",\"minLowerCase\":\"1\",\"minNumricLength\":\"1\",\"active\":\"false\"},{\"policyName\":\"Very Strong\",\"description\":\"Very strong policy requires password to have minimum of 10 characters with at least 2 lowercase letters, 2 uppercase letters, 2 numbers, and 2 special characters out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"10\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"2\",\"minUpperCase\":\"2\",\"minLowerCase\":\"2\",\"minNumricLength\":\"2\",\"active\":\"false\"},{\"policyName\":\"Weak\",\"description\":\"Weak policy requires password to have minimum of 6 characters with at least 1 uppercase letter and 1 number\",\"minLength\":\"6\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"1\",\"minLowerCase\":\"0\",\"minNumricLength\":\"1\",\"active\":\"false\"}]", "defaultValue" : "[{\"policyName\":\"Default\",\"description\":\"Default password requires minimum of 4 characters.\",\"minLength\":\"4\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"0\",\"minLowerCase\":\"0\",\"minNumricLength\":\"0\",\"active\":\"true\"},{\"policyName\":\"Strong\",\"description\":\"Strong policy requires password to have minimum of 8 characters with at least 1 lowercase letter, 1 uppercase letter, 1 number, and 1 special character out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"8\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"1\",\"minUpperCase\":\"1\",\"minLowerCase\":\"1\",\"minNumricLength\":\"1\",\"active\":\"false\"},{\"policyName\":\"Very Strong\",\"description\":\"Very strong policy requires password to have minimum of 10 characters with at least 2 lowercase letters, 2 uppercase letters, 2 numbers, and 2 special characters out of ~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minLength\":\"10\",\"maxLength\":\"30\",\"specialCharacters\":\"~!@#$%^&*()_-+{}[]<>?/|:;.\",\"minSpecialCharacters\":\"2\",\"minUpperCase\":\"2\",\"minLowerCase\":\"2\",\"minNumricLength\":\"2\",\"active\":\"false\"},{\"policyName\":\"Weak\",\"description\":\"Weak policy requires password to have minimum of 6 characters with at least 1 uppercase letter and 1 number\",\"minLength\":\"6\",\"maxLength\":\"30\",\"specialCharacters\":\"\",\"minSpecialCharacters\":\"0\",\"minUpperCase\":\"1\",\"minLowerCase\":\"0\",\"minNumricLength\":\"1\",\"active\":\"false\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "admin.authenticationSystem.crowd.appName", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.crowd.apppwd", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.crowd.url", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.baseDn", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.bindDn", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.bindPassword", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.searchAttribute", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.ldap.url", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Internal\"},{\"id\":\"2\",\"value\":\"LDAP\"},{\"id\":\"3\",\"value\":\"Crowd\"},{\"id\":\"4\",\"value\":\"WebService\"},{\"id\":\"5\",\"value\":\"Single Sign-On\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Internal\"},{\"id\":\"2\",\"value\":\"LDAP\"},{\"id\":\"3\",\"value\":\"Crowd\"},{\"id\":\"4\",\"value\":\"WebService\"},{\"id\":\"5\",\"value\":\"Single Sign-On\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.sso.appUrl", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.sso.certificate", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.sso.issuerId", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.authenticationSystem.type", "value" : "1", "defaultValue" : "1", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.authenticationSystem.url", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.collaboration.visible", "value" : "true", "defaultValue" : "true", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.hot.backup.file", "value" : "12", "defaultValue" : "12", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "admin.mail.server.ip", "value" : "0.0.0.0", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.server.password", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.server.port", "value" : "25", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.server.username", "value" : "", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.smtp.auth", "value" : "false", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.mail.smtp.starttls.enable", "value" : "false", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "admin.tcc.nodeacceess.restricted", "value" : "true", "defaultValue" : "true", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "admin.user.lock.attempt.limit", "value" : "10", "defaultValue" : "10", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.user.lock.available", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "admin.user.lock.timeout", "value" : "60", "defaultValue" : "60", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "api.attachment.maxallowed", "value" : "20", "defaultValue" : "10", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "api.attachment.maxsize", "value" : "20971520", "defaultValue" : "20971520", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "api.records.maxallowed", "value" : "400", "defaultValue" : "100", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "bugtracking.system.LOV", "value" : "[{\"id\":\"1\",\"value\":\"None\"},{\"id\":\"2\",\"value\":\"Zephyr\"},{\"id\":\"5\",\"value\":\"Bugzilla 4 Series\"},{\"id\":\"4\",\"value\":\"JIRA\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"None\"},{\"id\":\"2\",\"value\":\"Zephyr\"},{\"id\":\"5\",\"value\":\"Bugzilla 4 Series\"},{\"id\":\"4\",\"value\":\"JIRA\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 3 }, { "name" : "defect.bug.label.preference", "value" : "Defect", "isCustomizable" : false, "editable" : true, "accessLevel" : 2 }, { "name" : "defect.coverage.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Defects\"},{\"id\":\"0\",\"value\":\"No Defects \"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Defects\"},{\"id\":\"0\",\"value\":\"No Defects \"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 3 }, { "name" : "elastic.index.name", "value" : "zephyr-1536228031088", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "execution.status.maxAllowed.VALUE", "value" : "20", "defaultValue" : "20", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.bulk.batch.size", "value" : "10", "defaultValue" : "10", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.bulk.thread.count", "value" : "5", "defaultValue" : "5", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.full.autostart.triggerPercentage", "value" : "5", "defaultValue" : "5", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.full.batch.size", "value" : "1000", "defaultValue" : "1000", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.full.thread.count", "value" : "3", "defaultValue" : "3", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.normal.batch.size", "value" : "10", "defaultValue" : "10", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.normal.thread.count", "value" : "3", "defaultValue" : "3", "isCustomizable" : true, "editable" : true, "accessLevel" : 2 }, { "name" : "indexing.search.fuzziness.LOV", "value" : "[{\"name\":\"testcase.name\",\"value\":\"0\"}]", "defaultValue" : "[{\"name\":\"testcase.name\",\"value\":\"0\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "mail.smtp.connectiontimeout", "value" : "60000", "defaultValue" : "60000", "isCustomizable" : false, "editable" : false, "accessLevel" : 3 }, { "name" : "mail.smtp.timeout", "value" : "30000", "defaultValue" : "30000", "isCustomizable" : false, "editable" : false, "accessLevel" : 3 }, { "name" : "max.supported.custom.field.count", "value" : "200", "defaultValue" : "200", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "metrics.options.calculateHiddenCycles.VALUE", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "metrics.options.calculateHiddenReleases.VALUE", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "metrics.reports.category.LOV", "value" : "[{\"id\":\"realtime\",\"value\":\"Real Time charts\"},{\"id\":\"trend\",\"value\":\"Trend charts\"},{\"id\":\"custom\",\"value\":\"Custom charts\"}]", "defaultValue" : "[{\"id\":\"realtime\",\"value\":\"Real Time charts\"},{\"id\":\"trend\",\"value\":\"Trend charts\"},{\"id\":\"custom\",\"value\":\"Custom charts\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "metrics.reports.realtime.minorcategory.LOV", "value" : "[{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"},{\"id\":\"req\",\"value\":\"Requirements\"}]", "defaultValue" : "[{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"},{\"id\":\"req\",\"value\":\"Requirements\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "metrics.reports.trend.minorcategory.LOV", "value" : "[{\"id\":\"overall\",\"value\":\"Overall\"},{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"}]", "defaultValue" : "[{\"id\":\"overall\",\"value\":\"Overall\"},{\"id\":\"tcc\",\"value\":\"Testcase Creation\"},{\"id\":\"tce\",\"value\":\"Testcase Execution\"},{\"id\":\"defect\",\"value\":\"Defect\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "notification.disable", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 3 }, { "name" : "project.type.LOV", "value" : "[{\"id\":\"0\",\"value\":\"Normal\"},{\"id\":\"1\",\"value\":\"Restricted\"},{\"id\":\"2\",\"value\":\"Isolated\"}]", "defaultValue" : "[{\"id\":\"0\",\"value\":\"Normal\"},{\"id\":\"1\",\"value\":\"Restricted\"},{\"id\":\"2\",\"value\":\"Isolated\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "projectSetup.projectStatus.LOV", "value" : "[{\"id\":\"2\",\"value\":\"Active\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"New\"},{\"id\":\"2\",\"value\":\"Active\"},{\"id\":\"3\",\"value\":\"Freeze\"},{\"id\":\"4\",\"value\":\"Done\"}]", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "release.releaseStatus.LOV", "value" : "[{\"id\":\"0\",\"value\":\"Visible\"},{\"id\":\"1\",\"value\":\"Invisible\"},{\"id\":\"2\",\"value\":\"Archived\"}]", "defaultValue" : "[{\"id\":\"0\",\"value\":\"Visible\"},{\"id\":\"1\",\"value\":\"Invisible\"},{\"id\":\"2\",\"value\":\"Archived\"}]", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.coverage.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.requirementPriority.LOV", "value" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.LOV", "value" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Requirement Name Change\"}]", "defaultValue" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Requirement Name Change\"}]", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.requiredField.byemptyrow.LOV", "value" : "[\"101\"]", "defaultValue" : "[\"101\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.requiredField.byidchange.LOV", "value" : "[\"101\",\"103\"]", "defaultValue" : "[\"101\",\"103\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "requirement.zie.zephyrFields.discriminator.requiredField.bytestcasenamechange.LOV", "value" : "[\"101\"]", "defaultValue" : "[\"101\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "resourceManagement.userType.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Employee (FT)\"},{\"id\":\"2\",\"value\":\"Employee(PT)\"},{\"id\":\"3\",\"value\":\"Contractor\"},{\"id\":\"4\",\"value\":\"Temp\"},{\"id\":\"5\",\"value\":\"Intern\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Employee (FT)\"},{\"id\":\"2\",\"value\":\"Employee(PT)\"},{\"id\":\"3\",\"value\":\"Contractor\"},{\"id\":\"4\",\"value\":\"Temp\"},{\"id\":\"5\",\"value\":\"Intern\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "search.customfield.reserved.names.LOV", "value" : "[\"creator\",\"release\",\"releasename\",\"assigneeid\",\"executor\",\"executorid\",\"statusId\",\"tcrCatalogTreeId\",\"tree\",\"treeId\",\"revision\",\"flagged\",\"stateFlag\",\"where\",\"order\",\"group\",\"select\",\"aggregate\",\"by\",\"connect\",\"by\",\"sql\",\"zql\",\"having\",\"project\",\"projectid\",\"time\"]", "defaultValue" : "[\"creator\",\"release\",\"releasename\",\"assigneeid\",\"executor\",\"executorid\",\"statusId\",\"tcrCatalogTreeId\",\"tree\",\"treeId\",\"revision\",\"flagged\",\"stateFlag\",\"where\",\"order\",\"group\",\"select\",\"aggregate\",\"by\",\"connect\",\"by\",\"sql\",\"zql\",\"having\",\"project\",\"projectid\",\"time\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "search.zql.lookup.pagesize", "value" : "20", "defaultValue" : "20", "isCustomizable" : true, "editable" : true, "accessLevel" : 3 }, { "name" : "testcase.automated.LOV", "value" : "[{\"id\":\"0\",\"value\":\"Manual\",\"color\":\"#6291AC\"},{\"id\":\"1\",\"value\":\"Automated\",\"color\":\"#C2F123\"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"0\",\"value\":\"Manual\",\"color\":\"#6291AC\"},{\"id\":\"1\",\"value\":\"Automated\",\"color\":\"#C2F123\"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.coverage.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Covered\",\"color\":\"#9999CC\"},{\"id\":\"0\",\"value\":\"Not Covered\",\"color\":\"#CCFFCC\"},{\"id\":\"2\",\"value\":\"All\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.estimatedTimeToTest.VALUE", "value" : "600", "defaultValue" : "600", "isCustomizable" : true, "editable" : true, "accessLevel" : 1 }, { "name" : "testcase.move.confirmation.VALUE", "value" : "1=true", "defaultValue" : "1=true", "isCustomizable" : false, "editable" : true, "accessLevel" : 1 }, { "name" : "testcase.testcasePriority.LOV", "value" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"P1\"},{\"id\":\"2\",\"value\":\"P2\"},{\"id\":\"3\",\"value\":\"P3\"},{\"id\":\"4\",\"value\":\"P4\"},{\"id\":\"5\",\"value\":\"P5\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.LOV", "value" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Testcase Name Change\"}]", "defaultValue" : "[{\"id\":\"byemptyrow\",\"value\":\"By empty Row\"},{\"id\":\"byidchange\",\"value\":\"By ID Change\"},{\"id\":\"bytestcasenamechange\",\"value\":\"By Testcase Name Change\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.requiredField.byemptyrow.LOV", "value" : "[\"1\",\"2\",\"3\"]", "defaultValue" : "[\"1\",\"2\",\"3\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.requiredField.byidchange.LOV", "value" : "[\"1\",\"2\",\"3\",\"21\"]", "defaultValue" : "[\"1\",\"2\",\"3\",\"21\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcase.zie.zephyrFields.discriminator.requiredField.bytestcasenamechange.LOV", "value" : "[\"1\",\"2\",\"3\"]", "defaultValue" : "[\"1\",\"2\",\"3\"]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "testcasecategorydetail.testcasecategorydetailStatus.LOV", "value" : "[{\"id\":\"1\",\"value\":\"New\"},{\"id\":\"2\",\"value\":\"Partial\"},{\"id\":\"3\",\"value\":\"complete\"},{\"id\":\"4\",\"value\":\"inactive\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"New\"},{\"id\":\"2\",\"value\":\"Partial\"},{\"id\":\"3\",\"value\":\"complete\"},{\"id\":\"4\",\"value\":\"inactive\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testcaseSetup.testcaseStatus.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Created\"},{\"id\":\"2\",\"value\":\"In Progress\"},{\"id\":\"3\",\"value\":\"Ready\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Created\"},{\"id\":\"2\",\"value\":\"In Progress\"},{\"id\":\"3\",\"value\":\"Ready\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testresult.testresultStatus.LOV", "value" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}, {\"id\":\"5\",\"value\":\"Predicted Fail\",\"color\":\"#ba6043\",\"active\":\"true\",\"type\":\"type\"}]", "defaultValue" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "testStepResult.testStepResultStatus.LOV", "value" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}]", "defaultValue" : "[{\"id\":\"10\",\"value\":\"Change Status\",\"color\":\"#9E987D\",\"active\":\"true\"},{\"id\":\"1\",\"value\":\"Pass\",\"color\":\"#75B000\",\"active\":\"true\"},{\"id\":\"2\",\"value\":\"Fail\",\"color\":\"#CC3300\",\"active\":\"true\"},{\"id\":\"3\",\"value\":\"WIP\",\"color\":\"#F2B000\",\"active\":\"true\"},{\"id\":\"4\",\"value\":\"Blocked\",\"color\":\"#6693B0\",\"active\":\"true\"}]", "isCustomizable" : true, "editable" : false, "accessLevel" : 1 }, { "name" : "trend.chart.no.of.days", "value" : "180", "defaultValue" : "180", "isCustomizable" : true, "editable" : true, "accessLevel" : 3 }, { "name" : "user.password.max.history", "value" : "1", "defaultValue" : "1", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "user.password.max.life", "value" : "180", "defaultValue" : "180", "isCustomizable" : false, "editable" : true, "accessLevel" : 3 }, { "name" : "zephyr.bdd.enabled", "value" : "false", "defaultValue" : "false", "isCustomizable" : true, "editable" : true, "accessLevel" : 3 }, { "name" : "zephyr.export.hierarchy.separator", "value" : ">", "defaultValue" : ">", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "zephyr.import.folder.format", "value" : "{fileName}{ext}{MMM:dd:yyyy}{HH:mm:ss}", "defaultValue" : "{fileName}{ext}{MMM:dd:yyyy}{HH:mm:ss}", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 }, { "name" : "zie.zephyrFields.LOV", "value" : "[{\"id\":\"1\",\"value\":\"Name *\"},{\"id\":\"2\",\"value\":\"Test Steps *\"},{\"id\":\"3\",\"value\":\"Expected Results *\"},{\"id\":\"21\",\"value\":\"External ID\"},{\"id\":\"22\",\"value\":\"Test Data\"},{\"id\":\"23\",\"value\":\"Priority\"},{\"id\":\"24\",\"value\":\"Category\"},{\"id\":\"25\",\"value\":\"Created By\"},{\"id\":\"26\",\"value\":\"Created On\"},{\"id\":\"27\",\"value\":\"Tags\"},{\"id\":\"28\",\"value\":\"Comments\"}]", "defaultValue" : "[{\"id\":\"1\",\"value\":\"Name *\"},{\"id\":\"2\",\"value\":\"Test Steps *\"},{\"id\":\"3\",\"value\":\"Expected Results *\"},{\"id\":\"21\",\"value\":\"External ID\"},{\"id\":\"22\",\"value\":\"Test Data\"},{\"id\":\"23\",\"value\":\"Priority\"},{\"id\":\"24\",\"value\":\"Category\"},{\"id\":\"25\",\"value\":\"Created By\"},{\"id\":\"26\",\"value\":\"Created On\"},{\"id\":\"27\",\"value\":\"Tags\"},{\"id\":\"28\",\"value\":\"Comments\"}]", "isCustomizable" : false, "editable" : false, "accessLevel" : 1 } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Add values for Picklist custom field [/admin/preference]
### Add values for Picklist custom field [PUT]
To update a given preference.

<p>Note:-</p>

testcase.zcf_1029.Lov - is the field name of the created picklist custom field appended with entity name
    


+ Request (application/json application/xml)

        {
          "value": "[{\"value\":\"option1\",\"id\":\"1\"},{\"value\":\"option2\",\"id\":\"2\"},{\"value\":\"option3\",\"id\":\"3\"},{\"value\":\"option4\",\"id\":\"4\"}]",
          "accessLevel": 0,
          "defaultValue": "[{\"value\":\"option1\",\"id\":\"1\"},{\"value\":\"option2\",\"id\":\"2\"},{\"value\":\"option3\",\"id\":\"3\"},{\"value\":\"option4\",\"id\":\"4\"}]",
          "editable": true,
          "isCustomizable": true,
          "name": "testcase.zcf_1029.LOV"
        }

+ Response 200 (application/json application/xml)

        {
          "name": "testcase.zcf_1029.LOV",
          "value": "[{\"value\":\"option1\",\"id\":\"1\"},{\"value\":\"option2\",\"id\":\"2\"},{\"value\":\"option3\",\"id\":\"3\"},{\"value\":\"option4\",\"id\":\"4\"}]",
          "defaultValue": "[{\"value\":\"option1\",\"id\":\"1\"},{\"value\":\"option2\",\"id\":\"2\"},{\"value\":\"option3\",\"id\":\"3\"},{\"value\":\"option4\",\"id\":\"4\"}]",
          "isCustomizable": true,
          "editable": true,
          "accessLevel": 0
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation.
+ Response 500 (application/json application/xml)

        Unknown Internal Error


# Group AssignmentTree
The following is a section of resources related to the Assignment tree/ Frozen TCRCatalog

## Assign Testcase to User for Execution [/assignmenttree/{cyclephaseid}/bulk/tree/{treeid}/from/{fromid}/to/{toid}{?cascade}{?easmode}]
### Assign Testcase to User for Execution [PUT]
Bulk update assignments with respect to cyclephase and tree

Notes:-

cyclePhaseId = Id of the cycle phase that will get when creating cycle phase

tcrCatalogTreeId = tcrcatalogtree that will get when Creating Cycle Phase

fromid and toid = id of user for whom the testcase needs to be assigned

cascade(boolean) = True(it will assign the Testcase to subfolder also) false( It will assign to only current folder)
The response will be Empty
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>execution </td>
                <td>update </td>
                <td>/execution/{treeid} </td>
            </tr>
                    <tr>
                <td>execution </td>
                <td>delete </td>
                <td>/execution/{treeid} </td>
            </tr>
                    <tr>
                <td>execution </td>
                <td>add </td>
                <td>/execution/{treeid} </td>
            </tr>
            </table>
    
+ Parameters
    + treeid (required, Long) ... tcr catalog tree id
    + cyclephaseid (required, Long) ... cycle phase id
    + toid (required, Long) ... Update to testerId, use -10 for anyone and 0 to delete assignments 
    + fromid (required, Long) ... current testerid, use -10 for anyone 

+ Parameters
    + cascade (optional, Boolean) ... true if cascade to sub nodes, default false
    + easmode (required, Integer) ... EAS mode, easMode - (ASSIGN_ALL,ASSIGN_UNASSIGNED ,RESSIGN_UNEXECUTED) default 2


+ Response 200 (application/json application/xml)

        {"Add":[],"Delete":[],"Update":[{"id":71,"assignmentDate":"2017-05-03","status":"1","testerId":2,"tcrTreeTestcase":{"id":36,"tcrCatalogTreeId":18,"testcase":{"id":14,"name":"Untitled","description":"","lastModifiedOn":1493279792000,"creationDate":1493231400000,"tcCreationDate":"04/27/2017","isComplex":false,"estimatedTime":600,"writerId":0,"creatorId":1,"lastUpdaterId":0,"oldId":0,"automated":true,"scriptId":"f","scriptName":"ff","scriptPath":"f","requirementIds":[],"attachmentCount":0,"releaseId":3,"automatedDefault":true},"revision":24,"stateFlag":1,"lastModifiedOn":1493820713000,"original":false},"cyclePhaseId":31,"defects":[],"attachmentCount":0,"lastModifiedOn":1493820641000}]}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Add testcase to free form phase via release test schedule [/assignmenttree/{cyclephaseid}/assign/byschedule{?maxresults}{?scheduleids}{?maintainassignments}{?parenttreeid}{?includehierarchy}{?isCreateWithLatestVersion}]
### Add testcase to free form phase via release test schedule [POST]
Create free form release testschedule. includehierarchy- default is false, maxResults default is 10

Notes:-

maintainassignments = true or false. If true → will add testcase with assignment. If false → it will be as Unassigned

includehierarchy = value can be true or false. If True, will add in a tree structure as present in Test Repository. If False, will add testcase to free form phase which is the Parent node

parenttreeid = tree id of free form phase which we get from the response of add phase to cycle

isCreateWithLatestVersion = true or false. If true → will add testcase with latest version. If false will add testcase with the version that is linked in test execution

scheduleids = it is the execution id. Will get in the response of when we assign the Testcase to User. Multiple values can be passed as scheduleids=1&scheduleids =2&scheduleids =3 and so on
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>execution </td>
                <td>add </td>
                <td>/assignmentTree/{cyclePhaseId} </td>
            </tr>
                    <tr>
                <td>execution </td>
                <td>update </td>
                <td>/assignmentTree/{cyclePhaseId} </td>
            </tr>
            </table>
    
+ Parameters
    + cyclephaseid (required, Long) ... Cycle phase id

+ Parameters
    + maxresults (optional, int) ... Max results for search to include
    + scheduleids (required, List) ... Release test Schedule ids
    + maintainassignments (optional, boolean) ... Tree if maintain assignments 
    + parenttreeid (required, Long) ... Parent tree id
    + includehierarchy (optional, boolean) ... True if hierarchy is to be included
    + isCreateWithLatestVersion (optional, boolean) ... True if hierarchy is to be included

+ Request (application/json application/xml)

        {
          "ids": [
            11,
            12,
            13,
            14,
            15,
            16,
            17
          ]
        }

+ Response 200 (application/json application/xml)

        "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cTCRCatalogTree frozenId\u003d\"2\" frozenName\u003d\"aa\" sourceId\u003d\"2\" sourceName\u003d\"aa\" selected\u003d\"true\" action\u003d\"modified\" testcases_added\u003d\"5\" testcases_deleted\u003d\"0\" testcases_ignored\u003d\"2\" testcases_added_cumulative\u003d\"5\" testcases_deleted_cumulative\u003d\"0\" testcases_ignored_cumulative\u003d\"2\"\u003e\u003cTestcases/\u003e\u003c/TCRCatalogTree\u003e"
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Add Testcase to Free form phase [/assignmenttree/{cyclephaseid}/assign/bytree/{parenttreeid}{?includehierarchy}]
### Add testcase to free form phase via tree [POST]
Create free form testcase from tree

Notes:-

treeid = tree id which needs to be added to free form phase (The one present in Test Repository)

cyclephaseid = will get from the response of add phase to cycle

parenttreeid = tree id of free form phase which we get from the response of add phase to cycle

includehierarchy = value can be true or false. If True, will add in a tree structure as present in Test Repository. If False, will add testcase to free form phase (Parent node)
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>execution </td>
                <td>add </td>
                <td>/assignmentTree/{cyclePhaseId} </td>
            </tr>
                    <tr>
                <td>execution </td>
                <td>update </td>
                <td>/assignmentTree/{cyclePhaseId} </td>
            </tr>
            </table>
    
+ Parameters
    + cyclephaseid (required, Long) ... Cycle phase id
    + parenttreeid (required, Long) ... Parent tree id, not required if includeHierarchy is true

+ Parameters
    + includehierarchy (required, boolean) ... True if hierarchy is to be included

+ Request (application/json application/xml)

        [
          {
            "treeid": 8,
            "tctIds": [],
            "isExclusion": false
          },
          {
            "treeid": 9,
            "tctIds": [],
            "isExclusion": false
          }
        ]

+ Response 200 (application/json application/xml)

        "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cTCRCatalogTree frozenId\u003d\"2\" frozenName\u003d\"aa\" sourceId\u003d\"2\" sourceName\u003d\"aa\" selected\u003d\"true\" action\u003d\"modified\" testcases_added\u003d\"5\" testcases_deleted\u003d\"0\" testcases_ignored\u003d\"3\" testcases_added_cumulative\u003d\"5\" testcases_deleted_cumulative\u003d\"0\" testcases_ignored_cumulative\u003d\"3\"\u003e\u003cTestcases/\u003e\u003c/TCRCatalogTree\u003e"
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Add testcase to free form phase via Search [/assignmenttree/{cyclephaseid}/assign/bysearch/{parenttreeid}{?searchquery}{?maxresults}{?testcaseid}{?zql}{?activeprojectid}{?includehierarchy}]
### Add testcase to free form phase via Search [POST]
Add testcase for schedule from search, includehierarchy- default is false, maxResults default is 10

Notes:-

Other Search parameters are: estimatedTime, testcaseid, tag, creator, release, project, priority, altid, automated, folder, contents, comments, name and custom fields

cyclephaseid = will get from the response of add phase to cycle

parenttreeid = tree id of free form phase which we get from the response of add phase to cycle

includehierarchy = value can be true or false. If True, will add in a tree structure as present in Test Repository. If False, will add testcase to free form phase (Parent node)

maxresults = will fetch results accordingly (If given 10, will fetch only 10 records)

zql = can be true or false, If true → need to provide zql query in the searchquery parameter. If false, can perform basic search. Need to add search criteria in searchquery parameter
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>execution </td>
                <td>add </td>
                <td>/assignmentTree/{cyclePhaseId} </td>
            </tr>
                    <tr>
                <td>execution </td>
                <td>update </td>
                <td>/assignmentTree/{cyclePhaseId} </td>
            </tr>
            </table>
    
+ Parameters
    + cyclephaseid (required, Long) ... Cycle phase id
    + parenttreeid (required, Long) ... Parent tree id 

+ Parameters
    + searchquery (required, String) ... Search query
    + maxresults (optional, Integer) ... Max results to add
    + testcaseid (required, List) ... testcase Ids 
    + zql (optional, Boolean) ... True if this is a Zql search
    + activeprojectid (optional, Long) ... If Zql search active project id is required
    + includehierarchy (optional, Boolean) ... true if tree hierarchy should be inlcuded

+ Request (application/json application/xml)

        {
          "ids": [
            101,
            102
          ]
        }

+ Response 200 (application/json application/xml)

        "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\n\u003cTCRCatalogTree frozenId\u003d\"2\" frozenName\u003d\"aa\" sourceId\u003d\"2\" sourceName\u003d\"aa\" selected\u003d\"true\" action\u003d\"modified\" testcases_added\u003d\"2\" testcases_deleted\u003d\"0\" testcases_ignored\u003d\"5\" testcases_added_cumulative\u003d\"2\" testcases_deleted_cumulative\u003d\"0\" testcases_ignored_cumulative\u003d\"5\"\u003e\u003cTestcases/\u003e\u003c/TCRCatalogTree\u003e"
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group Attachment
The following API is related to Attachments.

## Get Attachment Details by id [/attachment/{id}]
### Get Attachment Details by id [GET]
To get Attachment Details with respect to ID.
    
+ Parameters
    + id (required, Long) ... Get the Attachment Details by ID



+ Response 200 (application/json application/xml)

        {"id":1,"refId":"771407cf-efd1-11e3-b835-00ff53d10427","name":"someFile.txt","description":"","timeStamp":"Jul 19, 2013 12:00:00 AM","itemId":1,"itemType":"testcase","createdBy":1,"contentType":"application/octet-stream","fileSize":"33"}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get attachment details [/attachment{?itemid}{?type}{?isLink}]
### Get attachment details [GET]
To get attachment details. This Filters the attachments by Item ID AND Type (Eg- Report, Testcase, Requirement etc.) and then returns a List of Attachments.
    

+ Parameters
    + itemid (required, Long) ... To Filter by Item ID
    + type (required, String) ... To filter by Type
    + isLink (optional, Boolean) ... link attachments


+ Response 200 (application/json application/xml)

        [{"id":1,"refId":"771407cf-efd1-11e3-b835-00ff53d10427","name":"someFile.txt","timeStamp":1374230695000,"itemId":1,"itemType":"testcase","createdBy":1,"contentType":"application/octet-stream","fileSize":"33"}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error


# Group Cycle
The following API is for performing operations on the Cycle and Cycle Phase.

## Calculate assignments for release [/cycle/assignments/{releaseid}{?allexecutions}]
### Calculate assignments for release [GET]
Get User to Cycle Assignments for a given release, Will return a Map of User to cycle assignments. If at least one schedule is assigned to the User then the Cycle will be considered to be assigned to the User.
    
+ Parameters
    + releaseid (required, Long) ... releaseID to get User to Cycle Assignments 

+ Parameters
    + allexecutions (optional, Boolean) ... Fetch for all users


+ Response 200 (application/json application/xml)

        { "cyclePhase" : [ 2, 3, 20 ], "cycle" : [ 2 ] }
+ Response 400 (application/json application/xml)

        Bad request. User does not have access to this release.
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Clone a Cycle  [/cycle/clone/{cycleid}{?deep}{?copyassignments}]
### Clone a Cycle  [POST]
Clone a Cycle by cycleId
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>cycle </td>
                <td>add </td>
                <td>/cycle/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + cycleid (required, Long) ... Cycle ID needed to clone a cycle

+ Parameters
    + deep (optional, Boolean) ... Deep cloning including Cyclephase
    + copyassignments (optional, Boolean) ... Deep cloning including Assignments

+ Request (application/json application/xml)

        {"cycleStartDate":"01/01/2018","cycleEndDate":"01/31/2018","releaseId":1,"id":4,"cyclePhases":[{"id":4,"name":"testcase","tcrCatalogTreeId":11,"freeForm":false,"startDate":1514745000000,"endDate":1517337000000,"createdOn":1516902081000,"cycleId":4,"phaseStartDate":"01/01/2018","phaseEndDate":"01/31/2018"}],"status":0,"startDate":1514745000000,"endDate":1517337000000,"name":"clone_clone_cycle","build":"","environment":""}

+ Response 200 (application/json application/xml)

        {"id":3,"name":"zephyr","startDate":"Nov 19, 2017 11:31:50 PM","endDate":"Nov 19, 2017 11:31:50 PM","cycleStartDate":"11/19/2017","cycleEndDate":"11/19/2017","status":0,"revision":5,"releaseId":1,"cyclePhases":[],"createdOn":"Nov 19, 2017 11:31:51 PM"}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Clone a Cycle Phase [/cycle/cyclephase/clone/{cyclephaseid}]
### Clone a Cycle Phase [POST]
Clone a cycle Phase by cyclePhaseId
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>cycle_phase </td>
                <td>add </td>
                <td>/cycle/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + cyclephaseid (required, Long) ... cycleiPhaseid 



+ Response 200 (application/json application/xml)

        {"id":86,"tcrCatalogTreeId":428,"freeForm":false,"startDate":"Jul 16, 2013 12:00:00 AM","endDate":"Jul 30, 2013 12:00:00 AM","createdOn":"Jun 3, 2016 11:26:24 AM"}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## copy a Cycle Phase [/cycle/copy/{sourcecyclephaseid}/to/{targetcycleid}]
### copy a Cycle Phase [POST]
copy a cycle Phase from one cycle to another cycle
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>cycle_phase </td>
                <td>add </td>
                <td>/cycle/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + sourcecyclephaseid (required, Long) ... cycleiPhaseid 
    + targetcycleid (required, Long) ... release if of testcases


+ Request (application/json application/xml)

        {
          "startDate": 1597343400000,
          "endDate": 1597948200000,
          "phaseStartDate": "08/14/2020",
          "phaseEndDate": "08/21/2020",
          "resetExecution": false,
          "tcrCatalogTreeId": 160
        }

+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Create New Cycle [/cycle/]
### Create Cycle [POST]
Create a new cycle

Notes:-

name = cycle name

build = build number

releaseId = release id where need to create the cycle
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>cycle </td>
                <td>add </td>
                <td>/cycle/{releaseid} </td>
            </tr>
            </table>
    


+ Request (application/json application/xml)

        {"name":"zephyr","cycleStartDate":"07/09/2019","cycleEndDate":"07/22/2019","status":1,"releaseId":5,"cyclePhases":[],"createdOn":1562668881250}

+ Response 200 (application/json application/xml)

        {"id":8,"name":"zephyr","startDate":1562610600000,"endDate":1563733800000,"cycleStartDate":"07/09/2019","cycleEndDate":"07/22/2019","status":1,"revision":10,"releaseId":5,"cyclePhases":[],"createdOn":1562668935969}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Create Cycle Phase [/cycle/{cycleid}/phase{?scheduleId}]
### Create Cycle Phase [POST]
Create a new cyclePhase by cycleId
        
Notes:-

PhaseStartDate = Should be within Cycle Start date

PhaseEndDate = Should be within Cycle EndDate

freeForm(boolean) = true

name  = Cycle Phase Name
<p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>cycle_phase </td>
                <td>add </td>
                <td>/cycle/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + cycleid (required, Long) ... cycleid 

+ Parameters
    + scheduleId (optional, Long) ... Automation Job Schedule ID

+ Request (application/json application/xml)

            {"phaseStartDate":"08/17/2020","phaseEndDate":"08/30/2020","releaseId":12,"name":"new Phase Z","freeForm":true}

+ Response 200 (application/json application/xml)

        { "id" : 36, "name" : "new Phase Z", "tcrCatalogTreeId" : 177, "freeForm" : true, "startDate" : 1597602600000, "endDate" : 1598725800000, "createdOn" : 1597652001000, "cycleId" : 40, "phaseStartDate" : "08/17/2020", "phaseEndDate" : "08/30/2020", "resetExecution" : false }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Delete Cycle [/cycle/{id}]
### Delete Cycle [DELETE]
Delete cycle and its phases by cycleId
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>cycle </td>
                <td>delete </td>
                <td>/cycle/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + id (required, Long) ... Cycle ID is needed to delete that cycle



+ Response 200 (application/json application/xml)

        true
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Delete Cycle Phase [/cycle/{cycleid}/phase/{cyclephaseid}]
### Delete Cycle Phase [DELETE]
Delete cycle phases by cyclePhaseId
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>cycle_phase </td>
                <td>subscribe </td>
                <td>/cycle/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + cycleid (required, Long) ... Cycle ID of the cycle 
    + cyclephaseid (required, Long) ... Cycle Phase ID to delete



+ Response 200 (application/json application/xml)

        true
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Cycle by ID [/cycle/{cycleId}]
### Get Cycle by ID [GET]
Get Cycle Details by cycleId
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>cycle </td>
                <td>subscribe </td>
                <td>/cycle/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + cycleId (required, Long) ... Cycle ID is needed to fetch that Cycle



+ Response 200 (application/json application/xml)

        {"id":3,"build":"b1.1","name":"Cycle3 with Build1.1","startDate":"Jul 15, 2013 12:00:00 AM","endDate":"Jul 26, 2013 12:00:00 AM","status":0,"revision":5,"releaseId":3,"cyclePhases":[],"createdOn":"Jul 16, 2013 9:01:53 AM"}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Cycle names for release [/cycle/cycleName/{releaseid}{?orderBy}{?cycleName}]
### Get Cycle names for release [GET]
Get cycle names for release with respect to releaseid
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>cycle </td>
                <td>subscribe </td>
                <td>/cycle/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + releaseid (required, Long) ... Needs Release ID to get the required cycle

+ Parameters
    + orderBy (required, String) ...  based on what the cycles must be storted 
    + cycleName (required, String) ... cycle name 


+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get all cyclePhase Names [/cycle/phase/name{?ids}]
### Get all cyclePhase Names [GET]
Get all cyclePhase names and IDs only
    

+ Parameters
    + ids (required, List) ... Cycle Phase IDs


+ Response 200 (application/json application/xml)

        [{"id":65,"environment":"UAT","build":"b2","name":"Cycle2 with Build2","startDate":1373826600000,"endDate":1375209000000,"status":0,"revision":49,"releaseId":1,"cyclePhases":[],"createdOn":1464933385000},{"id":1,"environment":"Dev","build":"b1","name":"zephyr-02","startDate":1373826600000,"endDate":1375209000000,"status":0,"revision":3,"releaseId":1,"cyclePhases":[{"id":35,"name":"Phase1","tcrCatalogTreeId":168,"freeForm":false,"startDate":1373826600000,"endDate":1375209000000,"createdOn":1374085800000,"cycleId":1},{"id":87,"name":"phase1","tcrCatalogTreeId":429,"freeForm":true,"startDate":1375209000000,"endDate":1375209000000,"createdOn":1464933386000,"cycleId":1},{"id":36,"name":"Phase11","tcrCatalogTreeId":173,"freeForm":false,"startDate":1373826600000,"endDate":1375209000000,"createdOn":1374085800000,"cycleId":1}],"createdOn":1373913000000},{"id":2,"environment":"UAT","build":"b2","name":"Cycle2 with Build2","startDate":1373826600000,"endDate":1375209000000,"status":0,"revision":4,"releaseId":1,"cyclePhases":[{"id":3,"name":"Phase11","tcrCatalogTreeId":15,"freeForm":false,"startDate":1373826600000,"endDate":1375209000000,"createdOn":1373913000000,"cycleId":2}],"createdOn":1373913000000},{"id":4,"environment":"env1","build":"build1","name":"cycle1","startDate":1373913000000,"endDate":1375209000000,"status":0,"revision":6,"releaseId":1,"cyclePhases":[],"createdOn":1373913000000},{"id":5,"environment":"","build":"","name":"cycle","startDate":1373913000000,"endDate":1375122600000,"status":0,"revision":7,"releaseId":1,"cyclePhases":[{"id":86,"name":"Phase11","tcrCatalogTreeId":428,"freeForm":false,"startDate":1373913000000,"endDate":1375122600000,"createdOn":1464933385000,"cycleId":5},{"id":21,"name":"Phase12","tcrCatalogTreeId":103,"freeForm":false,"startDate":1373913000000,"endDate":1375122600000,"createdOn":1373913000000,"cycleId":5},{"id":20,"name":"phy","tcrCatalogTreeId":101,"freeForm":false,"startDate":1373913000000,"endDate":1375122600000,"createdOn":1373913000000,"cycleId":5}],"createdOn":1373913000000},{"id":63,"environment":"","build":"","name":"hidden-1","startDate":1425148200000,"endDate":1427221800000,"status":1,"revision":47,"releaseId":1,"cyclePhases":[{"id":84,"name":"Phase12","tcrCatalogTreeId":426,"freeForm":false,"startDate":1425148200000,"endDate":1427221800000,"createdOn":1427653800000,"cycleId":63}],"createdOn":1427653800000}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Cycle for release [/cycle/release/{releaseid}]
### Get Cycle for release [GET]
Getcycle for release with respect to releaseid
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>cycle </td>
                <td>subscribe </td>
                <td>/cycle/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + releaseid (required, Long) ... Needs Release ID to get the required cycle



+ Response 200 (application/json application/xml)

        [{"id":65,"environment":"UAT","build":"b2","name":"Cycle2 with Build2","startDate":1373826600000,"endDate":1375209000000,"status":0,"revision":49,"releaseId":1,"cyclePhases":[],"createdOn":1464933385000},{"id":1,"environment":"Dev","build":"b1","name":"zephyr-02","startDate":1373826600000,"endDate":1375209000000,"status":0,"revision":3,"releaseId":1,"cyclePhases":[{"id":87,"name":"phase1","tcrCatalogTreeId":429,"freeForm":true,"startDate":1375209000000,"endDate":1375209000000,"createdOn":1464933386000,"cycleId":1},{"id":36,"name":"Phase11","tcrCatalogTreeId":173,"freeForm":false,"startDate":1373826600000,"endDate":1375209000000,"createdOn":1374085800000,"cycleId":1},{"id":35,"name":"Phase1","tcrCatalogTreeId":168,"freeForm":false,"startDate":1373826600000,"endDate":1375209000000,"createdOn":1374085800000,"cycleId":1}],"createdOn":1373913000000},{"id":2,"environment":"UAT","build":"b2","name":"Cycle2 with Build2","startDate":1373826600000,"endDate":1375209000000,"status":0,"revision":4,"releaseId":1,"cyclePhases":[{"id":3,"name":"Phase11","tcrCatalogTreeId":15,"freeForm":false,"startDate":1373826600000,"endDate":1375209000000,"createdOn":1373913000000,"cycleId":2}],"createdOn":1373913000000},{"id":4,"environment":"env1","build":"build1","name":"cycle1","startDate":1373913000000,"endDate":1375209000000,"status":0,"revision":6,"releaseId":1,"cyclePhases":[],"createdOn":1373913000000},{"id":5,"environment":"","build":"","name":"cycle","startDate":1373913000000,"endDate":1375122600000,"status":0,"revision":7,"releaseId":1,"cyclePhases":[{"id":20,"name":"phy","tcrCatalogTreeId":101,"freeForm":false,"startDate":1373913000000,"endDate":1375122600000,"createdOn":1373913000000,"cycleId":5},{"id":21,"name":"Phase12","tcrCatalogTreeId":103,"freeForm":false,"startDate":1373913000000,"endDate":1375122600000,"createdOn":1373913000000,"cycleId":5},{"id":86,"name":"Phase11","tcrCatalogTreeId":428,"freeForm":false,"startDate":1373913000000,"endDate":1375122600000,"createdOn":1464933385000,"cycleId":5}],"createdOn":1373913000000},{"id":63,"environment":"","build":"","name":"hidden-1","startDate":1425148200000,"endDate":1427221800000,"status":1,"revision":47,"releaseId":1,"cyclePhases":[{"id":84,"name":"Phase12","tcrCatalogTreeId":426,"freeForm":false,"startDate":1425148200000,"endDate":1427221800000,"createdOn":1427653800000,"cycleId":63}],"createdOn":1427653800000}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## get status count for releaseid [/cycle/status/count/{releaseid}]
### get status count for releaseid [GET]
get status count for releaseid
    
+ Parameters
    + releaseid (required, Long) ... cycleID to get status count 



+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. User does not have access to this release.
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Move a Cycle Phase [/cycle/move/{sourcecyclephaseid}/to/{targetcycleid}]
### Move a Cycle Phase [POST]
move a cycle Phase from one cycle to another cycle
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>cycle_phase </td>
                <td>add </td>
                <td>/cycle/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + sourcecyclephaseid (required, Long) ... cycleiPhaseid 
    + targetcycleid (required, Long) ... targetcycleid


+ Request (application/json application/xml)

        {
          "startDate": 1597343400000,
          "endDate": 1597343400000,
          "phaseStartDate": "08/14/2020",
          "phaseEndDate": "08/14/2020",
          "resetExecution": false,
          "tcrCatalogTreeId": 159
        }

+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## get status count for releaseid [/cycle/toggle/{cycleId}/{value}]
### get status count for releaseid [PUT]
get status count for releaseid
    
+ Parameters
    + cycleId (required, Long) ... cycleID to toggle status
    + value (required, String) ... status to toggle for 



+ Response 200 (application/json application/xml)

        true
+ Response 400 (application/json application/xml)

        Bad request. User does not have access to this release.
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Update a Cycle [/cycle/{cId}]
### Update a Cycle [PUT]
Update a cycle or its phases by cycleId
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>cycle </td>
                <td>update </td>
                <td>/cycle/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + cId (required, Long) ... Cycle id to be updated


+ Request (application/json application/xml)

        {"id":1,"environment":"Dev","build":"b1","name":"Cycle1 with Build1","startDate":"Jul 15, 2013 12:00:00 AM","endDate":"Jul 31, 2013 12:00:00 AM","status":0,"revision":3,"releaseId":1,"cyclePhases":[{"id":35,"name":"Phase1","tcrCatalogTreeId":168,"freeForm":false,"startDate":"Jul 15, 2013 12:00:00 AM","endDate":"Jul 31, 2013 12:00:00 AM","createdOn":"Jul 18, 2013 12:00:00 AM","cycleId":1},{"id":36,"name":"Phase11","tcrCatalogTreeId":173,"freeForm":false,"startDate":"Jul 15, 2013 12:00:00 AM","endDate":"Jul 31, 2013 12:00:00 AM","createdOn":"Jul 18, 2013 12:00:00 AM","cycleId":1}],"createdOn":"Jul 16, 2013 12:00:00 AM"}

+ Response 200 (application/json application/xml)

        {"id":1,"environment":"Dev","build":"b1","name":"zephyr-02","startDate":"Jul 15, 2013 12:00:00 AM","endDate":"Jul 31, 2013 12:00:00 AM","status":0,"revision":3,"releaseId":1,"cyclePhases":[{"id":35,"name":"Phase1","tcrCatalogTreeId":168,"freeForm":false,"startDate":"Jul 15, 2013 12:00:00 AM","endDate":"Jul 31, 2013 12:00:00 AM","createdOn":"Jul 18, 2013 12:00:00 AM","cycleId":1},{"id":36,"name":"Phase11","tcrCatalogTreeId":173,"freeForm":false,"startDate":"Jul 15, 2013 12:00:00 AM","endDate":"Jul 31, 2013 12:00:00 AM","createdOn":"Jul 18, 2013 12:00:00 AM","cycleId":1}],"createdOn":"Jul 16, 2013 12:00:00 AM"}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Update Cycle Phase [/cycle/{cycleid}/phase]
### Update Cycle Phase [PUT]
Update cyclePhase by cyclePhaseId
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>cycle_phase </td>
                <td>update </td>
                <td>/cycle/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + cycleid (required, Long) ... cycleid 


+ Request (application/json application/xml)

        {
          "id": 32,
          "tcrCatalogTreeId": 159,
          "freeForm": false,
          "startDate": 1597343400000,
          "endDate": 1597861800000,
          "createdOn": 1597385336000,
          "cycleId": 37,
          "phaseStartDate": "08/14/2020",
          "phaseEndDate": "08/21/2020",
          "resetExecution": false
        }

+ Response 200 (application/json application/xml)

        {
          "id": 32,
          "name": "f1",
          "tcrCatalogTreeId": 159,
          "freeForm": false,
          "startDate": 1597343400000,
          "endDate": 1597948200000,
          "createdOn": 1597385336000,
          "cycleId": 37,
          "phaseStartDate": "08/14/2020",
          "phaseEndDate": "08/21/2020",
          "resetExecution": false
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error


# Group DefectMapping
Map the defect to the schedule .

## Link Defect to Execution  [/defectmapping/]
### Save defect schedule [POST]
save defect schedule mapping
  
  Notes:-
  
id = Bug id, mapTestcaseId = Testcase Id, mapScheduleId  = Execution id, projectId = Zephyr project id  


+ Request (application/json application/xml)

        {"id":1,"alternateId":"TP-2","status":"To Do","mapTestcaseId":1164,"mapScheduleId":118,"projectId":1}

+ Response 200 (application/json application/xml)

        {"id":3,"defectId":7,"releaseTestScheduleId":118,"testcaseId":1164,"createdBy":1,"modifiedById":1,"createdOn":1597986512492,"modifiedDatetime":1597986512502}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group Defect
The following api is to get the defects.

## Create defect in the system. [/defect/]
### Create defect in the system. [POST]
while providing the defect object . can create defect in the system.
    


+ Request (application/json application/xml)

        {
          "product": "Sample Project",
          "issueType": 10004,
          "shortDesc": "Nisha short desc",
          "longDesc": "Nisha long desc",
          "priority": "High",
          "assigned_to": "",
          "reporter": "admin",
          "environment": "",
          "issuelinks": "blocks",
          "projectId": 1,
          "additionalProperties": {
            "labels": []
          },
          "customProperties": {
            "customfield_10101": "",
            "customfield_10102": ""
          }
        }

+ Response 200 (application/json application/xml)

        {
          "customProperties": {
            "customfield_10101": "",
            "customfield_10102": ""
          },
          "customProcessedProperties": {},
          "id": 10904,
          "alternateId": "SP-13",
          "product": "Sample Project",
          "priority": "High",
          "created_by": "Manoj Kumar",
          "assigned_to": "",
          "longDesc": "Nisha long desc",
          "shortDesc": "Nisha short desc",
          "status": "To Do",
          "statusId": 10000,
          "dtsId": 3,
          "projectId": 1,
          "environment": "",
          "issueType": "10004",
          "additionalProperties": {
            "labels": []
          },
          "issuelinks": "blocks"
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group ExecutionChangeHistory
The following API is related to test case usage history.

## Get Testcase usage history details [//executionchangehistory{?releaseTestScheduleId}{?isascorder}{?offset}{?pagesize}]
### Get Testcase usage history details [GET]
Return the list of usage history for test case.
    

+ Parameters
    + releaseTestScheduleId (required, Long) ... releaseTestScheduleId
    + isascorder (optional, boolean) ... sort order
    + offset (optional, Integer) ... Offset for starting results
    + pagesize (optional, Integer) ... Number of results per page, 0 will return all


+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error


# Group Execution
The following API is a section of resources related to the Execution

## Assign/Reassign schedules values [/execution/assign]
### Assign/Reassign schedules values [PUT]
Assign list of release test schedule
    


+ Request (application/json application/xml multipart/form-data)

        [ {"id": 3, "testerId": 1 } ]

+ Response 200 (application/json application/xml)

        [{ "id": 3, "assignmentDate": "2016-01-22", "estimatedTime": 0, "actualTime": 0, "status": "1", "testerId": 1, "tcrTreeTestcase":    { "id": 6, "tcrCatalogTreeId": 2, "testcase":       { "id": 6, "name": "Untitled", "description": "", "lastModifiedOn": 1453401000000, "creationDate": 1453401000000, "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 0, "oldId": 0, "automated": false, "requirementIds": [], "attachmentCount": 0, "releaseId": 1, "automatedDefault": false }, "revision": 3, "stateFlag": 0, "lastModifiedOn": 1453441524000, "original": false }, "cyclePhaseId": 1, "defects": [], "attachmentCount": 0 }] 
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Execute testcases [/execution/bulk{?scheduleids}{?status}{?testerid}{?tcrCatalogTreeId}{?allExecutions}{?includeanyoneuser}]
### Execute testcases [PUT]
Execute multiple test cases in bulk
    
    Notes:-

ExecutionID = will get when we assign the Testcase to User in the above Call

Status= Status Id in which of the Execution

1 - PASS

2- FAIL

3- WIP

4- Blocked

UserID = user who is executing the Testcase

teststepUpdate(boolean) = If true will update the Step also

teststepStatusID =

1 - PASS

2- FAIL

3- WIP

4- Blocked

+ Parameters
    + scheduleids (required, List) ... releaseTestScheduleIds to execute
    + status (required, String) ... Status to be updated 
    + testerid (required, Long) ... Executed by tester/user id
    + tcrCatalogTreeId (optional, Long) ... node id for which testcaseExecution status needs to be updated
    + allExecutions (optional, Boolean) ... flag using myExecution or allExecution
    + includeanyoneuser (optional, Boolean) ... flag using includeanyoneuser

+ Request (application/json application/xml multipart/form-data)

        {
          "ids": [
            20,
            18,
            19
          ],
          "selectedAll": 0,
          "serachView": false,
          "teststepUpdate": true,
          "teststepStausId": "2"
        }

+ Response 200 (application/json application/xml)

        [
          {
            "id": 17,
            "assignmentDate": "2020-07-21",
            "actualTime": 600,
            "versionId": "2",
            "status": "1",
            "testerId": 1,
            "executedBy": 1,
            "tcrTreeTestcase": {
              "id": 49,
              "tcrCatalogTreeId": 16,
              "revision": 8,
              "stateFlag": 0,
              "lastModifiedOn": 1595315122000,
              "versionNumber": 2,
              "createDatetime": 1595314961000,
              "createdById": 1,
              "modifiedById": 1,
              "testcase": {
                "customProperties": {},
                "customProcessedProperties": {},
                "id": 77,
                "name": "Untitled",
                "externalId": "nnb",
                "description": "<p>gchvhv</p>",
                "priority": "2",
                "lastModifiedOn": 1595315119000,
                "creationDate": 1595269800000,
                "createDatetime": 1595315105000,
                "tcCreationDate": "07/21/2020",
                "comments": "",
                "isComplex": false,
                "estimatedTime": 600,
                "writerId": 0,
                "creatorId": 1,
                "lastUpdaterId": 1,
                "oldId": 0,
                "automated": false,
                "customFieldProcessed": false,
                "customFieldValues": [],
                "testcaseSequence": {
                  "seqNumber": 18
                },
                "testcaseId": 18,
                "versionNumber": 2,
                "projectId": 2,
                "testcaseType": "SHARED",
                "requirementIds": [],
                "requirementIdsNew": [],
                "tcrVersionNumber": 2,
                "tcrTestcaseVersionId": 77,
                "automatedDefault": false,
                "testcaseShared": true
              },
              "projectId": 3,
              "releaseId": 5,
              "isDerivedFromBDD": false,
              "orderId": 27,
              "maxVersionNumber": 2,
              "projectIdParam": 3,
              "original": false
            },
            "cyclePhaseId": 6,
            "lastTestResult": {
              "id": 144,
              "executionDate": 1597387582029,
              "execDate": "08/14/2020",
              "executionStatus": "2",
              "testerId": 1,
              "releaseTestScheduleId": 17,
              "createDatetime": 1597387582029,
              "modifiedDatetime": 1597387582029,
              "createdById": 1,
              "modifiedById": 1
            },
            "defects": [],
            "attachmentCount": 0,
            "lastModifiedBy": 1,
            "createdById": 1,
            "lastModifiedOn": 1597387582033,
            "createDatetime": 1595314965000
          },
          {
            "id": 21,
            "assignmentDate": "2020-07-21",
            "actualTime": 600,
            "versionId": "7",
            "status": "1",
            "testerId": 1,
            "executedBy": 1,
            "tcrTreeTestcase": {
              "id": 47,
              "tcrCatalogTreeId": 16,
              "revision": 8,
              "stateFlag": 0,
              "lastModifiedOn": 1595315069000,
              "versionNumber": 7,
              "createDatetime": 1595314961000,
              "createdById": 1,
              "modifiedById": 1,
              "testcase": {
                "customProperties": {},
                "customProcessedProperties": {},
                "id": 76,
                "name": "Untitled",
                "externalId": "fdfgdfghxxcjg",
                "description": "<p>gdghfgh</p>",
                "priority": "4",
                "lastModifiedOn": 1595315065000,
                "creationDate": 1595269800000,
                "createDatetime": 1595315052000,
                "tcCreationDate": "07/21/2020",
                "comments": "",
                "isComplex": false,
                "estimatedTime": 600,
                "writerId": 0,
                "creatorId": 1,
                "lastUpdaterId": 1,
                "oldId": 0,
                "automated": false,
                "customFieldProcessed": false,
                "customFieldValues": [],
                "testcaseSequence": {
                  "seqNumber": 16
                },
                "testcaseId": 16,
                "versionNumber": 7,
                "projectId": 2,
                "testcaseType": "SHARED",
                "requirementIds": [],
                "requirementIdsNew": [],
                "tcrVersionNumber": 7,
                "tcrTestcaseVersionId": 76,
                "automatedDefault": false,
                "testcaseShared": true
              },
              "projectId": 3,
              "releaseId": 5,
              "isDerivedFromBDD": false,
              "orderId": 25,
              "maxVersionNumber": 7,
              "projectIdParam": 3,
              "original": false
            },
            "cyclePhaseId": 6,
            "lastTestResult": {
              "id": 145,
              "executionDate": 1597387582036,
              "execDate": "08/14/2020",
              "executionStatus": "2",
              "testerId": 1,
              "releaseTestScheduleId": 21,
              "createDatetime": 1597387582037,
              "modifiedDatetime": 1597387582036,
              "createdById": 1,
              "modifiedById": 1
            },
            "defects": [],
            "attachmentCount": 0,
            "lastModifiedBy": 1,
            "createdById": 1,
            "lastModifiedOn": 1597387582040,
            "createDatetime": 1595314965000
          },
          {
            "id": 22,
            "assignmentDate": "2020-07-21",
            "actualTime": 600,
            "versionId": "4",
            "status": "1",
            "testerId": 1,
            "executedBy": 1,
            "tcrTreeTestcase": {
              "id": 48,
              "tcrCatalogTreeId": 16,
              "revision": 8,
              "stateFlag": 0,
              "lastModifiedOn": 1595315789000,
              "versionNumber": 4,
              "createDatetime": 1595314961000,
              "createdById": 1,
              "modifiedById": 1,
              "testcase": {
                "customProperties": {},
                "customProcessedProperties": {},
                "id": 80,
                "name": "Untitled",
                "externalId": "ddsdds",
                "description": "",
                "priority": "2",
                "tag": "ssdd",
                "lastModifiedOn": 1595315781000,
                "creationDate": 1595269800000,
                "createDatetime": 1595315750000,
                "tcCreationDate": "07/21/2020",
                "comments": "",
                "isComplex": false,
                "estimatedTime": 600,
                "writerId": 0,
                "creatorId": 1,
                "lastUpdaterId": 1,
                "oldId": 0,
                "automated": false,
                "customFieldProcessed": false,
                "customFieldValues": [],
                "testcaseSequence": {
                  "seqNumber": 17
                },
                "testcaseId": 17,
                "versionNumber": 4,
                "projectId": 2,
                "testcaseType": "SHARED",
                "requirementIds": [],
                "requirementIdsNew": [],
                "tcrVersionNumber": 4,
                "tcrTestcaseVersionId": 80,
                "automatedDefault": false,
                "testcaseShared": true
              },
              "projectId": 3,
              "releaseId": 5,
              "isDerivedFromBDD": false,
              "orderId": 26,
              "maxVersionNumber": 4,
              "projectIdParam": 3,
              "original": false
            },
            "cyclePhaseId": 6,
            "lastTestResult": {
              "id": 146,
              "executionDate": 1597387582042,
              "execDate": "08/14/2020",
              "executionStatus": "2",
              "testerId": 1,
              "releaseTestScheduleId": 22,
              "createDatetime": 1597387582042,
              "modifiedDatetime": 1597387582042,
              "createdById": 1,
              "modifiedById": 1
            },
            "defects": [],
            "attachmentCount": 0,
            "lastModifiedBy": 1,
            "createdById": 1,
            "lastModifiedOn": 1597387582045,
            "createDatetime": 1595314965000
          }
        ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Create schedules values [/execution/]
### Create schedules values [POST]
Create list of new test Schedule for testcases of releases
    


+ Request (application/json application/xml multipart/form-data)

        {"id":4,"tcrCatalogTreeId":3,"testcase":{"id":4,"name":"Testcase4","externalId":"","description":"","status":"","priority":"1","tag":"Fast, Tie","lastModifiedOn":"Feb 26, 2016 12:00:00 AM","creationDate":"Jul 15, 2013 12:00:00 AM","comments":"","isComplex":false,"estimatedTime":600,"writerId":0,"creatorId":1,"tcStepsVersion":"","lastUpdaterId":0,"temp":false,"oldId":0,"automated":false,"scriptId":"","scriptName":"","scriptPath":"","requirementIds":[],"attachmentCount":0,"releaseId":1,"customProperties":{}},"getOriginal":true,"revision":0,"stateFlag":0,"lastModifiedOn":"Feb 26, 2016 12:00:00 AM"}

+ Response 200 (application/json application/xml)

        [{"id":41,"assignmentDate":"Jun 3, 2016 11:39:01 AM","estimatedTime":1,"versionId":"1","status":"2","comment":"commented","testerId":1,"executedBy":1,"tcrTreeTestcase":{"id":4,"tcrCatalogTreeId":3,"testcase":{"id":4,"name":"Testcase4","externalId":"","description":"","status":"","priority":"1","tag":"Fast, Tie","lastModifiedOn":"Feb 26, 2016 12:00:00 AM","creationDate":"Jul 15, 2013 12:00:00 AM","comments":"","isComplex":false,"estimatedTime":600,"writerId":0,"creatorId":1,"tcStepsVersion":"","lastUpdaterId":0,"temp":false,"oldId":0,"automated":false,"scriptId":"","scriptName":"","scriptPath":"","requirementIds":[],"attachmentCount":0,"releaseId":1,"customProperties":{}},"getOriginal":true,"revision":0,"stateFlag":0,"lastModifiedOn":"Feb 26, 2016 12:00:00 AM"},"cyclePhaseId":20,"lastModifiedBy":1,"lastModifiedOn":"Jun 3, 2016 11:39:01 AM"}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Delete / Unassign test schedules [/execution{?ids}]
### Delete / Unassign test schedules [DELETE]
Delete / Unassign release test schedules
    

+ Parameters
    + ids (required, List) ... To find by tester ID

+ Request (application/json application/xml multipart/form-data)

        {"ids":null,"selectedAll":null,"sourceNodeId":null,"serachView":null,"teststepStausId":null,"teststepUpdate":false}

+ Response 200 (application/json application/xml)

        "true"
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Delete / Unassign frozen test cases and schedules [/execution/{cyclephaseid}/testcase{?testcaseids}{?tcrCatalogTreeId}]
### Delete / Unassign frozen test cases and schedules [DELETE]
Delete / Unassign frozen test cases and schedules
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>delete </td>
                <td>/testcase/{treeId} </td>
            </tr>
                    <tr>
                <td>execution </td>
                <td>delete </td>
                <td>/execution/{frozentreeId} </td>
            </tr>
            </table>
    
+ Parameters
    + cyclephaseid (required, Long) ... cycle phase ID

+ Parameters
    + testcaseids (required, List) ... testcase IDs to delete 
    + tcrCatalogTreeId (optional, Long) ... node id for which testcaseExecution needs to be updated

+ Request (application/json application/xml multipart/form-data)

        {"ids":null,"selectedAll":null,"sourceNodeId":null,"serachView":null,"teststepStausId":null,"teststepUpdate":false}

+ Response 200 (application/json application/xml)

        "true"
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## To export test schedule [/execution/export{?userid}{?criteria}]
### To export test schedule [GET]
Export test schedule by providing User ID and Criteria. Need to pass userID as optional
    

+ Parameters
    + userid (required, Long) ... User ID
    + criteria (required, String) ... Criteria

+ Request (application/json application/xml multipart/form-data)

        "[\"testSchedule/-746423769_1464934140145.xls\"]"

+ Response 200 (application/json application/xml)

        "[\"testSchedule/-746423769_1464934140145.xls\"]"
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get all tags [/execution/tags]
### Get all tags [GET]
Get all tags from system. Tags which are blank, null or empty will be ignored while fetching.
    



+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## To Get Encrypted Schedule ID [/execution/encrypted/{id}]
### To Get Encrypted Schedule ID [GET]
Get encrypted test schedule by id
    
+ Parameters
    + id (required, Long) ... Schedule id


+ Request (application/json application/xml multipart/form-data)

        "7"

+ Response 200 (application/json application/xml)

        "7"
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get node path [/execution/path{?scheduleid}{?assigneeuserid}]
### Get node path [GET]
Get traceable path from root
    

+ Parameters
    + scheduleid (required, Long) ... Schedule ID for which to find the path
    + assigneeuserid (required, Long) ... Assignee ID to use for checking access. Send 0 for all assignments


+ Response 200 (application/json application/xml)

        {"projectId":1,"releaseId":1,"nodeIds":[1,35],"nodePath":"/1/35","index":1,"entityId":1}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## To get Schedule by ID [/execution/{id}]
### To get Schedule by ID [GET]
Get release test schedule by ID
    
+ Parameters
    + id (required, Long) ... To find by schedule ID



+ Response 200 (application/json application/xml)

        { "id": 1, "assignmentDate": "2016-01-22", "estimatedTime": 0, "actualTime": 0, "status": "1", "testerId": 2, "tcrTreeTestcase":    { "id": 8, "tcrCatalogTreeId": 2, "testcase":       { "id": 3, "name": "Untitled", "description": "", "lastModifiedOn": 1453401000000, "creationDate": 1453401000000, "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 0, "oldId": 0, "automated": false, "requirementIds": [], "attachmentCount": 0, "releaseId": 1, "automatedDefault": false }, "revision": 3, "stateFlag": 0, "lastModifiedOn": 1453441524000, "original": false }, "cyclePhaseId": 1, "defects": [], "attachmentCount": 0 }  
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## To schedule by schedule IDs [/execution/ids{?ids}]
### To schedule by schedule IDs [GET]
Get release test schedule by schedule ID's
    

+ Parameters
    + ids (required, List) ... To find by schedule IDs


+ Response 200 (application/json application/xml)

        [{ "id": 1, "assignmentDate": "2016-01-25", "status": "1", "testerId": -10, "tcrTreeTestcase":    { "id": 4, "tcrCatalogTreeId": 2, "testcase": { "id": 3, "name": "Untitled", "description": "", "lastModifiedOn": 1453660200000, "creationDate": 1453660200000, "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "tcStepsVersion": "1453707852382", "lastUpdaterId": 0, "oldId": 0, "automated": false, "requirementIds": [], "attachmentCount": 0, "releaseId": 1, "automatedDefault": false }, "revision": 3, "stateFlag": 0, "lastModifiedOn": 1453707594000, "original": false }, "cyclePhaseId": 1, "defects": [], "attachmentCount": 0 }]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## To schedule by schedule ids [/execution/expanded{?ids}{?stepresults}{?resulthistory}]
### To schedule by schedule ids [GET]
Get list of release test schedule by schedule ids
    

+ Parameters
    + ids (required, List) ... to find by schedule ids
    + stepresults (optional, Boolean) ... to include step results
    + resulthistory (optional, Boolean) ... to include result history


+ Response 200 (application/json application/xml)

        [{"id":0,"releaseTestSchedule":{"id":2,"assignmentDate":"2013-07-18","estimatedTime":0,"actualTime":5000,"versionId":"","status":"1","comment":"","testerId":3,"executedBy":3,"tcrTreeTestcase":{"id":200,"tcrCatalogTreeId":169,"testcase":{"id":2,"name":"DummyRow","externalId":"","description":"","status":"","priority":"","tag":"Best, Tie","lastModifiedOn":1456425000000,"creationDate":1373826600000,"comments":"","isComplex":false,"estimatedTime":10000,"writerId":0,"creatorId":1,"tcStepsVersion":"","lastUpdaterId":0,"temp":false,"oldId":0,"automated":false,"scriptId":"","scriptName":"","scriptPath":"","requirementIds":[],"attachmentCount":0,"releaseId":1,"automatedDefault":false},"revision":3,"stateFlag":1,"lastModifiedOn":1464932905000,"original":false},"cyclePhaseId":35,"lastTestResult":{"id":11,"executionDate":1388601000000,"executionNotes":"","executionStatus":"1","attachmentLocation":"","status":"","testerId":3,"releaseTestScheduleId":2},"defects":[],"attachmentCount":0,"lastModifiedOn":1456425000000}}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Schedules by Criteria [/execution/user/project{?projectid}{?createdby}{?testerid}{?parentid}{?cyclephaseid}{?releaseid}{?order}{?orderByAsc}{?offset}{?pagesize}]
### Get Schedules by Criteria [GET]
Get release test Schedules by Criteria in search result. Search can be done on the combination of criterias: currentUserID, tester ID, parent ID, cyclephase ID or release ID
    

+ Parameters
    + projectid (optional, Long) ... To find by Tester ID
    + createdby (optional, Long) ... To find by Tester ID
    + testerid (optional, Long) ... To find by Tester ID
    + parentid (optional, Long) ... To find by Parent ID
    + cyclephaseid (optional, Long) ... To find by Cyclephase ID
    + releaseid (optional, Long) ... To find by Release ID
    + order (optional, String) ... sort requirements by column
    + orderByAsc (optional, boolean) ... sort order
    + offset (optional, Integer) ... Offset for starting results
    + pagesize (optional, Integer) ... Number of results per page, 0 will return all


+ Response 200 (application/json application/xml)

        [{ "id": 2, "assignmentDate": "2016-01-20", "status": "1", "testerId": -10, "tcrTreeTestcase":    { "id": 11, "tcrCatalogTreeId": 4, "testcase":{ "id": 8, "name": "Untitled", "description": "", "lastModifiedOn": 1453228200000, "creationDate": 1453228200000, "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 0, "oldId": 0, "automated": false, "requirementIds": [], "attachmentCount": 0, "releaseId": 1, "automatedDefault": false }, "revision": 4, "stateFlag": 0, "lastModifiedOn": 1453288606000, "original": false }, "cyclePhaseId": 2, "defects": [], "attachmentCount": 0 }]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Schedules by Criteria [/execution{?testerid}{?parentid}{?cyclephaseid}{?releaseid}{?order}{?isascorder}{?offset}{?includeanyoneuser}{?pagesize}{?is_cfield}]
### Get Schedules by Criteria [GET]
Get release test Schedules by Criteria in search result. Search can be done on the combination of criterias: tester ID, parent ID, cyclephase ID or release ID
    

+ Parameters
    + testerid (optional, Long) ... To find by Tester ID
    + parentid (optional, Long) ... To find by Parent ID
    + cyclephaseid (optional, Long) ... To find by Cyclephase ID
    + releaseid (optional, Long) ... To find by Release ID
    + order (optional, String) ... sort requirements by column
    + isascorder (optional, boolean) ... sort order
    + offset (optional, Integer) ... Offset for starting results
    + includeanyoneuser (optional, boolean) ... Include anyone user, optionally filter by
    + pagesize (optional, Integer) ... Number of results per page, 0 will return all
    + is_cfield (optional, boolean) ... custom field order


+ Response 200 (application/json application/xml)

        [{ "id": 2, "assignmentDate": "2016-01-20", "status": "1", "testerId": -10, "tcrTreeTestcase":    { "id": 11, "tcrCatalogTreeId": 4, "testcase":{ "id": 8, "name": "Untitled", "description": "", "lastModifiedOn": 1453228200000, "creationDate": 1453228200000, "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 0, "oldId": 0, "automated": false, "requirementIds": [], "attachmentCount": 0, "releaseId": 1, "automatedDefault": false }, "revision": 4, "stateFlag": 0, "lastModifiedOn": 1453288606000, "original": false }, "cyclePhaseId": 2, "defects": [], "attachmentCount": 0 }]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Modify schedules values [/execution/modify]
### Modify schedules values [POST]
Modify - Create / update / delete - all combined. In case if delete api will not return release test schedule
    


+ Request (application/json application/xml multipart/form-data)

        {"rtsId":83,"flag":false,"testerId":2,"cyclePhaseId":102}

+ Response 200 (application/json application/xml)

        [{"id":83,"testerId":2,"tcrTreeTestcase":{"id":3,"tcrCatalogTreeId":2,"testcase":{"id":3,"name":"Testcase3","externalId":"","description":"","status":"","priority":"","tag":"Blast, Black, Best, Tie","lastModifiedOn":1456425000000,"creationDate":1373826600000,"comments":"","isComplex":false,"estimatedTime":80089,"writerId":0,"creatorId":3,"tcStepsVersion":"","lastUpdaterId":0,"temp":false,"oldId":0,"automated":false,"scriptId":"","scriptName":"","scriptPath":"","requirementIds":[],"attachmentCount":0,"releaseId":1,"automatedDefault":false},"revision":0,"stateFlag":0,"lastModifiedOn":1456425000000,"original":true},"cyclePhaseId":102,"defects":[],"attachmentCount":0,"lastModifiedOn":1468408631971}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## To update execution details, attachment and status [/execution/statusandattachment/{id}{?status}]
### To update execution details, attachment and status [PUT]
Update execution Details and Attachment for release test schedule.
    
+ Parameters
    + id (required, Long) ... releaseTestScheduleId

+ Parameters
    + status (required, String) ... status

+ Request (multipart/form-data)

        $jsonRequestSingleLine

+ Response 200 (application/json application/xml)

        { "id": 1, "assignmentDate": "2019-09-11", "actualTime": 600, "versionId": "1", "status": "1", "testerId": 1, "executedBy": 1, "tcrTreeTestcase": { "id": 2, "tcrCatalogTreeId": 2, "revision": 3, "stateFlag": 0, "lastModifiedOn": 1568197690000, "versionNumber": 1, "createDatetime": 1568197653000, "testcase": { "customProperties": {}, "customProcessedProperties": {}, "id": 1, "name": "Untitled", "description": "", "lastModifiedOn": 1568197653000, "creationDate": 1568140200000, "createDatetime": 1568197653000, "tcCreationDate": "09/11/2019", "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 1, "oldId": 0, "automated": false, "customFieldProcessed": false, "customFieldValues": [], "testcaseSequence": { "seqNumber": 1 }, "testcaseId": 1, "versionNumber": 1, "projectId": 1, "testcaseType": "ORIGINAL", "requirementIds": [], "requirementIdsNew": [], "tcrVersionNumber": 1, "tcrTestcaseVersionId": 1, "automatedDefault": false, "testcaseShared": false }, "projectId": 1, "releaseId": 1, "isDerivedFromBDD": false, "orderId": 1, "maxVersionNumber": 1, "projectIdParam": 1, "original": false }, "cyclePhaseId": 1, "lastTestResult": { "id": 1, "executionDate": 1568197727253, "execDate": "09/11/2019", "executionStatus": "3", "testerId": 1, "releaseTestScheduleId": 1, "createDatetime": 1568197727263, "modifiedDatetime": 1568197727253 }, "defects": [], "attachmentCount": 0, "lastModifiedOn": 1568197727269, "createDatetime": 1568197715000, "changeBy": 1 }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## To update execution details [/execution/{id}{?status}{?testerid}{?time}{?allExecutions}{?includeanyoneuser}]
### To update execution details [PUT]
Update execution Details for release test schedule
    
+ Parameters
    + id (required, Long) ... releaseTestScheduleId

+ Parameters
    + status (required, String) ... status
    + testerid (required, Long) ... testerid
    + time (required, Integer) ... time
    + allExecutions (optional, Boolean) ... flag using myExecution or allExecution
    + includeanyoneuser (optional, Boolean) ... flag using includeanyoneuser

+ Request (application/json application/xml multipart/form-data)

        {"createRTSList":[],"updateRTSList":[],"unassignedRtsIds":[],"teststepUpdate":false,"notes":null,"tcrCatalogTreeId":null,"selectedAll":null,"unselectedIds":null,"executedOn":null,"testerId":null,"cyclePhaseId":null,"cyclePhaseIdParam":null,"teststepStausId":null}

+ Response 200 (application/json application/xml)

        {"id":64,"assignmentDate":"2017-04-27","actualTime":600,"status":"1","comment":"notesggh","testerId":1,"tcrTreeTestcase":{"id":28,"tcrCatalogTreeId":13,"testcase":{"id":14,"name":"Untitled","description":"","lastModifiedOn":1493279792000,"creationDate":1493231400000,"tcCreationDate":"04/27/2017","isComplex":false,"estimatedTime":600,"writerId":0,"creatorId":1,"lastUpdaterId":0,"oldId":0,"automated":true,"scriptId":"f","scriptName":"ff","scriptPath":"f","requirementIds":[],"attachmentCount":0,"releaseId":3,"automatedDefault":true},"revision":14,"stateFlag":0,"lastModifiedOn":1493290275000,"original":false},"cyclePhaseId":26,"defects":[],"attachmentCount":0,"lastModifiedOn":1493817903079}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Update Schedules Values [/execution]
### Update Schedules Values [PUT]
Update a list of tester and date
    


+ Request (application/json application/xml multipart/form-data)

        [{ "id": 1, "estimatedTime": 0, "actualTime": 600, "testerId": 2, -> assignee "tcrTreeTestcase": { "id": 2, "tcrCatalogTreeId": 2, "testcase": { "id": 3, "name": "Untitled" } }, "cyclePhaseId": 1, "lastTestResult": { "executionStatus": "4", "testerId": 2 -> executed by } }]

+ Response 200 (application/json application/xml)

        [{ "id": 1, "assignmentDate": 1453420800000, "estimatedTime": 0, "actualTime": 0, "status": "2", "testerId": 1, "tcrTreeTestcase":    { "id": 8, "tcrCatalogTreeId": 2, "original": false }, "cyclePhaseId": 1, "attachmentCount": 0 }]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Update Test Step Result [/execution/updateteststatus]
### Update Test Step Result [POST]
update Test Step Result
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>execution_result </td>
                <td>add </td>
                <td>/teststep/{testcaseId} </td>
            </tr>
            </table>
    


+ Request (application/json application/xml multipart/form-data)

        $jsonRequestSingleLine

+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group ExternalRequirement
The following api is to get the externalrequirement.

## Sync Requirements [/externalrequirement/importall{?projectId}]
### Sync Requirements [POST]
Import all external requirement
    
Notes:-
    
searchString = Jira query for importing requirements

filterSearch = can be true or false. 

If True, pass corresponding filterName, filterId and id of filter in searchString

If false, pass valid zql query in searchString

+ Parameters
    + projectId (required, Long) ... projectId

+ Request (application/json application/xml)

        {"projectId":46,"importExternalRequirementDTO":{"projectId":46,"topFolderName":"","jiraSync":true},"searchStringDTO":{"searchString":10101},"filterSearch":true,"filterName":"Top Issue","filterId":10101,"jiraSyncId":"","releaseId":"94","bugs":[],"importAll":true}

+ Response 200 (application/json application/xml)

        Successfully imported total 4 requirements
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group FieldConfig
The following api is to get and create Custom_field.

## Custom Field Resource [/field/]
### Create Custom Field [POST]
Create custom field for entites such as based on custom field name.

<p>Notes:-</p>

entityName value can be testcase, requirement, project fieldTypeMetaData value can be

1 -  text

2 - Long text

3 - Picklist

4 - Check Box

5 - Date

10 - Number

12 - Cascade

13 - Rich Text    


+ Request (application/json application/xml)

        {
          "entityName": "testcase",
          "systemField": false,
          "displayName": "Text customfield",
          "fieldTypeMetadata": 1,
          "mandatory": false,
          "importable": true,
          "exportable": true,
          "searchable": true,
          "searchFieldName": "textcf2",
          "projectCheck": true,
          "unique": false,
          "length": 1024,
          "allProject": true,
          "isVisible": true
        }

+ Response 200 (application/json application/xml)

        {
          "id": 1026,
          "entityName": "testcase",
          "systemField": false,
          "fieldTypeMetadata": 1,
          "fieldName": "zcf_1026",
          "columnName": "zcf_1026",
          "displayName": "Text customfield",
          "mandatory": false,
          "searchable": true,
          "importable": true,
          "exportable": true,
          "length": 1024,
          "searchFieldName": "textcf2",
          "createdOn": 1597234685630,
          "projectIds": [],
          "unique": false,
          "allProject": true,
          "isVisible": true
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get all the field's type metadata. [/field/fieldtype]
### Get all the field's type metadata. [GET]
Retrive meta data of all the fields. Metadata correspond to type display fields and defines visibility of fields.
    



+ Response 200 (application/json application/xml)

        [{"id":1,"hibernateDataType":"java.lang.String","length":1024,"visible":true,"labelWidth":100,"dataType":"Text (1024)"},{"id":2,"hibernateDataType":"text","length":32000,"visible":true,"labelWidth":100,"dataType":"Long Text (32000)"},{"id":3,"hibernateDataType":"java.lang.Integer","length":32000,"visible":true,"labelWidth":100,"dataType":"Picklist"},{"id":4,"hibernateDataType":"java.lang.Boolean","visible":true,"labelWidth":100,"dataType":"Checkbox"},{"id":5,"hibernateDataType":"java.util.Date","visible":true,"labelWidth":100,"dataType":"Date"},{"id":6,"hibernateDataType":"java.lang.Long","visible":false,"labelWidth":100,"dataType":"Long"},{"id":7,"hibernateDataType":"java.lang.Integer","visible":false,"labelWidth":100,"dataType":"Integer"},{"id":8,"hibernateDataType":"java.lang.String","visible":false,"labelWidth":100,"dataType":"string"},{"id":9,"hibernateDataType":"collection","visible":false,"labelWidth":100,"dataType":"collection"},{"id":10,"hibernateDataType":"java.lang.Double","length":20,"visible":true,"labelWidth":100,"dataType":"Number"},{"id":11,"hibernateDataType":"na","visible":false,"labelWidth":100,"dataType":"tree"}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get customfield metadata  [/field/metadata{?visible}]
### Get customfield metadata  [GET]
Retrive customfield metadata information based on visibility critera. The fields can be configured to be visible or hidden.
    

+ Parameters
    + visible (optional, Boolean) ... Default operation (while passing nothing as visible) returns all custom field metadata


+ Response 200 (application/json application/xml)

        [{"id":1,"hibernateDataType":"java.lang.String","length":1024,"visible":true,"labelWidth":100,"dataType":"Text (1024)"},{"id":2,"hibernateDataType":"text","length":32000,"visible":true,"labelWidth":100,"dataType":"Long Text (32000)"},{"id":3,"hibernateDataType":"java.lang.Integer","length":32000,"visible":true,"labelWidth":100,"dataType":"Picklist"},{"id":4,"hibernateDataType":"java.lang.Boolean","visible":true,"labelWidth":100,"dataType":"Checkbox"},{"id":5,"hibernateDataType":"java.util.Date","visible":true,"labelWidth":100,"dataType":"Date"},{"id":10,"hibernateDataType":"java.lang.Double","length":20,"visible":true,"labelWidth":100,"dataType":"Number"}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## get number of columns present in entity. [/field/column/count{?entityname}]
### get number of columns present in entity. [GET]
This method will provide number of columns presen in entity.
    

+ Parameters
    + entityname (required, String) ... entityname for searching and validating fields.


+ Response 200 (application/json application/xml)

        60
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get Field by Id [/field/{id}]
### Get Field by Id [GET]
Retrive information of custom or system field such as name,metadata, etc with the help of field id. 
    
+ Parameters
    + id (required, Long) ... field id for getting field.



+ Response 200 (application/json application/xml)

        {"id":1,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"name","columnName":"name","displayName":"Name *","description":"name of tc","mandatory":false,"searchable":true,"importable":true,"exportable":true,"length":255,"searchFieldName":"name","createdOn":"Mar 30, 2015 12:00:00 AM"}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get Field by dispaly name [/field/name{?name}{?projectid}]
### Get Field by dispaly name [GET]
Retrive information of custom or system field such as name,metadata, etc with the help of field display name. 
    

+ Parameters
    + name (required, String) ... display name for getting field config.
    + projectid (optional, Long) ... project id for fetching field config.


+ Response 200 (application/json application/xml)

        [ { "id" : 1002, "entityName" : "requirement", "systemField" : false, "fieldTypeMetadata" : 1, "fieldName" : "zcf_1002", "columnName" : "zcf_1002", "displayName" : "cust", "description" : "", "mandatory" : false, "searchable" : false, "importable" : true, "exportable" : true, "length" : 1024, "searchFieldName" : "", "createdOn" : 1516698259000, "projectIds" : [ 1 ], "unique" : false, "allProject" : false } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get Field by fieldName [/field{?name}]
### Get Field by fieldName [GET]
Retrive information of custom or system field such as name,metadata, etc with the help of field name. 
    

+ Parameters
    + name (required, String) ... field id for getting field.


+ Response 200 (application/json application/xml)

        { "id" : 1002, "entityName" : "requirement", "systemField" : false, "fieldTypeMetadata" : 1, "fieldName" : "zcf_1002", "columnName" : "zcf_1002", "displayName" : "cust", "description" : "", "mandatory" : false, "searchable" : false, "importable" : true, "exportable" : true, "length" : 1024, "searchFieldName" : "", "createdOn" : 1516698259000, "projectIds" : [ 1 ], "unique" : false, "allProject" : false }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get Importable Fields By Entity  [/field/importfields/{entityName}]
### Get Importable Fields By Entity  [GET]
This method will display all the fields which are importable in nature for an entity. 
    
+ Parameters
    + entityName (required, String) ... entityName required to import fields.



+ Response 200 (application/json application/xml)

        [ { "id" : 101, "entityName" : "Requirement", "systemField" : true, "fieldTypeMetadata" : 8, "fieldName" : "name", "columnName" : "name", "displayName" : "Name *", "description" : "name of requirement", "mandatory" : true, "searchable" : true, "importable" : true, "exportable" : true, "length" : 255, "searchFieldName" : "name", "createdOn" : 1436812200000, "projectIds" : [ ], "unique" : false, "allProject" : false }, { "id" : 102, "entityName" : "Requirement", "systemField" : true, "fieldTypeMetadata" : 2, "fieldName" : "details", "columnName" : "details", "displayName" : "Details", "description" : "details of tc", "mandatory" : false, "searchable" : true, "importable" : true, "exportable" : true, "length" : 65535, "searchFieldName" : "details", "createdOn" : 1436812200000, "projectIds" : [ ], "unique" : false, "allProject" : false }, { "id" : 103, "entityName" : "Requirement", "systemField" : true, "fieldTypeMetadata" : 8, "fieldName" : "externalId", "columnName" : "externalId", "displayName" : "External ID", "description" : "external id of requirement", "mandatory" : false, "searchable" : true, "importable" : true, "exportable" : true, "length" : 255, "searchFieldName" : "externalId", "createdOn" : 1436812200000, "projectIds" : [ ], "unique" : false, "allProject" : false }, { "id" : 104, "entityName" : "Requirement", "systemField" : true, "fieldTypeMetadata" : 7, "fieldName" : "attachment", "columnName" : "attachment", "displayName" : "Attachment", "description" : "attachment of requirement", "mandatory" : false, "searchable" : false, "importable" : true, "exportable" : true, "createdOn" : 1436812200000, "projectIds" : [ ], "unique" : false, "allProject" : false }, { "id" : 105, "entityName" : "Requirement", "systemField" : true, "fieldTypeMetadata" : 8, "fieldName" : "priority", "columnName" : "priority", "displayName" : "Priority", "description" : "priority of requirement", "mandatory" : false, "searchable" : true, "importable" : true, "exportable" : true, "length" : 10, "searchFieldName" : "priority", "createdOn" : 1436812200000, "projectIds" : [ ], "unique" : false, "allProject" : false }, { "id" : 106, "entityName" : "Requirement", "systemField" : true, "fieldTypeMetadata" : 2, "fieldName" : "url", "columnName" : "url", "displayName" : "Url", "description" : "url of requirement", "mandatory" : false, "searchable" : true, "importable" : true, "exportable" : true, "length" : 1024, "searchFieldName" : "url", "createdOn" : 1436812200000, "projectIds" : [ ], "unique" : false, "allProject" : false }, { "id" : 107, "entityName" : "Requirement", "systemField" : true, "fieldTypeMetadata" : 6, "fieldName" : "createdBy", "columnName" : "created_by", "displayName" : "createdBy", "description" : "createdBy of requirement", "mandatory" : false, "searchable" : true, "importable" : true, "exportable" : true, "searchFieldName" : "createdBy", "createdOn" : 1436812200000, "projectIds" : [ ], "unique" : false, "allProject" : false }, { "id" : 108, "entityName" : "Requirement", "systemField" : true, "fieldTypeMetadata" : 5, "fieldName" : "createdOn", "columnName" : "created_on", "displayName" : "createdOn", "description" : "createdOn of requirement", "mandatory" : false, "searchable" : false, "importable" : true, "exportable" : true, "createdOn" : 1436812200000, "projectIds" : [ ], "unique" : false, "allProject" : false }, { "id" : 1001, "entityName" : "requirement", "systemField" : false, "fieldTypeMetadata" : 1, "fieldName" : "zcf_1001", "columnName" : "zcf_1001", "displayName" : "customfield 1", "description" : "", "mandatory" : false, "searchable" : false, "importable" : true, "exportable" : true, "length" : 1024, "searchFieldName" : "", "createdOn" : 1516697861000, "projectIds" : [ ], "unique" : false, "allProject" : true }, { "id" : 1002, "entityName" : "requirement", "systemField" : false, "fieldTypeMetadata" : 1, "fieldName" : "zcf_1002", "columnName" : "zcf_1002", "displayName" : "cust", "description" : "", "mandatory" : false, "searchable" : false, "importable" : true, "exportable" : true, "length" : 1024, "searchFieldName" : "", "createdOn" : 1516698259000, "projectIds" : [ 1 ], "unique" : false, "allProject" : false } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get list of CustomFields [/field/ids{?ids}]
### Get list of CustomFields [GET]
get list of customfield
    

+ Parameters
    + ids (required, Set) ... field ids for getting field.


+ Response 200 (application/json application/xml)

        [ { "id" : 1, "entityName" : "Testcase", "systemField" : true, "fieldTypeMetadata" : 8, "fieldName" : "name", "columnName" : "name", "displayName" : "Name *", "description" : "name of tc", "mandatory" : true, "searchable" : true, "importable" : true, "exportable" : true, "length" : 255, "searchFieldName" : "name", "createdOn" : 1436812200000, "projectIds" : [ ], "unique" : false, "allProject" : false }, { "id" : 2, "entityName" : "Testcase", "systemField" : true, "fieldTypeMetadata" : 8, "fieldName" : "steps", "displayName" : "Test Steps *", "description" : "steps of tc", "mandatory" : true, "searchable" : false, "importable" : true, "exportable" : true, "createdOn" : 1436812200000, "projectIds" : [ ], "unique" : false, "allProject" : false } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get list of project specific CustomFields [/field/project/{id}]
### Get list of project specific CustomFields [GET]
get list of project specific customfield
    
+ Parameters
    + id (required, Long) ... field ids for getting field.



+ Response 200 (application/json application/xml)

        { "requirement" : [ { "id" : 1001, "entityName" : "requirement", "systemField" : false, "fieldTypeMetadata" : 1, "fieldName" : "zcf_1001", "columnName" : "zcf_1001", "displayName" : "customfield 1", "description" : "", "mandatory" : false, "searchable" : false, "importable" : true, "exportable" : true, "length" : 1024, "searchFieldName" : "", "createdOn" : 1516697861000, "projectIds" : [ ], "unique" : false, "allProject" : true }, { "id" : 1002, "entityName" : "requirement", "systemField" : false, "fieldTypeMetadata" : 1, "fieldName" : "zcf_1002", "columnName" : "zcf_1002", "displayName" : "cust", "description" : "", "mandatory" : false, "searchable" : false, "importable" : true, "exportable" : true, "length" : 1024, "searchFieldName" : "", "createdOn" : 1516698259000, "projectIds" : [ 1 ], "unique" : false, "allProject" : false } ], "testcase" : [ ] }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get fields by entity [/field/entity/{entityname}{?includsystemfield}]
### Get fields by entity [GET]
Retrive information of system or custom fields by name of field. If required, system fields can be fetched by submitting includeSystemField as true .
    
+ Parameters
    + entityname (required, String) ... entityname for entity wise field's. Possible values are (case sensitive) : Testcase ,Requirement

+ Parameters
    + includsystemfield (required, boolean) ... includsystemfield required only for all fields.


+ Response 200 (application/json application/xml)

        [{"id":1,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"name","columnName":"name","displayName":"Name *","description":"name of tc","mandatory":false,"searchable":true,"importable":true,"exportable":true,"length":255,"searchFieldName":"name","createdOn":1427653800000},{"id":2,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"steps","columnName":"","displayName":"Test Steps *","description":"steps of tc","mandatory":false,"searchable":false,"importable":true,"exportable":true,"searchFieldName":"","createdOn":1427653800000},{"id":3,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"result","columnName":"","displayName":"Expected Results *","description":"teststep.result of tc","mandatory":false,"searchable":false,"importable":true,"exportable":true,"searchFieldName":"","createdOn":1427653800000},{"id":21,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"externalId","columnName":"external_id","displayName":"External ID","description":"externalId of tc","mandatory":false,"searchable":true,"importable":true,"exportable":true,"length":255,"searchFieldName":"externalId","createdOn":1427653800000},{"id":22,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"testdata","columnName":"","displayName":"TestData","description":"teststep.testdata of tc","mandatory":false,"searchable":false,"importable":true,"exportable":true,"searchFieldName":"","createdOn":1427653800000},{"id":23,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"priority","columnName":"priority","displayName":"Priority","description":"priority of tc","mandatory":false,"searchable":true,"importable":true,"exportable":true,"length":50,"searchFieldName":"priority","createdOn":1427653800000},{"id":24,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"category","columnName":"","displayName":"Category","description":"category (not used) of tc","mandatory":false,"searchable":false,"importable":true,"exportable":true,"searchFieldName":"","createdOn":1427653800000},{"id":25,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":6,"fieldName":"creatorId","columnName":"created_by","displayName":"Created By","description":"creatorId of tc","mandatory":false,"searchable":true,"importable":true,"exportable":true,"searchFieldName":"creatorId","createdOn":1427653800000},{"id":26,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":5,"fieldName":"creationDate","columnName":"creation_date","displayName":"Created On","description":"creationDate of tc","mandatory":false,"searchable":false,"importable":true,"exportable":true,"length":10,"searchFieldName":"","createdOn":1427653800000},{"id":27,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"tag","columnName":"tag","displayName":"Tags","description":"tag of tc","mandatory":false,"searchable":true,"importable":true,"exportable":true,"length":255,"searchFieldName":"tag","createdOn":1427653800000},{"id":28,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":2,"fieldName":"comments","columnName":"comments","displayName":"Comments","description":"comments of tc","mandatory":false,"searchable":true,"importable":true,"exportable":true,"length":65535,"searchFieldName":"comments","createdOn":1427653800000},{"id":33,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":4,"fieldName":"automated","columnName":"is_automated","displayName":"Automated","description":"automated of tc","mandatory":false,"searchable":false,"importable":true,"exportable":true,"searchFieldName":"","createdOn":1427653800000},{"id":34,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"scriptId","columnName":"script_id","displayName":"Script ID","description":"scriptId of tc","mandatory":false,"searchable":false,"importable":true,"exportable":true,"length":255,"searchFieldName":"","createdOn":1427653800000},{"id":35,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"scriptName","columnName":"script_name","displayName":"Script Name","description":"scriptName of tc","mandatory":false,"searchable":false,"importable":true,"exportable":true,"length":255,"searchFieldName":"","createdOn":1427653800000},{"id":36,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"scriptPath","columnName":"script_path","displayName":"Script Path","description":"scriptPath of tc","mandatory":false,"searchable":false,"importable":true,"exportable":true,"length":1024,"searchFieldName":"","createdOn":1427653800000},{"id":51,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":6,"fieldName":"id","columnName":"id","displayName":"id","description":"primary key","mandatory":false,"searchable":true,"importable":false,"exportable":false,"searchFieldName":"id","createdOn":1427653800000},{"id":52,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"description","columnName":"description","displayName":"description","description":"description of tc","mandatory":false,"searchable":true,"importable":false,"exportable":true,"length":65535,"searchFieldName":"description","createdOn":1427653800000},{"id":53,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":8,"fieldName":"status","columnName":"status","displayName":"status","description":"status of tc","mandatory":false,"searchable":false,"importable":false,"exportable":true,"length":50,"searchFieldName":"","createdOn":1427653800000},{"id":54,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":5,"fieldName":"lastModifiedOn","columnName":"last_modified_on","displayName":"lastModifiedOn","description":"lastModifiedOn of tc","mandatory":false,"searchable":false,"importable":false,"exportable":true,"length":10,"searchFieldName":"","createdOn":1427653800000},{"id":55,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":5,"fieldName":"completedOn","columnName":"completed_on","displayName":"completedOn","description":"completedOn of tc","mandatory":false,"searchable":false,"importable":false,"exportable":true,"length":10,"searchFieldName":"","createdOn":1427653800000},{"id":56,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":4,"fieldName":"isComplex","columnName":"is_complex","displayName":"isComplex","description":"isComplex of tc","mandatory":false,"searchable":false,"importable":false,"exportable":true,"searchFieldName":"","createdOn":1427653800000},{"id":57,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":7,"fieldName":"estimatedTime","columnName":"estimated_time","displayName":"Estimated Time","description":"estimatedTime of tc","mandatory":false,"searchable":true,"importable":true,"exportable":true,"searchFieldName":"estimatedTime","createdOn":1427653800000},{"id":58,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":6,"fieldName":"writerId","columnName":"author_id","displayName":"writerId","description":"writerId of tc","mandatory":false,"searchable":false,"importable":false,"exportable":true,"searchFieldName":"","createdOn":1427653800000},{"id":59,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":6,"fieldName":"lastUpdaterId","columnName":"last_modified_by","displayName":"lastUpdaterId","description":"lastUpdaterId of tc","mandatory":false,"searchable":false,"importable":false,"exportable":true,"searchFieldName":"","createdOn":1427653800000},{"id":60,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":6,"fieldName":"tcrCatalogTreeTestcases","columnName":"testcase_id","displayName":"tcrCatalogTreeTestcases","description":"tcrCatalogTreeTestcases of tc","mandatory":false,"searchable":false,"importable":false,"exportable":false,"searchFieldName":"","createdOn":1427653800000},{"id":61,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":4,"fieldName":"temp","columnName":"is_temp","displayName":"temp","description":"temp of tc","mandatory":false,"searchable":false,"importable":false,"exportable":false,"searchFieldName":"","createdOn":1427653800000},{"id":62,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":9,"fieldName":"defects","columnName":"testcase_id","displayName":"defects","description":"defects of tc","mandatory":false,"searchable":false,"importable":false,"exportable":false,"searchFieldName":"","createdOn":1427653800000},{"id":63,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":9,"fieldName":"requirementIds","columnName":"requirement_id","displayName":"requirementIds","description":"requirementIds of tc","mandatory":false,"searchable":false,"importable":false,"exportable":false,"searchFieldName":"","createdOn":1427653800000},{"id":64,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":7,"fieldName":"attachmentCount","columnName":"","displayName":"attachmentCount","description":"attachmentCount of tc","mandatory":false,"searchable":false,"importable":false,"exportable":false,"searchFieldName":"","createdOn":1427653800000},{"id":65,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":6,"fieldName":"releaseId","columnName":"release_id","displayName":"releaseId","description":"releaseId of tc","mandatory":false,"searchable":true,"importable":false,"exportable":false,"searchFieldName":"releaseId","createdOn":1427653800000},{"id":66,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":6,"fieldName":"oldId","columnName":"oldId","displayName":"oldId","description":"oldIdof tc","mandatory":false,"searchable":false,"importable":false,"exportable":false,"searchFieldName":"","createdOn":1427653800000},{"id":67,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":9,"fieldName":"attachments","columnName":"","displayName":"","description":"attachments of tc","mandatory":false,"searchable":false,"importable":false,"exportable":false,"searchFieldName":"","createdOn":1427653800000},{"id":68,"entityName":"Testcase","systemField":true,"fieldTypeMetadata":7,"fieldName":"stepSequence","columnName":"","displayName":"Test Steps #","description":"step sequence of tc","mandatory":false,"searchable":false,"importable":false,"exportable":false,"searchFieldName":"","createdOn":1427653800000}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Add Parent values for Cascade custom field [/field/cascade]
### Add Parent values for Cascade custom field [PUT]
Add Parent values for Cascade custom field 

<p>Notes:-</p>

fieldConfig = id of cascade custom field which we get in the response of create cascade custom field Name 

parent = pass 0 when adding parent values. When adding child values pass corresponding parent id
    


+ Request (application/json application/xml)

        {
          "id": 5,
          "name": "Parent3_edit",
          "fieldConfig": 1028,
          "parent": 0
        }

+ Response 200 (application/json application/xml)

        {
          "id": 5,
          "name": "Parent3_edit",
          "fieldConfig": 1028,
          "parent": 0,
          "updatedDate": 1597570321910
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Validating field in the system. [/field/validate{?id}{?entityname}{?searchfieldname}]
### Validating field in the system. [GET]
This method will valide customfield for the entity in system.
    

+ Parameters
    + id (optional, Long) ... id required only for removing field.
    + entityname (required, String) ... entityname for searching and validating fields.
    + searchfieldname (required, String) ... id required only for removing field.


+ Response 200 (application/json application/xml)

        true
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group FieldMap
The following is a section of resources related to the Field maps

## Create a Map  [/fieldmap/]
### Create a Map  [POST]
create field map
    
Notes:-

startingRownumber = Row number from the excel sheet where the data is there 

discriminator = There are 3 discriminators

    byidchange

    byemptyrow

    bytestcasenamechange


+ Request (application/json application/xml)

        {
          "name": "Map1",
          "description": "",
          "startingRowNumber": 2,
          "discriminator": "byidchange",
          "fieldMapDetails": [
            {
              "displayName": "Name *",
              "zephyrField": 1,
              "mappedField": "O",
              "mandatory": true
            },
            {
              "displayName": "Test Steps *",
              "zephyrField": 2,
              "mappedField": "F",
              "mandatory": true
            },
            {
              "displayName": "Expected Results *",
              "zephyrField": 3,
              "mappedField": "H",
              "mandatory": true
            },
            {
              "displayName": "Alt Id *",
              "zephyrField": 21,
              "mappedField": "U",
              "mandatory": true
            }
            ,
            {
              "displayName": "TestData",
              "zephyrField": 22,
              "mappedField": "G",
              "mandatory": false
            },
            {
              "displayName": "Priority",
              "zephyrField": 23,
              "mappedField": "Y",
              "mandatory": false
            }
          ],
          "fieldMapEntityType": "testcase",
          "projectId": 1
        }

+ Response 200 (application/json application/xml)

        {
          "id": 24,
          "name": "Map1",
          "description": "",
          "creationDate": 1597291257949,
          "projectId": 1,
          "startingRowNumber": 2,
          "discriminator": "byidchange",
          "fieldMapDetails": [
            {
              "zephyrField": "2",
              "mappedField": "F"
            },
            {
              "zephyrField": "3",
              "mappedField": "H"
            },
            {
              "zephyrField": "21",
              "mappedField": "U"
            },
            {
              "zephyrField": "22",
              "mappedField": "G"
            },
            {
              "zephyrField": "23",
              "mappedField": "Y"
            },
            {
              "zephyrField": "1",
              "mappedField": "O"
            }
          ],
          "fieldMapEntityType": "testcase"
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group Gadget
The following api is to get the Gadgets.

## Get all requirement node and requirement name by release id [/gadget/{dashboardId}]
### Get all requirement node and requirement name by release id [GET]
To get all requirement node and requirement name by release id
    
+ Parameters
    + dashboardId (required, Long) ... dashboard id



+ Response 200 (application/json application/xml)

        [ { "id" : 1, "name" : "Daily Pulse", "description" : "Shows metrics of testing activities for a release over a given period of time", "createdBy" : 1, "createdOn" : "2018-09-16", "lastmodifiedOn" : 1537040685000, "gadgetMetaDataId" : 10, "dashboardId" : 1, "component" : "ReleaseDailyPulseComponent", "properties" : "{\"component\":{\"name\":\"ReleaseDailyPulseComponent\"},\"settings\":{\"editableUsers\":[],\"pin\":false,\"minimize\":false,\"editable\":true,\"editMode\":true},\"config\":{}}", "orderId" : 1, "propertiesAsString" : "{\"component\":{\"name\":\"ReleaseDailyPulseComponent\"},\"settings\":{\"editableUsers\":[],\"pin\":false,\"minimize\":false,\"editable\":true,\"editMode\":true},\"config\":{}}" } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error


# Group GlobalRepository
The following is a section of resources related to the Global repository

## Get All projects that allowed access to current global reporsitory user [/global-repository/project]
### Get All projects that allowed access to current global reporsitory user [GET]
Get all active projects from global repository tree.
    



+ Response 200 (application/json application/xml)

        [ { "id" : 1, "version" : 1, "name" : "Sample Project", "description" : "This is a sample project shipped with Zephyr. Please modify this one or create a new one for your projects.", "startDate" : 1436812200000, "projectStartDate" : "07/14/2015", "status" : "2", "showItem" : true, "newItem" : true, "dtsId" : 1, "members" : [ ], "sharedProjects" : [ ], "isolationLevel" : 0, "dashboardSecured" : true, "dashboardUrl" : "sample-project-dashboard", "dashboardRestricted" : true, "createdOn" : 1436812200000, "shared" : false, "active" : true, "customProperties" : { }, "customFieldValues" : [ ], "globalProject" : false, "allowedGlobalProject" : false, "autoUpdateTestStatus" : false } ]
+ Response 400 (application/json application/xml)

        Invalid ID supplied
+ Response 404 (application/json application/xml)

        Project(s) not found
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error


# Group Import
The following is a section of resources related to the import

## Create a Import Job [/import/]
### Create a Import Job [POST]
Add new import job
    
Notes:-

folder =First upload the file to the system. Then give the path as mentioned in the request body

fieldMapId = Map id having the mapping details


+ Request (application/json application/xml)

        {
          "name": "job20",
          "scheduledDate": 1595953913568,
          "folder": "/home/qtpl0066/zephyr/soft/apache-tomcat-8.5.41/bin/target/zephyrdata/t2.xlsx",
          "fileExtension": ".xls",
          "fieldMapId": 24,
          "releaseId": 1,
          "importEntityType": "testcase",
          "status": "11000",
          "isUpload": false
        }

+ Response 200 (application/json application/xml)

        {
          "id": 20,
          "name": "job20",
          "folder": "/home/qtpl0066/zephyr/soft/apache-tomcat-8.5.41/bin/target/zephyrdata/t2.xlsx",
          "fileExtension": ".xls",
          "scheduledDate": 1595953913568,
          "status": "11000",
          "fieldMap": {
            "id": 24,
            "name": "Map1",
            "description": "",
            "creationDate": 1597257000000,
            "projectId": 1,
            "startingRowNumber": 2,
            "discriminator": "byidchange",
            "fieldMapDetails": [
              {
                "zephyrField": "2",
                "mappedField": "F"
              },
              {
                "zephyrField": "3",
                "mappedField": "H"
              },
              {
                "zephyrField": "21",
                "mappedField": "U"
              },
              {
                "zephyrField": "22",
                "mappedField": "G"
              },
              {
                "zephyrField": "23",
                "mappedField": "Y"
              },
              {
                "zephyrField": "1",
                "mappedField": "O"
              }
            ],
            "fieldMapEntityType": "testcase"
          },
          "releaseId": 1,
          "importEntityType": "testcase",
          "isUpload": false
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Run the Import Job [/import/execute/{id}/{action}]
### Run the Import Job [PUT]
Run the Import Job

Notes:-

id = id of the import job

    
+ Parameters
    + id (required, Long) ... id of the import job
    + action (required, String) ... action could run/re-run


+ Request (application/json application/xml)

        {
          "id": 20,
          "action": "run"
        }

+ Response 200 (application/json application/xml)

        100
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group LicenseInfo
The following is a section of resources related to the license

## Get License Information. [/info/license]
### Get License Information. [GET]
get system license information.
    



+ Response 200 (application/json application/xml)

        { "licenseType" : "CONCURRENT", "licenseEdition" : "DATACENTER", "validTill" : "2019-02-12", "totalUsers" : 20, "licenseExpiry" : "2019-02-12", "numberOfUsers" : 20, "zephyrApplicationVersion" : "${appVersion}", "licenseActivationDate" : "2018-02-12", "buildNumber" : "", "currentlyLogged" : 0 }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group License
The following is a section of resources related to the license

## Get License Information [/license/]
### Get License Information [GET]
To get system license information
    



+ Response 200 (application/json application/xml)

        {"licenseEdition":"ENTERPRISE","licenseType":"CONCURRENT","companyName":"D Software Inc.","email":"admin@getzephyr.com","expirationDate":"Feb 11, 2017 12:00:00 AM","activationDate":"Feb 11, 2016 12:00:00 AM","validityLicenseMap":{"Sat Feb 11 00:00:00 IST 2017":200},"noOfTotalUser":1000,"noOfPaidUser":200,"custId":"ZB-00001","licenseId":"16604"}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group ParserTemplate
The following API is a section of resources related to the parser-template.

## Create Template  [/parsertemplate/]
### Create Template  [POST]
Create a new custom parser template
    


+ Request (application/json application/xml)

        {
          "name": "Selenium",
          "jsonTemplate": "[{ \"status\": \"${testsuite.testcase.failure}\", \"statusExistPass\": false, \"statusString\": null, \"statusFailAttachmentText\": \"${testsuite.testcase.failure}\", \"statusPassAttachmentText\": \"classname: ${testsuite.testcase:classname} \nname: ${testsuite.testcase:name} \ntime: ${testsuite.testcase:time}\", \"packageName\": \"${testsuite.testcase:classname}\" , \"skipTestcaseNames\": \"\", \"testcase\" : {\"name\": \"${testsuite.testcase:name}\"}, \"requirements\": [{\"id\": \"${testsuite.testcase.requirements.requirement}\"}], \"attachments\": [{\"filePath\": \"${testsuite.testcase.attachments.attachment}\"}]}]"
        }

+ Response 200 (application/json application/xml)

        {
          "id": 101,
          "name": "Selenium",
          "jsonTemplate": "[{ \"status\": \"${testsuite.testcase.failure}\", \"statusExistPass\": false, \"statusString\": null, \"statusFailAttachmentText\": \"${testsuite.testcase.failure}\", \"statusPassAttachmentText\": \"classname: ${testsuite.testcase:classname} \nname: ${testsuite.testcase:name} \ntime: ${testsuite.testcase:time}\", \"packageName\": \"${testsuite.testcase:classname}\" , \"skipTestcaseNames\": \"\", \"testcase\" : {\"name\": \"${testsuite.testcase:name}\"}, \"requirements\": [{\"id\": \"${testsuite.testcase.requirements.requirement}\"}], \"attachments\": [{\"filePath\": \"${testsuite.testcase.attachments.attachment}\"}]}]",
          "isDeleted": false,
          "isDefault": false,
          "isSbAutomationTool": false,
          "createdBy": 1,
          "createdOn": 1580470605486
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Delete Template  [/parsertemplate/{id}]
### Delete Template  [DELETE]
Delete a parser template by template-id
    
+ Parameters
    + id (required, Long) ... Template Id is needed to delete that parser template



+ Response 200 (application/json application/xml)

        true
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Template  [/parsertemplate/{ptId}]
### Get Template  [GET]
Get a parser template information by template-id
    
+ Parameters
    + ptId (required, Long) ... Need Template Id to get the required parser template



+ Response 200 (application/json application/xml)

        {
          "id": 101,
          "name": "Selenium",
          "jsonTemplate": "[{ \"status\": \"${testsuite.testcase.failure}\", \"statusExistPass\": false, \"statusString\": null, \"statusFailAttachmentText\": \"${testsuite.testcase.failure}\", \"statusPassAttachmentText\": \"classname: ${testsuite.testcase:classname} \nname: ${testsuite.testcase:name} \ntime: ${testsuite.testcase:time}\", \"packageName\": \"${testsuite.testcase:classname}\" , \"skipTestcaseNames\": \"\", \"testcase\" : {\"name\": \"${testsuite.testcase:name}\"}, \"requirements\": [{\"id\": \"${testsuite.testcase.requirements.requirement}\"}], \"attachments\": [{\"filePath\": \"${testsuite.testcase.attachments.attachment}\"}]}]",
          "isDeleted": false,
          "isDefault": false,
          "isSbAutomationTool": false,
          "createdBy": 1
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get List of Templates  [/parsertemplate]
### Get List of Templates  [GET]
Get all the parser template's information which exist in system
    



+ Response 200 (application/json application/xml)

        [
          {
            "id": 101,
            "name": "Selenium",
            "jsonTemplate": "[{ \"status\": \"${testsuite.testcase.failure}\", \"statusExistPass\": false, \"statusString\": null, \"statusFailAttachmentText\": \"${testsuite.testcase.failure}\", \"statusPassAttachmentText\": \"classname: ${testsuite.testcase:classname} \nname: ${testsuite.testcase:name} \ntime: ${testsuite.testcase:time}\", \"packageName\": \"${testsuite.testcase:classname}\" , \"skipTestcaseNames\": \"\", \"testcase\" : {\"name\": \"${testsuite.testcase:name}\"}, \"requirements\": [{\"id\": \"${testsuite.testcase.requirements.requirement}\"}], \"attachments\": [{\"filePath\": \"${testsuite.testcase.attachments.attachment}\"}]}]",
            "isDeleted": false,
            "isDefault": false,
            "isSbAutomationTool": false,
            "createdBy": 1
          },
          {
            "id": 102,
            "name": "UFT",
            "jsonTemplate": "[{ \"status\": \"${testsuite.testcase.failure:message}\", \"statusExistPass\": false, \"statusString\": null, \"statusFailAttachmentText\": \"${testsuite.testcase.failure:message}\", \"statusPassAttachmentText\": \"name: ${testsuite.testcase:name} \nreport: ${testsuite.testcase:report} \ntime: ${testsuite.testcase:time} \nclassname: ${testsuite.testcase:classname} \nstatus: ${testsuite.testcase:status} \", \"packageName\": \"${testsuite:package}\" , \"skipTestcaseNames\": \"\", \"testcase\" : {\"name\": \"${testsuite.testcase:name}\"}, \"requirements\": [{\"id\": \"${testsuite.testcase.requirements.requirement}\"}], \"attachments\": [{\"filePath\": \"${testsuite.testcase.attachments.attachment}\"}]}]",
            "isDeleted": false,
            "isDefault": false,
            "isSbAutomationTool": false,
            "createdBy": 1
          },
          {
            "id": 103,
            "name": "Tricentis Tosca",
            "jsonTemplate": "[{ \"status\": \"${testsuite.testcase.failure}\", \"statusExistPass\": false, \"statusString\": null, \"statusFailAttachmentText\": \"${testsuite.testcase.failure}\", \"statusPassAttachmentText\": \"name: ${testsuite.testcase:name} \ntime: ${testsuite.testcase:time} \ntimestamp: ${testsuite.testcase:timestamp} \nlog: ${testsuite.testcase:log} \", \"packageName\": \"${testsuite:name}\" , \"skipTestcaseNames\": \"\", \"testcase\" : {\"name\": \"${testsuite.testcase:name}\"}, \"requirements\": [{\"id\": \"${testsuite.testcase.requirements.requirement}\"}], \"attachments\": [{\"filePath\": \"${testsuite.testcase.attachments.attachment}\"}]}]",
            "isDeleted": false,
            "isDefault": false,
            "isSbAutomationTool": false,
            "createdBy": 1
          }
        ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Update Template  [/parsertemplate/{pId}]
### Update Template  [PUT]
Update a parser template information by template-id
    
+ Parameters
    + pId (required, Long) ... template id


+ Request (application/json application/xml)

        {
          "id": 101,
          "parserTemplateDTO": {
            "name": "Selenium",
            "jsonTemplate": "[{ \"status\": \"${testsuite.testcase.failure}\", \"statusExistPass\": false, \"statusString\": null, \"statusFailAttachmentText\": \"${testsuite.testcase.failure}\", \"statusPassAttachmentText\": \"classname: ${testsuite.testcase:classname} \ntime: ${testsuite.testcase:time}\", \"packageName\": \"${testsuite.testcase:classname}\" , \"skipTestcaseNames\": \"\", \"testcase\" : {\"name\": \"${testsuite.testcase:name}\"}, \"requirements\": [{\"id\": \"${testsuite.testcase.requirements.requirement}\"}], \"attachments\": [{\"filePath\": \"${testsuite.testcase.attachments.attachment}\"}]}]"
          }
        }

+ Response 200 (application/json application/xml)

        {
          "id": 101,
          "name": "Selenium",
          "jsonTemplate": "[{ \"status\": \"${testsuite.testcase.failure}\", \"statusExistPass\": false, \"statusString\": null, \"statusFailAttachmentText\": \"${testsuite.testcase.failure}\", \"statusPassAttachmentText\": \"classname: ${testsuite.testcase:classname} \ntime: ${testsuite.testcase:time}\", \"packageName\": \"${testsuite.testcase:classname}\" , \"skipTestcaseNames\": \"\", \"testcase\" : {\"name\": \"${testsuite.testcase:name}\"}, \"requirements\": [{\"id\": \"${testsuite.testcase.requirements.requirement}\"}], \"attachments\": [{\"filePath\": \"${testsuite.testcase.attachments.attachment}\"}]}]",
          "isDeleted": false,
          "isDefault": false,
          "isSbAutomationTool": false,
          "createdBy": 1,
          "modifiedBy": 1,
          "modifiedOn": 1580465961717
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error


# Group Projects
The following is a section of resources related to the Project

## Create  Project [/project/]
### Create  Project [POST]
New Project will be created and details of created project will be displayed to user.
 
 <p>Note:-</p>

Above three is the mandatory field

IsolationLevel Value can be

0 – Normal

1 - Restricted

2 - Isolated   

dtsId = 2 will create project with Zephyr Internal

For Jira pass corresponding jira dtsId

+ Request (application/json application/xml)

          {
          "name":"Zephyr Migration projectAA ",
          "startDate":"1596738600000",
          "isolationLevel":0,
          "dtsId": 1  
          }

+ Response 200 (application/json application/xml)

        {
          "projectDto": {
            "id": 45,
            "version": 0,
            "name": "Zephyr Migration projectAA ",
            "startDate": 1596738600000,
            "projectStartDate": "08/07/2020",
            "showItem": false,
            "newItem": false,
            "dtsId": 1,
            "members": [],
            "projectGroups": [],
            "sharedProjects": [],
            "isolationLevel": 0,
            "dashboardSecured": false,
            "dashboardRestricted": false,
            "createdOn": 1597335359542,
            "shared": false,
            "active": true,
            "customProperties": {},
            "globalProject": false,
            "allowedGlobalProject": false,
            "autoUpdateTestStatus": false,
            "webhookId": 0,
            "allowedInternalRequirements": false
          },
          "totalResources": 0
        }
+ Response 400 (application/json application/xml)

        Unkown error
+ Response 404 (application/json application/xml)

        Project Creation Failed
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get All Normal Project Details [/project/details]
### Get All Normal Project Details [GET]
Display details of all normal project from global tree.
    



+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Invalid call
+ Response 404 (application/json application/xml)

        No User found.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get All Normal project [/project/normal]
### Get All Normal project [GET]
Get All Normal project from Global tree.
    



+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Invalid call
+ Response 404 (application/json application/xml)

        No User found.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get lead for all projects [/project/all/leads]
### Get lead for all projects [GET]
It will display information about leads for respective projects.
    



+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Invalid ID supplied
+ Response 404 (application/json application/xml)

        Project(s) not found
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Project by ID [/project/{id}]
### Get Project by ID [GET]
Get Project Details based on the id passed in url.
    
+ Parameters
    + id (required, Long) ... ID for the project 



+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Invalid ID supplied
+ Response 404 (application/json application/xml)

        Project not found
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform the operation.
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Project Team Count for all projects [/project/count/allprojects]
### Get Project Team Count for all projects [GET]
Get total number of team members from all projects in global tree.
    



+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Invalid call
+ Response 404 (application/json application/xml)

        No User found.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Project Team Count for all users [/project/count/allusers]
### Get Project Team Count for all users [GET]
Display total number of teams with respect to project for all users from global tree.
    



+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Invalid call
+ Response 404 (application/json application/xml)

        No User found.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Project Team  for Allocated Projects [/project/allocated/projects]
### Get Project Team  for Allocated Projects [GET]
Display project team for all allocated projects from global tree.
    



+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Invalid call
+ Response 404 (application/json application/xml)

        No User found.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Project team for project [/project/projectteam/{pid}]
### Get Project team for project [GET]
Display team information for the project from global tree.
    
+ Parameters
    + pid (required, Long) ... Project ID for which the project teams are requested



+ Response 200 (application/json application/xml)

        [ { "id" : 1, "version" : 0, "startDate" : "2015-07-14", "role" : { "id" : 3, "name" : "tester", "description" : "Tester (Default role, cannot be modified)", "editable" : false, "createdOn" : 1436812200000 }, "userId" : 1, "projectId" : 1 }, { "id" : 2, "version" : 0, "startDate" : "2015-07-14", "role" : { "id" : 2, "name" : "lead", "description" : "Test Lead (Default role, cannot be modified)", "editable" : false, "createdOn" : 1436812200000 }, "userId" : 2, "projectId" : 1 }, { "id" : 3, "version" : 0, "startDate" : "2015-07-14", "role" : { "id" : 3, "name" : "tester", "description" : "Tester (Default role, cannot be modified)", "editable" : false, "createdOn" : 1436812200000 }, "userId" : 3, "projectId" : 1 } ]
+ Response 400 (application/json application/xml)

        Invalid ID supplied
+ Response 404 (application/json application/xml)

        Project not found
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get All projects  [/project{?includeinactive}]
### Get All projects  [GET]
Get all active projects from global tree.
    

+ Parameters
    + includeinactive (optional, boolean) ...  Include deactivated projects


+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Invalid ID supplied
+ Response 404 (application/json application/xml)

        Project(s) not found
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Projects by User ID [/project/user/{userid}{?isLite}{?adminUser}]
### Get Projects by User ID [GET]
Get projects by User ID from GLobal tree. Returns list of projects based on user id.
    
+ Parameters
    + userid (required, Long) ... User ID for which the projects are requested

+ Parameters
    + isLite (required, Boolean) ... islite
    + adminUser (optional, boolean) ... adminuser

+ Request (application/json application/xml)

        [{"id":1,"version":1,"name":"Sample Project","description":"This is a sample project shipped with Zephyr. Please modify this one or create a new one for your projects.","startDate":1436812200000,"projectStartDate":"07/14/2015","status":"2","showItem":true,"newItem":true,"members":[],"isolationLevel":0,"dashboardSecured":true,"dashboardUrl":"sample-project-dashboard","dashboardRestricted":true,"createdOn":1436812200000},{"id":2,"version":2,"name":"project","description":"des","startDate":1492713000000,"projectStartDate":"04/21/2017","endDate":1495218600000,"projectEndDate":"05/20/2017","status":"2","showItem":false,"newItem":false,"externalSystem":"AGILE KANBAN","members":[],"isolationLevel":0,"dashboardSecured":false,"dashboardUrl":"test-project-deepa-dashboard","dashboardRestricted":false,"createdOn":1492757151000},{"id":3,"version":0,"name":"deepa ","description":"","startDate":1492799400000,"projectStartDate":"04/22/2017","status":"2","showItem":false,"newItem":false,"externalSystem":"","members":[],"isolationLevel":0,"dashboardSecured":false,"dashboardUrl":"deepa-dashboard","dashboardRestricted":false,"createdOn":1492778079000}]

+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Invalid ID supplied
+ Response 404 (application/json application/xml)

        Project not found
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get All projects  [/project/lite]
### Get All projects  [GET]
Light call to get all projects from global tree. Only the Project Ids and Names will be fetched 
    



+ Response 200 (application/json application/xml)

        [
          {
            "id": 1,
            "version": 0,
            "name": "Sample Project",
            "showItem": false,
            "newItem": false,
            "members": [],
            "projectGroups": [],
            "sharedProjects": [],
            "isolationLevel": 0,
            "dashboardSecured": false,
            "dashboardRestricted": false,
            "shared": false,
            "customProperties": {},
            "globalProject": false,
            "allowedGlobalProject": false,
            "autoUpdateTestStatus": false,
            "webhookId": 0
          },
          {
            "id": 3,
            "version": 0,
            "name": "p1",
            "showItem": false,
            "newItem": false,
            "members": [],
            "projectGroups": [],
            "sharedProjects": [],
            "isolationLevel": 0,
            "dashboardSecured": false,
            "dashboardRestricted": false,
            "shared": false,
            "customProperties": {},
            "globalProject": false,
            "allowedGlobalProject": false,
            "autoUpdateTestStatus": false,
            "webhookId": 0
          }
        ]
+ Response 400 (application/json application/xml)

        Invalid ID supplied
+ Response 404 (application/json application/xml)

        Project(s) not found
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Shared projects  [/project/sharedprojects/{projectid}]
### Get Shared projects  [GET]
Light call to get all shared  projects from global tree. Only the Project Ids and Names will be fetched 
    
+ Parameters
    + projectid (required, Long) ... Project Id



+ Response 200 (application/json application/xml)

        [ 1 ]
+ Response 400 (application/json application/xml)

        Invalid ID supplied
+ Response 404 (application/json application/xml)

        Project(s) not found
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get All projects  [/project/shared]
### Get All projects  [GET]
Light call to get all projects from global tree. Only the Project Ids and Names will be fetched 
    



+ Response 200 (application/json application/xml)

        [ 1 ]
+ Response 400 (application/json application/xml)

        Invalid ID supplied
+ Response 404 (application/json application/xml)

        Project(s) not found
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Shared projects  [/project/sharedtoprojects/{projectid}]
### Get Shared projects  [GET]
Light call to get all shared  projects from global tree. Only the Project Ids and Names will be fetched 
    
+ Parameters
    + projectid (required, Long) ... Project Id



+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Invalid ID supplied
+ Response 404 (application/json application/xml)

        Project(s) not found
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Assign User to the Project [/project]
### Assign User to the Project [PUT]
Assign User to the Project based on the information provided. Project object should not be null when submitted as part of request payload.
    


+ Request (application/json application/xml)

        {"name":"Zephyr Migration projectAAA",
        "id":45,
        "members":[ 
                    {"userId":28,"id":"0","role":{"text":"Project Admin","id":6}},
                    {"userId":48,"id":"0","role":{"text":"lead","id":2}}
                  ]
        }

+ Response 200 (application/json application/xml)

        {
          "projectDto": {
            "id": 45,
            "version": 2,
            "name": "Zephyr Migration projectAAA",
            "startDate": 1596738600000,
            "projectStartDate": "08/07/2020",
            "showItem": false,
            "newItem": false,
            "dtsId": 2,
            "members": [
              {
                "id": 48,
                "version": 0,
                "startDate": 1596738600000,
                "role": {
                  "id": 6,
                  "hasManagerApp": false,
                  "deletable": true,
                  "editable": true,
                  "isProjectAppRole": false
                },
                "userId": 28,
                "projectId": 45,
                "isGroupUser": false
              },
              {
                "id": 49,
                "version": 0,
                "startDate": 1596738600000,
                "role": {
                  "id": 2,
                  "hasManagerApp": false,
                  "deletable": true,
                  "editable": true,
                  "isProjectAppRole": false
                },
                "userId": 48,
                "projectId": 45,
                "isGroupUser": false
              }
            ],
            "projectGroups": [],
            "sharedProjects": [],
            "isolationLevel": 0,
            "dashboardSecured": false,
            "dashboardRestricted": false,
            "createdOn": 1597335360000,
            "shared": false,
            "active": true,
            "customProperties": {},
            "customFieldValues": [],
            "globalProject": false,
            "allowedGlobalProject": false,
            "autoUpdateTestStatus": false,
            "oldDtsId": 2,
            "webhookId": 0,
            "allowedInternalRequirements": false
          },
          "username": "test.user",
          "firstname": "test",
          "lastname": "user",
          "totalResources": 2,
          "leadUserId": 48,
          "webhookUpdationResponse": {}
        }
+ Response 400 (application/json application/xml)

        Invalid ID supplied
+ Response 404 (application/json application/xml)

        Project not found
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error


# Group Releases
The following API is a section of resources related to the Release

## Release Resources [/release/]
### Create  Release [POST]
Create a new Release under selected project.

<p>Notes:-</p>

projectId = Project where we want to create the release

Field End Date should not be earlier than Start Date.
    


+ Request (application/json application/xml)

        {
        "name":"release 3.0",
        "description":"",
        "releaseStartDate":"08/12/2020",
        "releaseEndDate":"08/13/2020",
        "projectId":1
        }

+ Response 200 (application/json application/xml)

        {
          "id": 86,
          "name": "release 3.0",
          "description": "",
          "startDate": 1597170600000,
          "releaseStartDate": "08/12/2020",
          "endDate": 1597257000000,
          "releaseEndDate": "08/13/2020",
          "createdDate": 1597244006673,
          "projectId": 1,
          "orderId": 7,
          "globalRelease": false,
          "projectRelease": false
        }
+ Response 400 (application/json application/xml)

        Unknown error
+ Response 404 (application/json application/xml)

        Release not Created

## Get releases for a project through page and offset [/release/paged/project/{projectid}{?pagesize}{?offset}{?order}{?isascorder}{?isVisible}]
### Get releases for a project through page and offset [GET]
Displaying information of all releases for a project.
    
+ Parameters
    + projectid (required, Long) ... Project ID required for releasing

+ Parameters
    + pagesize (optional, Integer) ... number of results per page
    + offset (optional, Integer) ... first result to start from
    + order (optional, String) ... Order column
    + isascorder (optional, boolean) ... Order by ASC & DESC
    + isVisible (required, boolean) ... To get Active/all releases count


+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Release by Release ID [/release/{releaseid}]
### Get Release by Release ID [GET]
Display details of release based on release on which user is interested. 
    
+ Parameters
    + releaseid (required, Long) ... Release ID required for releasing



+ Response 200 (application/json application/xml)

        {"id":13,"name":"new release","description":"release","startDate":"Jun 3, 2016 12:00:00 AM","createdDate":"Jun 3, 2016 11:55:07 AM","status":0,"projectId":1,"orderId":11}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get all releases for all projects with Access [/release]
### Get all releases for all projects with Access [GET]
Display all releases for all projects with access for global tree.
    



+ Response 200 (application/json application/xml)

        [{"id":1,"name":"Release 1.0","description":"Default release","startDate":1373826600000,"createdDate":1373826600000,"status":0,"externalSystem":"","projectId":1,"orderId":1},{"id":3,"name":"Release1.1","description":"Second release of project Success, most likely be deleted","startDate":1373913000000,"createdDate":1373913000000,"status":0,"externalSystem":"","projectId":1,"orderId":3},{"id":4,"name":"Release 2.0","description":"Project ddd\u0027s first release","startDate":1374517800000,"createdDate":1373913000000,"status":0,"externalSystem":"","projectId":1,"orderId":4},{"id":5,"name":"Release 1.0","description":"Project Success\u0027s first release","startDate":1374431400000,"createdDate":1373913000000,"status":0,"externalSystem":"","projectId":1,"orderId":5},{"id":7,"name":"Release 1.0","description":"","startDate":1373913000000,"createdDate":1374431400000,"status":0,"externalSystem":"","projectId":2,"orderId":7},{"id":8,"name":"ReleaseToBeCloned","description":"","startDate":1381689000000,"createdDate":1382553000000,"status":0,"externalSystem":"","projectId":1,"orderId":8},{"id":9,"name":"ReleaseWithNoTC","description":"","startDate":1384713000000,"createdDate":1385663400000,"status":0,"externalSystem":"jiraProject","projectId":1,"orderId":9},{"id":10,"name":"Free Form tree structure","description":"","startDate":1416508200000,"createdDate":1416853800000,"status":0,"externalSystem":"","projectId":1,"orderId":10},{"id":11,"name":"Release 1.0 - Copy","description":"Default release","createdDate":1464934548000,"status":0,"externalSystem":"","projectId":1,"orderId":11}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get releases for a project [/release/project/{projectid}]
### Get releases for a project [GET]
Displaying information of all releases for a project.
    
+ Parameters
    + projectid (required, Long) ... Project ID required for releasing



+ Response 200 (application/json application/xml)

        [{"id":1,"name":"Release 1.0","description":"Default release","startDate":1373826600000,"createdDate":1373826600000,"status":0,"externalSystem":"","projectId":1,"orderId":1},{"id":3,"name":"Release1.1","description":"Second release of project Success, most likely be deleted","startDate":1373913000000,"createdDate":1373913000000,"status":0,"externalSystem":"","projectId":1,"orderId":3},{"id":4,"name":"Release 2.0","description":"Project ddd\u0027s first release","startDate":1374517800000,"createdDate":1373913000000,"status":0,"externalSystem":"","projectId":1,"orderId":4},{"id":5,"name":"Release 1.0","description":"Project Success\u0027s first release","startDate":1374431400000,"createdDate":1373913000000,"status":0,"externalSystem":"","projectId":1,"orderId":5},{"id":8,"name":"ReleaseToBeCloned","description":"","startDate":1381689000000,"createdDate":1382553000000,"status":0,"externalSystem":"","projectId":1,"orderId":8},{"id":9,"name":"ReleaseWithNoTC","description":"","startDate":1384713000000,"createdDate":1385663400000,"status":0,"externalSystem":"jiraProject","projectId":1,"orderId":9},{"id":10,"name":"Free Form tree structure","description":"","startDate":1416508200000,"createdDate":1416853800000,"status":0,"externalSystem":"","projectId":1,"orderId":10},{"id":11,"name":"Release 1.0 - Copy","description":"Default release","createdDate":1464934548000,"status":0,"externalSystem":"","projectId":1,"orderId":11}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching.
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error


# Group Requirement
The following is a section of resources related to the requirements

## Create requirement [/requirement/]
### Create requirement [POST]
Create new requirement 

Notes:-

requirementTreeId = tree id where requirement needs to be created
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>requirement </td>
                <td>add </td>
                <td>/requirement/{requirementtreeID} </td>
            </tr>
            </table>
    


+ Request (application/json application/xml)

        {
          "requirementTreeId": 7,
          "name": "Untitled requirement",
          "details": "requirement details",
          "createdBy": 1,
          "lastModifiedBy": 1,
          "requirementType": 0,
          "testcaseIds": [],
          "releaseIds": [
            1
          ],
          "customProperties": null
        }

+ Response 200 (application/json application/xml)

        {
          "customProperties": {},
          "customProcessedProperties": {},
          "id": 21,
          "requirementTreeId": 7,
          "name": "Untitled requirement",
          "details": "requirement details",
          "createdOn": 1597245721339,
          "reqCreationDate": "08/12/2020",
          "createdBy": 1,
          "lastModifiedBy": 1,
          "lastModifiedOn": 1597245721452,
          "createDatetime": 1597245721356,
          "requirementType": 0,
          "testcaseIds": [],
          "testcaseVersionIds": [],
          "releaseIds": [
            1
          ],
          "requirementTreeIds": [
            7,
            14
          ],
          "requirementReleaseTestcaseCountMapping": [],
          "projectId": 1,
          "customFieldProcessed": false,
          "customFieldValues": [],
          "releaseNames": [],
          "isBddSupported": false,
          "actualTestcaseIds": []
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Update Requirement [/requirement/{id}]
### Update Requirement [PUT]
To update a specific requirement 

Notes:-

id = requirement id which needs to be updated
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>requirement </td>
                <td>update </td>
                <td>/requirement/{requirementtreeID} </td>
            </tr>
            </table>
    
+ Parameters
    + id (required, Long) ... ID of requirement that needs to be fetched


+ Request (application/json application/xml)

        {
          "attachmentCount": 0,
          "actualTestcaseIds": [],
          "requirementTreeId": 7,
          "name": "Updated Requirement",
          "details": "requirement details",
          "externalId": "AltId:1",
          "url": "http://localhost/",
          "priority": 1,
          "id": 1,
          "releaseIds": [
            "1"
          ],
          "customProperties": {},
          "customProcessedProperties": {},
          "createdBy": 1,
          "createdOn": 1594924200000,
          "reqCreationDate": "07/17/2020",
          "testcaseIds": [],
          "requirementType": 0,
          "requirementReleaseTestcaseCountMapping": [],
          "projectId": 1
        }

+ Response 200 (application/json application/xml)

        21
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Bulk Update Requirement [/requirement/bulk]
### Bulk Update Requirement [POST]
To update  bulk requirement from Vortex
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>requirement </td>
                <td>update </td>
                <td>/bulk/ </td>
            </tr>
            </table>
    


+ Request (application/json application/xml)

        $jsonRequestSingleLine

+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group RequirementTree
The following is a section of resources related to the requirement trees

## Create Requirement Tree [/requirementtree/add/]
### Create Requirement Tree in Release Node [POST]
Create new requirement tree.Mandatory fields: {projectId,name,description} optional: {parentid , releaseid}
       
Notes:-

parentId = pass 0 when creating under Release Node. For child node pass corresponding parent id

releaseIds = id of the release where requirement folder need to be created.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>requirement_tree </td>
                <td>add </td>
                <td>/requirementTree/release/{releaseId} </td>
            </tr>
                    <tr>
                <td>requirement_tree </td>
                <td>add </td>
                <td>/requirementTree/project/{projectId} </td>
            </tr>
            </table>
    


+ Request (application/json application/xml)

        {
          "name": "Node2",
          "description": "",
          "type": "req",
          "releaseIds": [
            "1"
          ],
          "parentId": 0,
          "projectId": 1
        }

+ Response 200 (application/json application/xml)

        {
          "id": 24,
          "name": "Node2",
          "description": "",
          "projectId": 1,
          "parentId": 0,
          "categories": [],
          "requirements": [],
          "releaseIds": [
            1
          ],
          "releaseId": 1,
          "type": "req"
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group Role
The following is a section of resources related to the role

## Add role [/role/]
### Add role [POST]
add / create a role. Default editable is true

<p>Note:-</p>

RoleTemplateId value can be

1 - Administration App

2 - Project App


+ Request (application/json application/xml)

        {"name":"Test Role","description":"created through test","editable":true,"hasManagerApp":0}

+ Response 200 (application/json application/xml)

        {"id":6,"name":"Test Role","description":"created through test","editable":true,"createdOn":"Jun 9, 2016 4:18:56 PM","hasManagerApp":0}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Save or assign role permissions [/role/permission{?roleid}]
### Save or assign role permissions [PUT]
role id to update permission for, permissions is key value pair of role permission

<p>Note:-</p>

applicatiomnName : 1 (System Setup)

applicatiomnName : 2 (User Setup)

applicatiomnName : 3 (Project Setup)

applicatiomnName : 6 (Defect Admin)

applicatiomnName : 32 (Group Setup)

applicatiomnName : 8 (Release Setup)

applicatiomnName : 9 (Requirements)

applicatiomnName : 11 (Test Planning)

applicatiomnName : 13 (Reporting)

applicatiomnName : 15 (Test Repository)

applicatiomnName : 16 (Test Execution)

applicatiomnName : 17 (Defect Tracking)

applicatiomnName : 20 (Execute All Executions)
    

+ Parameters
    + roleid (required, Long) ... role Id

+ Request (application/json application/xml)

        [{"id":29,"applicationName":9,"role":{"id":3,"name":"tester","description":"Tester (Default role, cannot be modified)","editable":false,"createdOn":1373826600000,"hasManagerApp":0}},{"id":30,"applicationName":15,"role":{"id":3,"name":"tester","description":"Tester (Default role, cannot be modified)","editable":false,"createdOn":1373826600000,"hasManagerApp":0}},{"id":31,"applicationName":16,"role":{"id":3,"name":"tester","description":"Tester (Default role, cannot be modified)","editable":false,"createdOn":1373826600000,"hasManagerApp":0}},{"id":32,"applicationName":17,"role":{"id":3,"name":"tester","description":"Tester (Default role, cannot be modified)","editable":false,"createdOn":1373826600000,"hasManagerApp":0}},{"id":33,"applicationName":14,"role":{"id":3,"name":"tester","description":"Tester (Default role, cannot be modified)","editable":false,"createdOn":1373826600000,"hasManagerApp":0}}]

+ Response 200 (application/json application/xml)

        [{"id":91,"applicationName":8},{"id":92,"applicationName":9},{"id":93,"applicationName":10},{"id":94,"applicationName":11},{"id":95,"applicationName":12},{"id":96,"applicationName":13},{"id":97,"applicationName":14},{"id":98,"applicationName":15},{"id":99,"applicationName":16},{"id":100,"applicationName":17}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group Search
The following api is to get the search.

## Reindex specific project by id [/advancesearch/reindex/{pid}]
### Reindex specific project by id [PUT]
Reindex specific project by id.
    
+ Parameters
    + pid (required, Long) ... Project ID for reindexing needs to be run



+ Response 200 (application/json application/json)

        100
+ Response 400 (application/json application/json)

        Invalid ID supplied
+ Response 404 (application/json application/json)

        Project not found
+ Response 401 (application/json application/json)

        Authentication Token Missing
+ Response 403 (application/json application/json)

        User does not have access to perform this operation
+ Response 500 (application/json application/json)

        Unknown Internal Error

## Search via filters [/advancesearch{?word}{?entitytype}{?releaseid}{?zql}{?isascorder}{?order}{?firstresult}{?maxresults}{?is_cfield}{?isOld}]
### Search via filters [GET]
Search results by filters. Entity types : testcase, requirement and execution
    

+ Parameters
    + word (required, String) ... search string
    + entitytype (required, String) ... Entity Name
    + releaseid (required, Long) ... Release Id
    + zql (required, Boolean) ... zql field
    + isascorder (optional, Boolean) ... Order by ASC & DESC
    + order (optional, String) ... Order column
    + firstresult (required, int) ... starting point of record
    + maxresults (required, int) ... no of records to be fatched
    + is_cfield (optional, Boolean) ... custom field order
    + isOld (optional, Boolean) ... isold testcase

+ Request (application/json application/json)

        {"entityType":"testcase","isZql":true,"releaseId":1}

+ Response 200 (application/json application/json)

        [{ "resultSize": 2, "results": [ { "id": 1, "tcrCatalogTreeId": 1, "testcase": { "id": 3, "name": "Untitled", "description": "", "lastModifiedOn": 1458275471000, "creationDate": 1458239400000, "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 0, "oldId": 0, "automated": false, "requirementIds": [], "attachmentCount": 0, "releaseId": 1, "automatedDefault": false }, "revision": 0, "stateFlag": 0, "lastModifiedOn": 1458275471000, "original": true }, { "id": 2, "tcrCatalogTreeId": 1, "testcase": { "id": 4, "name": "Untitled", "description": "", "lastModifiedOn": 1458275472000, "creationDate": 1458239400000, "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 0, "oldId": 0, "automated": false, "requirementIds": [], "attachmentCount": 0, "releaseId": 1, "automatedDefault": false }, "revision": 0, "stateFlag": 0, "lastModifiedOn": 1458275472000, "original": true } ], "type": "testcase" }] 
+ Response 400 (application/json application/json)

        Bad request. Atleast one parameter from releaseid or departmentid is required.
+ Response 401 (application/json application/json)

        Authentication token missing
+ Response 403 (application/json application/json)

        User does not have access to perform this operation
+ Response 500 (application/json application/json)

        unknown internal error

## Search via filters [/advancesearch/]
### Search via filters [POST]
Search results by filters. Entity types : testcase, requirement and execution
    


+ Request (application/json application/json)

        {"entityType":"testcase","isZql":true,"releaseId":1}

+ Response 200 (application/json application/json)

        [{ "resultSize": 2, "results": [ { "id": 1, "tcrCatalogTreeId": 1, "testcase": { "id": 3, "name": "Untitled", "description": "", "lastModifiedOn": 1458275471000, "creationDate": 1458239400000, "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 0, "oldId": 0, "automated": false, "requirementIds": [], "attachmentCount": 0, "releaseId": 1, "automatedDefault": false }, "revision": 0, "stateFlag": 0, "lastModifiedOn": 1458275471000, "original": true }, { "id": 2, "tcrCatalogTreeId": 1, "testcase": { "id": 4, "name": "Untitled", "description": "", "lastModifiedOn": 1458275472000, "creationDate": 1458239400000, "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 0, "oldId": 0, "automated": false, "requirementIds": [], "attachmentCount": 0, "releaseId": 1, "automatedDefault": false }, "revision": 0, "stateFlag": 0, "lastModifiedOn": 1458275472000, "original": true } ], "type": "testcase" }] 
+ Response 400 (application/json application/json)

        Bad request. Atleast one parameter from releaseid or departmentid is required.
+ Response 401 (application/json application/json)

        Authentication token missing
+ Response 403 (application/json application/json)

        User does not have access to perform this operation
+ Response 500 (application/json application/json)

        unknown internal error


# Group ServerInfo
The following API is a section of resources related to the  Server Information

## Clear the Specified Cache [/system/info/cache/clear{?clearall}{?cachename}]
### Clear the Specified Cache [POST]
Clear the cache based on name. Returns true if success.
    

+ Parameters
    + clearall (optional, Boolean) ... Enter a true or false to Clear All 
    + cachename (optional, List) ... Cache Name 

+ Request (application/json application/xml)

        true

+ Response 200 (application/json application/xml)

        true
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Download Zbot [/system/info/downloadzbot]
### Download Zbot [PUT]
Download pre-configured Zbot
    


+ Request (application/json application/xml)

        {"userName":null,"password":null,"serverUrl":null,"zbotFile":null,"zBotName":null,"zephyrApiToken":null}

+ Response 200 (application/json)

+ Response 400 (application/json)

        Bad request. Requirement not matching
+ Response 401 (application/json)

        Authentication Token Missing
+ Response 403 (application/json)

        User does not have access to perform this operation
+ Response 500 (application/json)

        Unknown Internal Error

## Get All list of Caches [/system/info/cache/info]
### Get All list of Caches [GET]
To get the list of cache statistics
    



+ Response 200 (application/json application/xml)

        { "chart.defectCoverageChartReportByPriority" : "{\"lastAccessTime\":1516701321526,\"lastUpdateTime\":1516701321426,\"hits\":1,\"numberOfOtherOperations\":1,\"numberOfEvents\":0,\"getCount\":1,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":169156,\"totalPutLatenciesNanos\":10213933,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":169156,\"maxPutLatency\":10213933,\"maxRemoveLatency\":0,\"creationTime\":1516701321417,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":1378,\"backupEntryMemoryCost\":0,\"heapCost\":1378,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "infinite.requirement.project.fc.customfield" : "{\"lastAccessTime\":1516701342822,\"lastUpdateTime\":1516700924204,\"hits\":1,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":1,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":3298922,\"totalPutLatenciesNanos\":244673,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":3298922,\"maxPutLatency\":244673,\"maxRemoveLatency\":0,\"creationTime\":1516700924202,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":339,\"backupEntryMemoryCost\":0,\"heapCost\":339,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "pref.appPrefTcPriorityStatusCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516700885532,\"hits\":0,\"numberOfOtherOperations\":12737,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":5,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":590914,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":173687,\"maxRemoveLatency\":0,\"creationTime\":1516700885500,\"ownedEntryCount\":5,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":795,\"backupEntryMemoryCost\":0,\"heapCost\":795,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "general.testcaseBatchExecution" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":46,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516700900508,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "chart.lite.defectBacklogChartsByAssigneeLite" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516701321510,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":1686652,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":1686652,\"maxRemoveLatency\":0,\"creationTime\":1516701321507,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":2473,\"backupEntryMemoryCost\":0,\"heapCost\":2473,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "infinite.apiTokens" : "{\"lastAccessTime\":1516702485828,\"lastUpdateTime\":1516702485824,\"hits\":34,\"numberOfOtherOperations\":15,\"numberOfEvents\":0,\"getCount\":34,\"putCount\":17,\"removeCount\":0,\"totalGetLatenciesNanos\":4637823,\"totalPutLatenciesNanos\":2100856,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":971892,\"maxPutLatency\":574301,\"maxRemoveLatency\":0,\"creationTime\":1516701170942,\"ownedEntryCount\":17,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":24837,\"backupEntryMemoryCost\":0,\"heapCost\":24837,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "chart.relMetricsExecutionProgressCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516702229749,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "infinite.uiLoginTokens" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":15,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516701170950,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "pref.appPrefResultStatusCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516700885500,\"hits\":0,\"numberOfOtherOperations\":8130,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":6,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":599219,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":199362,\"maxRemoveLatency\":0,\"creationTime\":1516700884863,\"ownedEntryCount\":6,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":988,\"backupEntryMemoryCost\":0,\"heapCost\":988,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "chart.defectBacklogChartsByAssignee" : "{\"lastAccessTime\":1516701321505,\"lastUpdateTime\":1516701321039,\"hits\":1,\"numberOfOtherOperations\":1,\"numberOfEvents\":0,\"getCount\":1,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":406276,\"totalPutLatenciesNanos\":432707,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":406276,\"maxPutLatency\":432707,\"maxRemoveLatency\":0,\"creationTime\":1516701321032,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":2403,\"backupEntryMemoryCost\":0,\"heapCost\":2403,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "chart.projectRequirementsDistributionCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516702229751,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "infinite.notification.SubsResMap" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516700917923,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "chart.lite.defectCoverageChartReportByPriorityLite" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516701321529,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":393439,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":393439,\"maxRemoveLatency\":0,\"creationTime\":1516701321528,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":1002,\"backupEntryMemoryCost\":0,\"heapCost\":1002,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "infinite.zephyrInstanceId" : "{\"lastAccessTime\":1516702228853,\"lastUpdateTime\":1516700885689,\"hits\":14,\"numberOfOtherOperations\":8130,\"numberOfEvents\":0,\"getCount\":14,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":4905904,\"totalPutLatenciesNanos\":204271,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":3400491,\"maxPutLatency\":204271,\"maxRemoveLatency\":0,\"creationTime\":1516700885596,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":209,\"backupEntryMemoryCost\":0,\"heapCost\":209,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "general.agentsByIp" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":46,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516701110926,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "pref.appPrefTestStepStatusCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516700885596,\"hits\":0,\"numberOfOtherOperations\":8130,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":5,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":1130854,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":471221,\"maxRemoveLatency\":0,\"creationTime\":1516700885576,\"ownedEntryCount\":5,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":817,\"backupEntryMemoryCost\":0,\"heapCost\":817,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "frequent.userByUsernameCache" : "{\"lastAccessTime\":1516702485829,\"lastUpdateTime\":1516701321084,\"hits\":49,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":45,\"putCount\":9,\"removeCount\":0,\"totalGetLatenciesNanos\":10164088,\"totalPutLatenciesNanos\":1664375,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":2362522,\"maxPutLatency\":504448,\"maxRemoveLatency\":0,\"creationTime\":1516701239938,\"ownedEntryCount\":4,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":678,\"backupEntryMemoryCost\":0,\"heapCost\":678,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "chart.lite.defectChartReportByStatusLite" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516701321524,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":1084412,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":1084412,\"maxRemoveLatency\":0,\"creationTime\":1516701321519,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":2937,\"backupEntryMemoryCost\":0,\"heapCost\":2937,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "infinite.notification.resourceSubscriberIdMap" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":1,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":253735,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":253735,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516700917924,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "chart.lite.defectChartReportByComponentLite" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516701321514,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":359835,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":359835,\"maxRemoveLatency\":0,\"creationTime\":1516701321513,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":1407,\"backupEntryMemoryCost\":0,\"heapCost\":1407,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "pref.app_pref_req_priority_status_cache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516700885556,\"hits\":0,\"numberOfOtherOperations\":8130,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":5,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":427042,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":154430,\"maxRemoveLatency\":0,\"creationTime\":1516700885532,\"ownedEntryCount\":5,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":795,\"backupEntryMemoryCost\":0,\"heapCost\":795,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "chart.defectCoverageChartReportByPriorityCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516702229753,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "VERYLOWVALUE.TEST_STEP_BY_TESTCASE_CACHE" : "{\"lastAccessTime\":1516702228638,\"lastUpdateTime\":1516702227741,\"hits\":11,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":12,\"putCount\":6,\"removeCount\":0,\"totalGetLatenciesNanos\":36094441,\"totalPutLatenciesNanos\":3780337,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":20179419,\"maxPutLatency\":2029118,\"maxRemoveLatency\":0,\"creationTime\":1516702227727,\"ownedEntryCount\":3,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":1371,\"backupEntryMemoryCost\":0,\"heapCost\":1371,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "chart.defectChartReportByComponent" : "{\"lastAccessTime\":1516701321512,\"lastUpdateTime\":1516701321069,\"hits\":1,\"numberOfOtherOperations\":1,\"numberOfEvents\":0,\"getCount\":1,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":141593,\"totalPutLatenciesNanos\":373427,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":141593,\"maxPutLatency\":373427,\"maxRemoveLatency\":0,\"creationTime\":1516701321062,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":3092,\"backupEntryMemoryCost\":0,\"heapCost\":3092,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "indexing.project.id" : "{\"indexing.project.id\":0}", "infinite.ZephyDbTypeCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516700885697,\"hits\":0,\"numberOfOtherOperations\":8130,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":433085,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":433085,\"maxRemoveLatency\":0,\"creationTime\":1516700885689,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":172,\"backupEntryMemoryCost\":0,\"heapCost\":172,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "chart.lite.defectChartReportForCreatorLite" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516701321500,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":1763302,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":1763302,\"maxRemoveLatency\":0,\"creationTime\":1516701321481,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":2084,\"backupEntryMemoryCost\":0,\"heapCost\":2084,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "infinite.elasticSearchIndexName" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":2,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":1773119,\"totalPutLatenciesNanos\":177463,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":1564316,\"maxPutLatency\":177463,\"maxRemoveLatency\":0,\"creationTime\":1516700913514,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "chart.defectChartReportForCreator" : "{\"lastAccessTime\":1516701321467,\"lastUpdateTime\":1516701321091,\"hits\":1,\"numberOfOtherOperations\":1,\"numberOfEvents\":0,\"getCount\":1,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":2873389,\"totalPutLatenciesNanos\":368141,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":2873389,\"maxPutLatency\":368141,\"maxRemoveLatency\":0,\"creationTime\":1516701321088,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":2031,\"backupEntryMemoryCost\":0,\"heapCost\":2031,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "general.agentsByToken" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":46,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516701111020,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "chart.defectCoverageChartReportByStatusCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516702229755,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "pref.auth_preference_cache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":18,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":3497153,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":343976,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516700870122,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "pref.preferenceCache" : "{\"lastAccessTime\":1516702485830,\"lastUpdateTime\":1516702227265,\"hits\":165,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":183,\"putCount\":18,\"removeCount\":0,\"totalGetLatenciesNanos\":684568785,\"totalPutLatenciesNanos\":11661200,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":657624617,\"maxPutLatency\":7554255,\"maxRemoveLatency\":0,\"creationTime\":1516700860010,\"ownedEntryCount\":18,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":11781,\"backupEntryMemoryCost\":0,\"heapCost\":11781,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "chart.relMetricsTestcaseByPhaseCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516702229744,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "chart.relMetricsExecutionByUserCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516702229750,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "chart.projectRequirementsCoverageCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516702229752,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "chart.defectCoverageChartReportByStatus" : "{\"lastAccessTime\":1516701321530,\"lastUpdateTime\":1516701321441,\"hits\":1,\"numberOfOtherOperations\":1,\"numberOfEvents\":0,\"getCount\":1,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":98926,\"totalPutLatenciesNanos\":318301,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":98926,\"maxPutLatency\":318301,\"maxRemoveLatency\":0,\"creationTime\":1516701321438,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":1378,\"backupEntryMemoryCost\":0,\"heapCost\":1378,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "chart.clearChartCache" : "{\"chart.clearChartCache\":0}", "infinite.loggedinUsers" : "{\"lastAccessTime\":1516702460860,\"lastUpdateTime\":1516702227283,\"hits\":28,\"numberOfOtherOperations\":23,\"numberOfEvents\":0,\"getCount\":21,\"putCount\":8,\"removeCount\":0,\"totalGetLatenciesNanos\":2370448,\"totalPutLatenciesNanos\":1797284,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":503315,\"maxPutLatency\":573168,\"maxRemoveLatency\":0,\"creationTime\":1516701141008,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":164,\"backupEntryMemoryCost\":0,\"heapCost\":164,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "chart.lite.defectCoverageChartReportByStatusLite" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516701321532,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":254867,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":254867,\"maxRemoveLatency\":0,\"creationTime\":1516701321531,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":1002,\"backupEntryMemoryCost\":0,\"heapCost\":1002,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "general.list.fieldconfig.per.entity" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516700924217,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":281298,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":281298,\"maxRemoveLatency\":0,\"creationTime\":1516700924204,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":3888,\"backupEntryMemoryCost\":0,\"heapCost\":3888,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "pref.appPrefReleaseStatusCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516700885576,\"hits\":0,\"numberOfOtherOperations\":12737,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":3,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":374560,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":200118,\"maxRemoveLatency\":0,\"creationTime\":1516700885557,\"ownedEntryCount\":3,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":495,\"backupEntryMemoryCost\":0,\"heapCost\":495,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "infinite.testcase.project.fc.customfield" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":1,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":438371,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":438371,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516701342849,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "pref.appPreferencesCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516700923833,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":19,\"putCount\":2,\"removeCount\":0,\"totalGetLatenciesNanos\":9009828,\"totalPutLatenciesNanos\":405144,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":6805135,\"maxPutLatency\":239386,\"maxRemoveLatency\":0,\"creationTime\":1516700893222,\"ownedEntryCount\":2,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":502,\"backupEntryMemoryCost\":0,\"heapCost\":502,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "lowvalue.userBatchUpdate" : "{\"lastAccessTime\":1516702485824,\"lastUpdateTime\":1516702485824,\"hits\":1,\"numberOfOtherOperations\":6243,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":17,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":3041411,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":979821,\"maxRemoveLatency\":0,\"creationTime\":1516701140995,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":164,\"backupEntryMemoryCost\":0,\"heapCost\":164,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "loggedUsers" : "{\"loggedUsers\":0}", "chart.defectChartReportByStatus" : "{\"lastAccessTime\":1516701321516,\"lastUpdateTime\":1516701321232,\"hits\":1,\"numberOfOtherOperations\":1,\"numberOfEvents\":0,\"getCount\":1,\"putCount\":1,\"removeCount\":0,\"totalGetLatenciesNanos\":65699,\"totalPutLatenciesNanos\":394949,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":65699,\"maxPutLatency\":394949,\"maxRemoveLatency\":0,\"creationTime\":1516701321226,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":9610,\"backupEntryMemoryCost\":0,\"heapCost\":9610,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "infinite.job_progress_cache" : "{\"lastAccessTime\":1516702229756,\"lastUpdateTime\":1516702229756,\"hits\":4,\"numberOfOtherOperations\":1,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":5,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":1653050,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":1000212,\"maxRemoveLatency\":0,\"creationTime\":1516701620849,\"ownedEntryCount\":1,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":1817,\"backupEntryMemoryCost\":0,\"heapCost\":1817,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "indexing.release.id" : "{\"indexing.release.id\":0}", "frequent.userByEmailCache" : "{\"lastAccessTime\":1516701321082,\"lastUpdateTime\":1516701321082,\"hits\":4,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":8,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":2984775,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":1635679,\"maxRemoveLatency\":0,\"creationTime\":1516701320979,\"ownedEntryCount\":4,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":9974,\"backupEntryMemoryCost\":0,\"heapCost\":9974,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "infinite.notification.SubscriberTopicMap" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516700917887,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "notification.unusedSubscriberIdMap" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516700917923,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}", "infinite.requirement.fc.project.customfield" : "{\"lastAccessTime\":0,\"lastUpdateTime\":1516700924202,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":2,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":499162,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":308106,\"maxRemoveLatency\":0,\"creationTime\":1516700924198,\"ownedEntryCount\":2,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":574,\"backupEntryMemoryCost\":0,\"heapCost\":574,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":1}", "chart.relMetricsTestcaseByUserCache" : "{\"lastAccessTime\":0,\"lastUpdateTime\":0,\"hits\":0,\"numberOfOtherOperations\":0,\"numberOfEvents\":0,\"getCount\":0,\"putCount\":0,\"removeCount\":0,\"totalGetLatenciesNanos\":0,\"totalPutLatenciesNanos\":0,\"totalRemoveLatenciesNanos\":0,\"maxGetLatency\":0,\"maxPutLatency\":0,\"maxRemoveLatency\":0,\"creationTime\":1516702229747,\"ownedEntryCount\":0,\"backupEntryCount\":0,\"ownedEntryMemoryCost\":0,\"backupEntryMemoryCost\":0,\"heapCost\":0,\"lockedEntryCount\":0,\"dirtyEntryCount\":0,\"backupCount\":0}" }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Channel Information [/system/info/channelinfo]
### Get Channel Information [GET]
Returns the channel information
    



+ Response 200 (application/xml)

        {"statusCode":"OK","headers":{"Server":["Apache-Coyote/1.1"],"Set-Cookie":["token\u003d9b340914-2b5e-4107-8e2a-888de4071c98; Expires\u003dTue, 19-Jul-2016 09:17:51 GMT; Path\u003d/flex; HttpOnly"],"Date":["Tue, 05 Jul 2016 09:17:51 GMT"],"Content-Type":["application/xml;charset\u003dUTF-8"],"Transfer-Encoding":["chunked"]},"body":{}}
+ Response 400 (application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/xml)

        Authentication Token Missing
+ Response 403 (application/xml)

        User does not have access to perform this operation
+ Response 500 (application/xml)

        Unknown Internal Error

## Get License Information [/system/info/license]
### Get License Information [GET]
To get all the information about license
    



+ Response 200 (application/json)

        {"licenseType":"CONCURRENT","licenseEdition":"ENTERPRISE","validTill":"2017-02-11","totalUsers":200,"licenseExpiry":"2017-02-11","numberOfUsers":200,"zephyrApplicationVersion":"4.8","licenseActivationDate":"2016-02-11","buildNumber":"12264","currentlyLogged":1}
+ Response 400 (application/json)

        Bad request. Requirement not matching
+ Response 401 (application/json)

        Authentication Token Missing
+ Response 403 (application/json)

        User does not have access to perform this operation
+ Response 500 (application/json)

        Unknown Internal Error

## Get License Information [/system/info/servertime]
### Get License Information [GET]
To get Zephyr server time and TimeZone
    



+ Response 200 (application/json)

+ Response 400 (application/json)

        Bad request. Requirement not matching
+ Response 401 (application/json)

        Authentication Token Missing
+ Response 403 (application/json)

        User does not have access to perform this operation
+ Response 500 (application/json)

        Unknown Internal Error

## Get License Information [/system/info/stats]
### Get License Information [GET]
To get all the information about license
    



+ Response 200 (application/json)

        { "projects" : 1, "releases" : 1, "requirements" : 4, "testcases" : 3, "cycles" : 1, "executions" : 3, "defects" : 0, "attachments" : 0 }
+ Response 400 (application/json)

        Bad request. Requirement not matching
+ Response 401 (application/json)

        Authentication Token Missing
+ Response 403 (application/json)

        User does not have access to perform this operation
+ Response 500 (application/json)

        Unknown Internal Error


# Group TestStepResult
The following is a section of resources related to the executions Test Step Result

## Get teststep results by ID's [/execution/teststepresult/bytctid{?tctid}]
### Get teststep results by ID's [GET]
Get teststep results by ID's. Optional parameters include - list of tct ID's
    

+ Parameters
    + tctid (optional, Long) ... TCRCatalogTreeTestcase ids


+ Response 200 (application/json application/xml)

        [{"id":2,"comment":"tset result","status":"1","testStepId":1,"releaseTestScheduleId":2,"cyclePhaseId":1,"executionDate":1493708957000,"attachmentCount":0},{"id":3,"comment":"tset result","status":"1","testStepId":1,"releaseTestScheduleId":2,"cyclePhaseId":1,"executionDate":1494081188000,"attachmentCount":0},{"id":4,"comment":"tset result","status":"1","testStepId":1,"releaseTestScheduleId":2,"cyclePhaseId":1,"executionDate":1494844802000,"attachmentCount":0},{"id":5,"comment":"tset result","status":"1","testStepId":1,"releaseTestScheduleId":2,"cyclePhaseId":1,"executionDate":1494845235000,"attachmentCount":0},{"id":8,"comment":"tset result","status":"1","testStepId":1,"releaseTestScheduleId":2,"cyclePhaseId":1,"executionDate":1494943674000,"attachmentCount":0},{"id":9,"comment":"tset result","status":"1","testStepId":1,"releaseTestScheduleId":2,"cyclePhaseId":1,"executionDate":1494943674000,"attachmentCount":0}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get Test Step Result [/execution/teststepresult/{id}]
### Get Test Step Result [GET]
To get Test Step Result by teststep ID
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>execution_result </td>
                <td>subscribe </td>
                <td>/teststep/{testcaseId} </td>
            </tr>
            </table>
    
+ Parameters
    + id (required, Long) ... Id of TestStepResult



+ Response 200 (application/json application/xml)

        {"id":19,"comment":"Teststep is success","status":"1","testStepId":1,"releaseTestScheduleId":9,"cyclePhaseId":36,"executionDate":"Jul 18, 2013 12:00:00 AM","attachmentCount":0}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get test step results by criteria [/execution/teststepresult{?sids}{?cyclephaseid}]
### Get test step results by criteria [GET]
Get test step results by criteria. Optional parameters include -list of schedule ID'S cyclephase ID or teststep ID
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>execution_result </td>
                <td>subscribe </td>
                <td>/teststep/{testcaseId} </td>
            </tr>
            </table>
    

+ Parameters
    + sids (optional, List) ... Release test schedule ids
    + cyclephaseid (optional, Long) ... Cycle phase id 


+ Response 200 (application/json application/xml)

        [{"id":19,"comment":"Teststep is success","status":"1","testStepId":1,"releaseTestScheduleId":9,"cyclePhaseId":36,"executionDate":1374085800000,"attachmentCount":0}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Save or Update Test step result [/execution/teststepresult/saveorupdate]
### Save or Update Test step result [POST]
To save or update existing Test Step Results
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>execution_result </td>
                <td>update </td>
                <td>/teststep/{testcaseId} </td>
            </tr>
            </table>
    


+ Request (application/json application/xml)

        $jsonRequestSingleLine

+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group Testcase
The following API is a section of resources related to the Testcase.

## Mapping Single Testcase to Requirements from multiple nodes  [/testcase/allocate/requirement/{testcaseid}{?releaseid}]
### Mapping Single Testcase to Requirements from multiple nodes  [POST]
Allocate a test case to requirement. Mandatory Fields: Testcaseid,Allocate requirement object and release id.

Notes:-

testcaseid = here testcaseid is the testcase version id

Here 5,6 is requirement tree id , 7,8,9 and 10 is requirement id. 

    
+ Parameters
    + testcaseid (required, Long) ... Testcase Id

+ Parameters
    + releaseid (required, Long) ... Release Id

+ Request (application/json application/xml)

        {"modRequirementTree":[[5,0],[6,0]],"testcaseid":3,"modRequirement":[[5,7],[5,8],[5,9],[5,10]],"releaseId":1}

+ Response 200 (application/json application/xml)

        [ 7, 8, 9, 10 ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Mapping Multiple testcases to Multiple Requirements  [/testcase/allocate/requirement{?releaseid}{?tcrCatalogTreeId}]
### Mapping Multiple testcases to Multiple Requirements  [POST]
Allocate multiple test cases to requirements. Mandatory Fields: Allocate requirement object and release id.
   
    Notes:-
    
testcaseid = here testcaseid is the testcase version id

tcrCatalogTreeId = tree id where testcase is present

Here 6, 5 is requirement tree id , 5,7,8 and 10 is requirement id. 

+ Parameters
    + releaseid (required, Long) ... Release Id
    + tcrCatalogTreeId (optional, Long) ... node id for which requirements needs to be map

+ Request (application/json application/xml)

        {"modRequirementTree":[[6,0],[5,0]],"testcaseids":[3,4,5,6],"modRequirement":[[5,7],[5,8],[5,9],[5,10]],"releaseId":1,"override":false}

+ Response 200 (application/json application/xml)

        { "3" : [ 7, 8, 9, 10 ], "4" : [ 7, 8, 9, 10 ], "5" : [ 7, 8, 9, 10 ], "6" : [ 7, 8, 9, 10 ] }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Bulk Update Testcase values [/testcase/update/bulk{?tcrCatalogTreeId}]
### Bulk Update Testcase values [PUT]
Use this resource to bulk update testcase values. Mandatory Fields: list of estcase id should not be blank and not null.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>update </td>
                <td>/testcase/{treeid} </td>
            </tr>
            </table>
    

+ Parameters
    + tcrCatalogTreeId (optional, Long) ... node id for which requirements needs to be deleted

+ Request (application/json application/xml)

        {"comments":"comment bulk update","ids":[3,4,5,6]}

+ Response 200 (application/json application/xml)

        [ { "id" : 1, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 3, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709071002, "versionNumber" : 3, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 8, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 3, "versionNumber" : 3, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516709070980, "automatedDefault" : false }, "original" : true }, { "id" : 2, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 4, "name" : "Untitledfdsffsad", "externalId" : "", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709071072, "versionNumber" : 3, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 9, "name" : "Untitledfdsffsad", "externalId" : "", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 4, "versionNumber" : 3, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516709071066, "automatedDefault" : false }, "original" : true }, { "id" : 3, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 5, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 2, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709071098, "versionNumber" : 2, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 10, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 5, "versionNumber" : 2, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516709071094, "automatedDefault" : false }, "original" : true }, { "id" : 4, "tcrCatalogTreeId" : 3, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 3, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 4, "stateFlag" : 0, "lastModifiedOn" : 1516617860000, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 1, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617860000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 3, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516559400000, "automatedDefault" : false }, "original" : false }, { "id" : 5, "tcrCatalogTreeId" : 3, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 4, "name" : "Untitledfdsffsad", "externalId" : "", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 4, "stateFlag" : 0, "lastModifiedOn" : 1516617861000, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 2, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617861000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 4, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516559400000, "automatedDefault" : false }, "original" : false }, { "id" : 6, "tcrCatalogTreeId" : 3, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 5, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 2, "projectId" : 1, "automatedDefault" : false }, "revision" : 4, "stateFlag" : 0, "lastModifiedOn" : 1516617862000, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 3, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617862000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 5, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516559400000, "automatedDefault" : false }, "original" : false }, { "id" : 7, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 6, "name" : "asdf", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709071141, "versionNumber" : 3, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 11, "name" : "asdf", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 6, "versionNumber" : 3, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516709071135, "automatedDefault" : false }, "original" : true }, { "id" : 8, "tcrCatalogTreeId" : 3, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 6, "name" : "asdf", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 4, "stateFlag" : 1, "lastModifiedOn" : 1516703067000, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 4, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516703023000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 6, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : false }, { "id" : 9, "tcrCatalogTreeId" : 4, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 3, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 5, "stateFlag" : 0, "lastModifiedOn" : 1516707441000, "versionNumber" : 2, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 6, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617860000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 3, "versionNumber" : 2, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : false }, { "id" : 10, "tcrCatalogTreeId" : 4, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 4, "name" : "Untitledfdsffsad", "externalId" : "", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 5, "stateFlag" : 0, "lastModifiedOn" : 1516707441000, "versionNumber" : 2, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 7, "name" : "Untitledfdsffsad", "externalId" : "", "description" : "", "lastModifiedOn" : 1516707422000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 4, "versionNumber" : 2, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : false }, { "id" : 11, "tcrCatalogTreeId" : 4, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 5, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 2, "projectId" : 1, "automatedDefault" : false }, "revision" : 5, "stateFlag" : 0, "lastModifiedOn" : 1516617862000, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 3, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617862000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 5, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516559400000, "automatedDefault" : false }, "original" : false }, { "id" : 12, "tcrCatalogTreeId" : 4, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 6, "name" : "asdf", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 5, "stateFlag" : 0, "lastModifiedOn" : 1516707441000, "versionNumber" : 2, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 5, "name" : "asdf", "description" : "", "lastModifiedOn" : 1516707241000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 6, "versionNumber" : 2, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : false } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Bulk Update Testcase values [/testcase/bulk{?externalid}{?priority}{?tag}{?comments}{?scriptpath}{?scriptid}{?scriptname}{?automated}{?estimatedtime}{?testcaseid}]
### Bulk Update Testcase values [PUT]
Use this resource to bulk update testcase values. mandatory fields: testcaseIdsLsit should not be null and it should not be blank.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>update </td>
                <td>/testcase/{treeid} </td>
            </tr>
            </table>
    

+ Parameters
    + externalid (optional, String) ... External ID for bulk update
    + priority (optional, String) ... Priority for bulk update
    + tag (optional, String) ... Tag for Bulk Update
    + comments (optional, String) ... Comments for Bulk Update
    + scriptpath (optional, String) ... Script Path for Bulk Update
    + scriptid (optional, String) ... Script ID for Bulk Update
    + scriptname (optional, String) ... Script Name for Bulk Update
    + automated (optional, Boolean) ... Automated for Bulk Update
    + estimatedtime (optional, Integer) ... Estimated time for Bulk Update
    + testcaseid (required, List) ... Testcase ID for Bulk Update

+ Request (application/json application/xml)

        {"comments":"comment bulk update","ids":[3,4,5,6]}

+ Response 200 (application/json application/xml)

        [ { "id" : 1, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 3, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709071002, "versionNumber" : 3, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 8, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 3, "versionNumber" : 3, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516709070980, "automatedDefault" : false }, "original" : true }, { "id" : 2, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 4, "name" : "Untitledfdsffsad", "externalId" : "", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709071072, "versionNumber" : 3, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 9, "name" : "Untitledfdsffsad", "externalId" : "", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 4, "versionNumber" : 3, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516709071066, "automatedDefault" : false }, "original" : true }, { "id" : 3, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 5, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 2, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709071098, "versionNumber" : 2, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 10, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 5, "versionNumber" : 2, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516709071094, "automatedDefault" : false }, "original" : true }, { "id" : 4, "tcrCatalogTreeId" : 3, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 3, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 4, "stateFlag" : 0, "lastModifiedOn" : 1516617860000, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 1, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617860000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 3, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516559400000, "automatedDefault" : false }, "original" : false }, { "id" : 5, "tcrCatalogTreeId" : 3, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 4, "name" : "Untitledfdsffsad", "externalId" : "", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 4, "stateFlag" : 0, "lastModifiedOn" : 1516617861000, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 2, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617861000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 4, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516559400000, "automatedDefault" : false }, "original" : false }, { "id" : 6, "tcrCatalogTreeId" : 3, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 5, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 2, "projectId" : 1, "automatedDefault" : false }, "revision" : 4, "stateFlag" : 0, "lastModifiedOn" : 1516617862000, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 3, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617862000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 5, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516559400000, "automatedDefault" : false }, "original" : false }, { "id" : 7, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 6, "name" : "asdf", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709071141, "versionNumber" : 3, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 11, "name" : "asdf", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 6, "versionNumber" : 3, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516709071135, "automatedDefault" : false }, "original" : true }, { "id" : 8, "tcrCatalogTreeId" : 3, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 6, "name" : "asdf", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 4, "stateFlag" : 1, "lastModifiedOn" : 1516703067000, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 4, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516703023000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 6, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : false }, { "id" : 9, "tcrCatalogTreeId" : 4, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 3, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 5, "stateFlag" : 0, "lastModifiedOn" : 1516707441000, "versionNumber" : 2, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 6, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617860000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 3, "versionNumber" : 2, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : false }, { "id" : 10, "tcrCatalogTreeId" : 4, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 4, "name" : "Untitledfdsffsad", "externalId" : "", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 5, "stateFlag" : 0, "lastModifiedOn" : 1516707441000, "versionNumber" : 2, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 7, "name" : "Untitledfdsffsad", "externalId" : "", "description" : "", "lastModifiedOn" : 1516707422000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 4, "versionNumber" : 2, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : false }, { "id" : 11, "tcrCatalogTreeId" : 4, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 5, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 2, "projectId" : 1, "automatedDefault" : false }, "revision" : 5, "stateFlag" : 0, "lastModifiedOn" : 1516617862000, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 3, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617862000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 5, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516559400000, "automatedDefault" : false }, "original" : false }, { "id" : 12, "tcrCatalogTreeId" : 4, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 6, "name" : "asdf", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 5, "stateFlag" : 0, "lastModifiedOn" : 1516707441000, "versionNumber" : 2, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 5, "name" : "asdf", "description" : "", "lastModifiedOn" : 1516707241000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 6, "versionNumber" : 2, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : false } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Clone Testcase [/testcase/clone/on/{releaseid}/to/{targettreeid}{?sourceitemids}{?link}]
### Clone Testcase [POST]
Create copy of testcases based on the id of testcases.Mandatory fields: Source Item ID, Target Tree ID and Source Tree ID.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>add </td>
                <td>/testcase/{treeid} </td>
            </tr>
            </table>
    
+ Parameters
    + releaseid (required, Long) ... release if of testcases
    + targettreeid (required, Long) ... Tree ID of target testcase 

+ Parameters
    + sourceitemids (required, List) ... List of IDs of Tree testcase that are being cloned
    + link (optional, boolean) ... Enter true or false if this copied testcase is link, (Default is false)

+ Request (application/json application/xml)

        {"ids":[24,26,27]}

+ Response 200 (application/json application/xml)

        [ {   "id" : 28,   "tcrCatalogTreeId" : 6,   "revision" : 0,   "stateFlag" : 0,   "lastModifiedOn" : 1537182809388,   "versionNumber" : 1,   "testcase" : {     "customProperties" : { },     "customProcessedProperties" : { },     "id" : 20,     "name" : "Untitled",     "description" : "",     "priority" : "3",     "lastModifiedOn" : 1537166440000,     "creationDate" : 1537122600000,     "tcCreationDate" : "09/17/2018",     "comments" : "",     "isComplex" : false,     "estimatedTime" : 600,     "writerId" : 0,     "creatorId" : 1,     "lastUpdaterId" : 1,     "oldId" : 15,     "automated" : false,     "releaseId" : 1,     "customFieldProcessed" : false,     "customFieldValues" : [ ],     "testcaseSequence" : {       "seqNumber" : 19     },     "testcaseId" : 19,     "versionNumber" : 1,     "projectId" : 1,     "testcaseType" : "ORIGINAL",     "requirementIds" : [ ],     "requirementIdsNew" : [ ],     "automatedDefault" : false   },   "projectId" : 1,   "releaseId" : 1,   "isDerivedFromBDD" : false,   "orderId" : 6,   "maxVersionNumber" : 1,   "original" : true }, {   "id" : 29,   "tcrCatalogTreeId" : 6,   "revision" : 0,   "stateFlag" : 0,   "lastModifiedOn" : 1537182809460,   "versionNumber" : 1,   "testcase" : {     "customProperties" : { },     "customProcessedProperties" : { },     "id" : 21,     "name" : "Untitled",     "description" : "",     "lastModifiedOn" : 1536915112000,     "creationDate" : 1537122600000,     "tcCreationDate" : "09/17/2018",     "isComplex" : false,     "estimatedTime" : 600,     "writerId" : 0,     "creatorId" : 1,     "lastUpdaterId" : 1,     "oldId" : 17,     "automated" : false,     "releaseId" : 1,     "customFieldProcessed" : false,     "customFieldValues" : [ ],     "testcaseSequence" : {       "seqNumber" : 20     },     "testcaseId" : 20,     "versionNumber" : 1,     "projectId" : 1,     "testcaseType" : "ORIGINAL",     "requirementIds" : [ ],     "requirementIdsNew" : [ ],     "automatedDefault" : false   },   "projectId" : 1,   "releaseId" : 1,   "isDerivedFromBDD" : false,   "orderId" : 7,   "maxVersionNumber" : 1,   "original" : true }, {   "id" : 30,   "tcrCatalogTreeId" : 6,   "revision" : 0,   "stateFlag" : 0,   "lastModifiedOn" : 1537182809474,   "versionNumber" : 1,   "testcase" : {     "customProperties" : { },     "customProcessedProperties" : { },     "id" : 22,     "name" : "Untitled",     "description" : "",     "lastModifiedOn" : 1536917218000,     "creationDate" : 1537122600000,     "tcCreationDate" : "09/17/2018",     "isComplex" : false,     "estimatedTime" : 600,     "writerId" : 0,     "creatorId" : 1,     "lastUpdaterId" : 1,     "oldId" : 18,     "automated" : false,     "releaseId" : 1,     "customFieldProcessed" : false,     "customFieldValues" : [ ],     "testcaseSequence" : {       "seqNumber" : 21     },     "testcaseId" : 21,     "versionNumber" : 1,     "projectId" : 1,     "testcaseType" : "ORIGINAL",     "requirementIds" : [ ],     "requirementIdsNew" : [ ],     "automatedDefault" : false   },   "projectId" : 1,   "releaseId" : 1,   "isDerivedFromBDD" : false,   "orderId" : 8,   "maxVersionNumber" : 1,   "original" : true } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Create bulk Testcase [/testcase/bulk{?scheduleId}]
### Create bulk Testcase [POST]
Create bulk new testcase using this resource. Testcase will be created only if the release under which testcase gets crereated is valid. Mandatory fields: catalogTreeTestcase. Notification is not guaranteed
    

+ Parameters
    + scheduleId (optional, Long) ... Automation Job Schedule ID

+ Request (application/json application/xml)

        [{"tcrCatalogTreeId":1,"testcase":{"name":"Create a testcase with all fields from REST","externalId":"1","priority":"1","tag":"tag","lastModifiedOn":1466165626000,"creationDate":1466101800000,"comments":"comment","estimatedTime":6000,"creatorId":1,"automated":true,"scriptId":"id1","scriptName":"name1","scriptPath":"path1","requirementIds":[],"attachmentCount":0,"releaseId":1,"automatedDefault":true},"revision":0,"stateFlag":0,"lastModifiedOn":1466161767000,"original":true},{"tcrCatalogTreeId":1,"testcase":{"name":"Create second a testcase with all fields from REST","externalId":"1","priority":"1","tag":"tag","lastModifiedOn":1466165626000,"creationDate":1466101800000,"comments":"comment","estimatedTime":6000,"creatorId":1,"automated":true,"scriptId":"id1","scriptName":"name1","scriptPath":"path1","requirementIds":[],"attachmentCount":0,"releaseId":1,"automatedDefault":true},"revision":0,"stateFlag":0,"lastModifiedOn":1466161767000,"original":true},{"tcrCatalogTreeId":1,"testcase":{"name":"Create third testcase with all fields from REST","externalId":"1","priority":"1","tag":"tag","lastModifiedOn":1466165626000,"creationDate":1466101800000,"comments":"comment","estimatedTime":6000,"creatorId":1,"automated":true,"scriptId":"id1","scriptName":"name1","scriptPath":"path1","requirementIds":[],"attachmentCount":0,"releaseId":1,"automatedDefault":true},"revision":0,"stateFlag":0,"lastModifiedOn":1466161767000,"original":true}]

+ Response 200 (application/json application/xml)

        [ { "id": 35, "tcrCatalogTreeId": 1, "testcase": { "customProperties": {}, "id": 37, "name": "Create a testcase with all fields from REST", "externalId": "1", "priority": "1", "tag": "tag", "lastModifiedOn": 1494489151420, "creationDate": 1494441000000, "tcCreationDate": "05/11/2017", "comments": "comment", "estimatedTime": 6000, "creatorId": 1, "automated": true, "scriptId": "id1", "scriptName": "name1", "scriptPath": "path1", "requirementIds": [], "attachmentCount": 0, "releaseId": 1, "automatedDefault": true }, "revision": 0, "stateFlag": 0, "lastModifiedOn": 1494489151766, "original": true }, { "id": 36, "tcrCatalogTreeId": 1, "testcase": { "customProperties": {}, "id": 38, "name": "Create second a testcase with all fields from REST", "externalId": "1", "priority": "1", "tag": "tag", "lastModifiedOn": 1494489152600, "creationDate": 1494441000000, "tcCreationDate": "05/11/2017", "comments": "comment", "estimatedTime": 6000, "creatorId": 1, "automated": true, "scriptId": "id1", "scriptName": "name1", "scriptPath": "path1", "requirementIds": [], "attachmentCount": 0, "releaseId": 1, "automatedDefault": true }, "revision": 0, "stateFlag": 0, "lastModifiedOn": 1494489152954, "original": true }, { "id": 37, "tcrCatalogTreeId": 1, "testcase": { "customProperties": {}, "id": 39, "name": "Create second a testcase with all fields from REST", "externalId": "1", "priority": "1", "tag": "tag", "lastModifiedOn": 1494489154670, "creationDate": 1494441000000, "tcCreationDate": "05/11/2017", "comments": "comment", "estimatedTime": 6000, "creatorId": 1, "automated": true, "scriptId": "id1", "scriptName": "name1", "scriptPath": "path1", "requirementIds": [], "attachmentCount": 0, "releaseId": 1, "automatedDefault": true }, "revision": 0, "stateFlag": 0, "lastModifiedOn": 1494489155012, "original": true } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Create Testcase [/testcase/]
### Create Testcase [POST]
Create new testcase using this resource. Testcase will be created only if the release under which testcase gets crereated is valid. Mandatory fields: catalogTreeTestcase. 

Notes:-

tcrCatalogTreeId :- Id of the Folder where we want to create the TestCase
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>add </td>
                <td>/testcase/{treeid} </td>
            </tr>
            </table>
    


+ Request (application/json application/xml)

        {"tcrCatalogTreeId":5,"testcase":{"name":"name","automated":false,"requirementIds":[],"releaseId":1,"customProperties":{}},"getOriginal":true,"revision":0,"stateFlag":1,"lastModifiedOn":"1456464705000"}

+ Response 200 (application/json application/xml)

        { "id" : 27, "tcrCatalogTreeId" : 6, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1536917218161, "versionNumber" : 1, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 18, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1536917218141, "creationDate" : 1536863400000, "tcCreationDate" : "09/14/2018", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "attachmentCount" : 0, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseSequence" : { "seqNumber" : 18 }, "testcaseId" : 18, "versionNumber" : 1, "projectId" : 1, "testcaseType" : "ORIGINAL", "requirementIds" : [ ], "requirementIdsNew" : [ ], "automatedDefault" : false }, "projectId" : 1, "releaseId" : 1, "isDerivedFromBDD" : false, "orderId" : 5, "maxVersionNumber" : 1, "original" : true }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## create new version of testcase [/testcase/createnewversion/{id}]
### create new version of testcase [POST]
create new version of testcase
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>update </td>
                <td>/testcase/{treeid} </td>
            </tr>
            </table>
    
+ Parameters
    + id (required, Long) ... ID of testcase link id



+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Delete Testcase  [/testcase/{id}]
### Delete Testcase  [DELETE]
Delete testcase by TCR Catalog Tree TestCase ID passed through URL parameter. returns true if a test case is successfully deleted.  Mandatory fields: Id
    
+ Parameters
    + id (required, Long) ... ID of TCR Catalog Tree TestCase ID that needs to be updated



+ Response 200 (application/json application/xml)

        true
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Delete Multiple Testcase Tree Linkage [/testcase{?ids}{?tcrCatalogTreeId}]
### Delete Multiple Testcase Tree Linkage [DELETE]
Delete all Testcase and its Testcase Tree Linkage based on test case id submitted through URL.Mandatory Fields:ids. 
    

+ Parameters
    + ids (required, List) ... List of ID's Testcase and Testcase Tree Mapping that needs to be Deleted
    + tcrCatalogTreeId (optional, Long) ... node id for which requirements needs to be deleted

+ Request (application/json application/xml)

        {"ids":null,"selectedAll":null,"sourceNodeId":null,"serachView":null,"teststepStausId":null,"teststepUpdate":false}

+ Response 200 (application/json application/xml)

        true
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Requirement Summary by Testcase ID [/testcase/requirement/{testcaseid}]
### Get Requirement Summary by Testcase ID [GET]
Get Associated Requirement Summary by Testcase ID. Mandatory Fields: testcaseid
    
+ Parameters
    + testcaseid (required, Long) ... Testcase ID to get Associate Requirement



+ Response 200 (application/json application/xml)

        [ "1 - Untitled requirement", "2 - Untitled requirement", "3 - Untitled requirement" ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get all tags [/testcase/tags]
### Get all tags [GET]
Get all tags from system. Tags which are blank, null or empty will be ignored while fetching.
    



+ Response 200 (application/json application/xml)

        [ "TAG" ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get all Testcase Names by Testcase IDs [/testcase/name{?tcid}]
### Get all Testcase Names by Testcase IDs [GET]
Get all the Testcase Names by Testcase IDs passed through URL. Mandatory Fields: List of Testcase id should not be blank. 
    

+ Parameters
    + tcid (required, List) ... Testcase IDs for testcase name.


+ Response 200 (application/json application/xml)

        ["1 - Testcase1.2 1374489714798","2 - DummyRow"]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Count Of Testcases By Phase [/testcase/count{?tcrcatalogtreeid}{?releaseid}]
### Get Count Of Testcases By Phase [GET]
Get Count Of Testcases By Phase.
    

+ Parameters
    + tcrcatalogtreeid (required, Long) ... Tree ID
    + releaseid (required, Long) ... Release ID


+ Response 200 (application/json application/xml)

        5
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Count Of Testcases By Phase ids. [/testcase/count/ids{?treeids}]
### Get Count Of Testcases By Phase ids. [GET]
Get Count Of Testcases assigned under testcycle phases. Mandatory Fields: treeIds .
    

+ Parameters
    + treeids (optional, List) ... Tree IDs


+ Response 200 (application/json application/xml)

        [ { "treeId" : 2, "testcaseCount" : 7 } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Count Of Testcases By Phase ids. [/testcase/count/{releaseid}]
### Get Count Of Testcases By Phase ids. [GET]
Get Count Of Testcases By Release ids.
    
+ Parameters
    + releaseid (required, Long) ... Tree IDs



+ Response 200 (application/json application/xml)

        [ { "treeId" : 2, "testcaseCount" : 7 }, { "treeId" : 0, "testcaseCount" : 7 } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Cumulative Testcase by Release ID and Requirement ID. [/testcase/cumulative{?releaseid}{?requirementid}]
### Cumulative Testcase by Release ID and Requirement ID. [GET]
Get Cumulative information of testcases under the tree node. Mandatory fields:- releaseId and requirementId
    

+ Parameters
    + releaseid (required, Long) ... Release ID
    + requirementid (required, Long) ... Requirement ID


+ Response 200 (application/json application/xml)

        {"105":"cumulativeTC:4,allocatedTC:0","104":"cumulativeTC:4,allocatedTC:0","0":"cumulativeTC:8,allocatedTC:0"}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Cumulative Testcase by Release ID and Requirement ID. [/testcase/cumulative/data{?releaseid}{?requirementid}]
### Get Cumulative Testcase by Release ID and Requirement ID. [GET]
Get Cumulative information of all testcases under a test case tree for the submitted release id and requirement id. Mandatory Fields:- releaseId and requirementId
    

+ Parameters
    + releaseid (required, Long) ... Release ID
    + requirementid (required, Long) ... Requirement ID


+ Response 200 (application/json application/xml)

        { "treeMap" : { "0" : { "total" : "7", "allocated" : "0" }, "2" : { "total" : "7", "allocated" : "0" } }, "stateMap" : { "0" : "uncheck", "2" : "uncheck" } }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Testcase count per node [/testcase/count/discrete/{releaseid}]
### Testcase count per node [GET]
Testcase count per node
    
+ Parameters
    + releaseid (required, Long) ... release id



+ Response 200 (application/json application/xml)

        { "2" : 8 }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Traceable Path from Root [/testcase/path{?testcaseid}{?tctid}]
### Get Traceable Path from Root [GET]
TCT ID or Testcase ID can be passed. If both are passed then only tree testcase ID is considered
    

+ Parameters
    + testcaseid (required, Long) ... Testcase ID for which to find the path
    + tctid (required, Long) ... TCT ID for which to find the path


+ Response 200 (application/json application/xml)

        { "projectId" : 1, "releaseId" : 1, "hierarchy" : [ { "treeId" : 1, "treeName" : "jhkhfm" } ], "nodeIds" : [ 1 ], "nodePath" : "/1", "index" : 1, "entityId" : 1 }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Traceable Path from Root [/testcase/pathbyrelease{?testcaseid}{?releaseid}]
### Get Traceable Path from Root [GET]
TCT ID or Testcase ID can be passed. If both are passed then only tree testcase ID is considered
    

+ Parameters
    + testcaseid (required, Long) ... Testcase ID for which to find the path
    + releaseid (required, Long) ... Release ID for which to find the path


+ Response 200 (application/json application/xml)

        { "projectId" : 1, "releaseId" : 1, "hierarchy" : [ { "treeId" : 2, "treeName" : "testcase" } ], "nodeIds" : [ 2 ], "nodePath" : "/2", "index" : 1, "entityId" : 1 }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Testcase by Criteria [/testcase/planning/{treeId}{?offset}{?pagesize}{?order}{?isascorder}]
### Get Testcase by Criteria [GET]
Get All testcases which matches the criteria specified by fields "keyword" and "zqlquery". Mandatory fields: Release Id if Keyword is not empty, zqlquery
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>subscribe </td>
                <td>/planning/{treeid} </td>
            </tr>
            </table>
    
+ Parameters
    + treeId (required, Long) ... Filter by tree id

+ Parameters
    + offset (optional, Integer) ... Offset for search
    + pagesize (optional, Integer) ... Page size for search
    + order (optional, String) ... Order by for results.valid only for dbsearch. supported values- id
    + isascorder (optional, Boolean) ... Order by asc or desc, valid only for dbsearch


+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Testcase by ID [/testcase/{testCaseId}]
### Get Testcase by ID [GET]
Get a specific testcase by ID. Field "id" corresponds to testcase Mandatory field: testcaseId.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>subscribe </td>
                <td>/testcase/{treeid} </td>
            </tr>
                    <tr>
                <td>teststep </td>
                <td>subscribe </td>
                <td>/teststep/{testcaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + testCaseId (required, Long) ... ID of Testcase that needs to be fetched



+ Response 200 (application/json application/xml)

        { "id": 1, "tcrCatalogTreeId": 1, "revision": 0, "stateFlag": 0, "lastModifiedOn": 1536739187000, "versionNumber": 1, "testcase": { "customProperties": {}, "customProcessedProperties": {}, "id": 1, "name": "Untitled", "description": "", "lastModifiedOn": 1536742157000, "creationDate": 1536690600000, "tcCreationDate": "09/12/2018", "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 1, "oldId": 0, "automated": false, "customFieldProcessed": false, "customFieldValues": [], "testcaseSequence": { "seqNumber": 1 }, "testcaseId": 1, "versionNumber": 1, "projectId": 1, "testcaseType": "ORIGINAL", "requirementIds": [], "requirementIdsNew": [], "automatedDefault": false }, "projectId": 1, "releaseId": 1, "isDerivedFromBDD": false, "orderId": 1, "maxVersionNumber": 1, "original": true }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Testcases by Tree IDs [/testcase/nodes{?treeids}]
### Get Testcases by Tree IDs [GET]
Get all the testcases allocated under tree nodes. Mandatory fields: treeIdsListRequest if null then treeIdsList.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>subscribe </td>
                <td>/testcase/{treeid} </td>
            </tr>
            </table>
    

+ Parameters
    + treeids (required, List) ... Filter by tree id

+ Request (application/json application/xml)

        {"ids":null,"selectedAll":null,"sourceNodeId":null,"serachView":null,"teststepStausId":null,"teststepUpdate":false}

+ Response 200 (application/json application/xml)

        [ { "id" : 1, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 3, "name" : "Untitled", "externalId" : "12", "description" : "", "lastModifiedOn" : 1516709395000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709071000, "versionNumber" : 3, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 8, "name" : "Untitled", "externalId" : "12", "description" : "", "lastModifiedOn" : 1516709395000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 3, "versionNumber" : 3, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : true }, { "id" : 2, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 4, "name" : "Untitledfdsffsad", "externalId" : "12", "description" : "", "lastModifiedOn" : 1516709534000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709534000, "versionNumber" : 3, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 9, "name" : "Untitledfdsffsad", "externalId" : "12", "description" : "", "lastModifiedOn" : 1516709534000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 4, "versionNumber" : 3, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : true }, { "id" : 3, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 5, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 2, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709071000, "versionNumber" : 2, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 10, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 5, "versionNumber" : 2, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : true }, { "id" : 7, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 6, "name" : "asdf", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709071000, "versionNumber" : 3, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 11, "name" : "asdf", "description" : "", "lastModifiedOn" : 1516709070000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 6, "versionNumber" : 3, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : true }, { "id" : 13, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 7, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709778000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 1, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709778000, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 12, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709778000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 7, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : true }, { "id" : 14, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 8, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709778000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 1, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709778000, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 13, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709778000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 8, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : true }, { "id" : 15, "tcrCatalogTreeId" : 2, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 9, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709779000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 1, "projectId" : 1, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516709779000, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 14, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516709779000, "creationDate" : 1516645800000, "tcCreationDate" : "01/23/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 9, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, "original" : true } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Testcase details by ID [/testcase/detail/{id}]
### Get Testcase details by ID [GET]
Get a specific testcase details by ID. Field "id" corresponds to testcase Mandatory field: testcaseId.
    
+ Parameters
    + id (required, Long) ... ID of Testcase that needs to be fetched



+ Response 200 (application/json application/xml)

        { "customProperties": {}, "customProcessedProperties": {}, "id": 1, "name": "Untitled", "description": "", "lastModifiedOn": 1536742157000, "creationDate": 1536690600000, "tcCreationDate": "09/12/2018", "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 1, "oldId": 0, "automated": false, "customFieldProcessed": false, "customFieldValues": [], "testcaseSequence": { "seqNumber": 1 }, "testcaseId": 1, "versionNumber": 1, "projectId": 1, "testcaseType": "ORIGINAL", "requirementIds": [], "requirementIdsNew": [], "automatedDefault": false }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Testcase by ID [/testcase/altid{?altids}]
### Get Testcase by ID [GET]
Get a specific testcase by testcaseAltID. Field "id" corresponds to testcase Mandatory field: testcaseAltId.
    

+ Parameters
    + altids (required, List) ... AltID of Testcase that needs to be fetched


+ Response 200 (application/json application/xml)

        [ { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 3, "name" : "Untitled", "externalId" : "12", "description" : "", "lastModifiedOn" : 1516709395000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false }, { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 4, "name" : "Untitledfdsffsad", "externalId" : "12", "description" : "", "lastModifiedOn" : 1516709534000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 7, 8, 9, 10 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 3, "projectId" : 1, "automatedDefault" : false } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Testcase Summary by Requirement ID [/testcase/byrequirement{?requirementid}{?breadcrumb}{?releaseid}]
### Get Testcase Summary by Requirement ID [GET]
Get Associated Testcase Summary by Requirement ID.
    

+ Parameters
    + requirementid (optional, Long) ... Requirement ID to get Associate testcase
    + breadcrumb (optional, Boolean) ... Pass Breadcrumb True to get Additional Information regarding Project, Release and Tree Node
    + releaseid (optional, Long) ... Requirement ID to get Associate testcase


+ Response 200 (application/json application/xml)

        [{"id":1,"type":"Phase","name":"Phase1","description":"","revision":0,"categories":[{"parentId":1,"id":2,"type":"Module","name":"System1","description":"","revision":0,"categories":[{"parentId":2,"id":3,"type":"Module","name":"SS1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000},{"parentId":1,"id":4,"type":"Module","name":"System2","description":"","revision":0,"categories":[{"parentId":4,"id":5,"type":"Module","name":"SS2","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000},{"id":6,"type":"Phase","name":"NP1","description":"","revision":0,"categories":[{"parentId":6,"id":7,"type":"Module","name":"NS1","description":"","revision":0,"categories":[{"parentId":7,"id":8,"type":"Module","name":"NSS1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000},{"id":9,"type":"Phase","name":"Phase1","description":"","revision":0,"categories":[{"parentId":9,"id":10,"type":"Module","name":"Module1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000},{"id":11,"type":"Phase","name":"Phase11","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":76,"type":"Phase","name":"P1","description":"","revision":0,"categories":[{"parentId":76,"id":78,"type":"Module","name":"S2","description":"","revision":0,"categories":[{"parentId":78,"id":80,"type":"Module","name":"SS3","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"parentId":78,"id":79,"type":"Module","name":"SS2_MOD","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"parentId":76,"id":77,"type":"Module","name":"S1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000}],"assignedUsers":[2],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":102,"type":"Phase","name":"Phase12","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":104,"type":"Phase","name":"release1.1-phase11","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":3,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":105,"type":"Phase","name":"release1.1-phase12","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":3,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":354,"type":"import","name":"Jul:21:2013::17:56:37","description":"","revision":0,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1374345000000,"lastModifiedOn":1456425000000},{"id":375,"type":"import","name":"Jul:22:2013::00:04:20","description":"","revision":0,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1374345000000,"lastModifiedOn":1456425000000},{"id":376,"type":"import","name":"Jul:22:2013::10:51:03","description":"","revision":0,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1374431400000,"lastModifiedOn":1456425000000},{"id":397,"type":"import","name":"Jul:22:2013::16:11:53","description":"","revision":0,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1374431400000,"lastModifiedOn":1456425000000},{"id":398,"type":"Phase","name":"Android","description":"","revision":0,"categories":[{"parentId":398,"id":400,"type":"Module","name":"Ginger Bread","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"parentId":398,"id":401,"type":"Module","name":"Ice Cream Sandwitch","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"parentId":398,"id":402,"type":"Module","name":"Jelly Bean","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"id":399,"type":"Phase","name":"iPhone","description":"","revision":0,"categories":[{"parentId":399,"id":404,"type":"Module","name":"iPhone 4S","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"parentId":399,"id":405,"type":"Module","name":"iPhone 5","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"parentId":399,"id":403,"type":"Module","name":"iPhone 4","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"id":410,"type":"Phase","name":"Node with no TC","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":9,"linkedTCRCatalogTreeId":0,"createdOn":1385663400000,"lastModifiedOn":1456425000000},{"id":411,"type":"Phase","name":"a","description":"","revision":0,"categories":[{"parentId":411,"id":414,"type":"Module","name":"b","description":"","revision":0,"categories":[{"parentId":414,"id":417,"type":"Module","name":"g","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000},{"parentId":411,"id":412,"type":"Module","name":"b","description":"","revision":0,"categories":[{"parentId":412,"id":415,"type":"Module","name":"h","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000},{"parentId":411,"id":413,"type":"Module","name":"b","description":"","revision":0,"categories":[{"parentId":413,"id":416,"type":"Module","name":"c","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000},{"id":432,"type":"Phase","name":"divija","description":"changed","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1464936136000,"createdBy":1,"lastModifiedBy":2,"lastModifiedOn":1464936136000}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get all testcase version by testcase id  [/testcase/versions{?testcaseid}]
### Get all testcase version by testcase id  [GET]
Get all version's of testcase by testcase id. Field "testcase id " corresponds to testcase version Mandatory field: testcase id.
    

+ Parameters
    + testcaseid (required, Long) ... testcase id to fetch all the version of testcase


+ Response 200 (application/json application/xml)

        [ { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 1, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617860000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 3, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516559400000, "automatedDefault" : false }, { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 6, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617860000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 3, "versionNumber" : 2, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 8, "name" : "Untitled", "externalId" : "12", "description" : "", "lastModifiedOn" : 1516709395000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 3, "versionNumber" : 3, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Testcase by Criteria [/testcase{?offset}{?pagesize}{?releaseid}{?keyword}{?zqlquery}]
### Get Testcase by Criteria [GET]
Get All testcases which matches the criteria specified by fields "keyword" and "zqlquery". Mandatory fields: Release Id if Keyword is not empty, zqlquery
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>subscribe </td>
                <td>/testcase/{treeid} </td>
            </tr>
            </table>
    

+ Parameters
    + offset (optional, Integer) ... Offset for search
    + pagesize (optional, Integer) ... Page size for search
    + releaseid (required, Long) ... Filter by release ID
    + keyword (required, String) ... Find by keyword
    + zqlquery (required, String) ... ID of testcase that needs to be updated


+ Response 200 (application/json application/xml)

        [ { "firstResult" : 0, "resultSize" : 1, "results" : [ { "id" : 15, "tcrCatalogTreeId" : 4, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1536910807000, "versionNumber" : 1, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 11, "name" : "testApp24", "status" : "false", "priority" : "1", "tag" : "API", "lastModifiedOn" : 1536910807000, "creationDate" : 1536863400000, "tcCreationDate" : "09/14/2018", "comments" : "Created by Vortex", "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "automated" : true, "scriptId" : " ", "scriptName" : " ", "scriptPath" : " ", "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseSequence" : { "seqNumber" : 11 }, "testcaseId" : 11, "versionNumber" : 1, "projectId" : 1, "testcaseType" : "ORIGINAL", "requirementIds" : [ ], "projectName" : "Sample Project", "requirementIdsNew" : [ ], "automatedDefault" : true }, "projectId" : 1, "releaseId" : 1, "releaseName" : "Release 1.0", "isDerivedFromBDD" : false, "orderId" : 3, "maxVersionNumber" : 1, "original" : true } ], "type" : "testcase" } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Testcase by Tree ID [/testcase/tree/{treeid}{?offset}{?pagesize}{?order}{?isascorder}{?dbsearch}{?frozen}{?is_cfield}]
### Get Testcase by Tree ID [GET]
Get all the testcases under the submitted testcase tree node. Mandatory fields: Release Id if Keyword is not empty. 
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>subscribe </td>
                <td>/testcase/{treeid} </td>
            </tr>
            </table>
    
+ Parameters
    + treeid (required, Long) ... Filter by tree id

+ Parameters
    + offset (optional, Integer) ... Offset for search
    + pagesize (optional, Integer) ... Page size for search
    + order (optional, String) ... Order by for results.valid only for dbsearch. supported values- id
    + isascorder (optional, Boolean) ... Order by asc or desc, valid only for dbsearch
    + dbsearch (optional, Boolean) ... Do DB query rather than search
    + frozen (optional, Boolean) ... Do DB query rather than search
    + is_cfield (optional, Boolean) ... Do DB query rather than search


+ Response 200 (application/json application/xml)

        { "firstResult": 0, "resultSize": 4, "results": [ { "id": 3, "tcrCatalogTreeId": 1, "revision": 0, "stateFlag": 0, "lastModifiedOn": 1536739188000, "versionNumber": 1, "testcase": { "customProperties": {}, "customProcessedProperties": {}, "id": 3, "name": "Untitled", "description": "", "lastModifiedOn": 1536739188000, "creationDate": 1536690600000, "tcCreationDate": "09/12/2018", "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 1, "oldId": 0, "automated": false, "customFieldProcessed": false, "customFieldValues": [], "testcaseSequence": { "seqNumber": 3 }, "testcaseId": 3, "versionNumber": 1, "projectId": 1, "testcaseType": "ORIGINAL", "requirementIds": [], "projectName": "Sample Project", "requirementIdsNew": [], "automatedDefault": false }, "projectId": 1, "releaseId": 1, "releaseName": "Release 1.0", "isDerivedFromBDD": false, "orderId": 3, "maxVersionNumber": 1, "original": true }, { "id": 4, "tcrCatalogTreeId": 1, "revision": 0, "stateFlag": 0, "lastModifiedOn": 1536739189000, "versionNumber": 1, "testcase": { "customProperties": {}, "customProcessedProperties": {}, "id": 4, "name": "Untitled", "description": "", "lastModifiedOn": 1536741510000, "creationDate": 1536690600000, "tcCreationDate": "09/12/2018", "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 1, "oldId": 0, "automated": false, "customFieldProcessed": false, "customFieldValues": [], "testcaseSequence": { "seqNumber": 4 }, "testcaseId": 4, "versionNumber": 1, "projectId": 1, "testcaseType": "ORIGINAL", "requirementIds": [], "projectName": "Sample Project", "requirementIdsNew": [], "automatedDefault": false }, "projectId": 1, "releaseId": 1, "releaseName": "Release 1.0", "isDerivedFromBDD": false, "orderId": 4, "maxVersionNumber": 1, "original": true }, { "id": 1, "tcrCatalogTreeId": 1, "revision": 0, "stateFlag": 0, "lastModifiedOn": 1536739187000, "versionNumber": 1, "testcase": { "customProperties": {}, "customProcessedProperties": {}, "id": 1, "name": "Untitled", "description": "", "lastModifiedOn": 1536742157000, "creationDate": 1536690600000, "tcCreationDate": "09/12/2018", "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 1, "oldId": 0, "automated": false, "customFieldProcessed": false, "customFieldValues": [], "testcaseSequence": { "seqNumber": 1 }, "testcaseId": 1, "versionNumber": 1, "projectId": 1, "testcaseType": "ORIGINAL", "requirementIds": [], "projectName": "Sample Project", "requirementIdsNew": [], "automatedDefault": false }, "projectId": 1, "releaseId": 1, "releaseName": "Release 1.0", "isDerivedFromBDD": false, "orderId": 1, "maxVersionNumber": 1, "original": true }, { "id": 2, "tcrCatalogTreeId": 1, "revision": 0, "stateFlag": 0, "lastModifiedOn": 1536739187000, "versionNumber": 1, "testcase": { "customProperties": {}, "customProcessedProperties": {}, "id": 2, "name": "Untitled", "description": "", "lastModifiedOn": 1536739187000, "creationDate": 1536690600000, "tcCreationDate": "09/12/2018", "isComplex": false, "estimatedTime": 600, "writerId": 0, "creatorId": 1, "lastUpdaterId": 1, "oldId": 0, "automated": false, "customFieldProcessed": false, "customFieldValues": [], "testcaseSequence": { "seqNumber": 2 }, "testcaseId": 2, "versionNumber": 1, "projectId": 1, "testcaseType": "ORIGINAL", "requirementIds": [], "projectName": "Sample Project", "requirementIdsNew": [], "automatedDefault": false }, "projectId": 1, "releaseId": 1, "releaseName": "Release 1.0", "isDerivedFromBDD": false, "orderId": 2, "maxVersionNumber": 1, "original": true } ], "type": "testcase" }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Map Testcase to Requirement [/testcase/mapby/altid]
### Map Testcase to Requirement [POST]
Map Requirements to Testcase,Alt id of testcase should be unique
    


+ Request (application/json application/xml)

        $jsonRequestSingleLine

+ Response 200 (application/json application/xml)

        [ { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 1, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617860000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 3, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516559400000, "automatedDefault" : false }, { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 6, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617860000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 3, "versionNumber" : 2, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false }, { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 8, "name" : "Untitled", "externalId" : "12", "description" : "", "lastModifiedOn" : 1516709395000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "comments" : "xngfxjgnfcvvbcx", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 3, "versionNumber" : 3, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516645800000, "automatedDefault" : false } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Move Testcases [/testcase/move/from/{sourceentryid}/to/{targetentryid}{?sourceitemids}]
### Move Testcases [POST]
Use this resource to move testcases from source tree to target tree. Mandatory fields- Source Item ID, Source Tree ID and Target Tree ID.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>add </td>
                <td>/testcase/{treeid} </td>
            </tr>
                    <tr>
                <td>testcase </td>
                <td>delete </td>
                <td>/testcase/{treeid} </td>
            </tr>
            </table>
    
+ Parameters
    + sourceentryid (required, Long) ... Tree ID of source testcase
    + targetentryid (required, Long) ... Tree ID of target testcase

+ Parameters
    + sourceitemids (required, List) ... List of IDs of Tree testcase that are being moved

+ Request (application/json application/xml)

        {"ids":["1101","1102","1159"],"selectedAll":1}

+ Response 200 (application/json application/xml)

        3
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Share Testcase [/testcase/share/on/{releaseid}/to/{targettreeid}{?sourceitemids}{?link}]
### Share Testcase [POST]
Share testcases based on the id of testcases.Mandatory fields: Source Item ID, Target Tree ID and Source Tree ID.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>add </td>
                <td>/testcase/{treeid} </td>
            </tr>
            </table>
    
+ Parameters
    + releaseid (required, Long) ... release if of testcases
    + targettreeid (required, Long) ... Tree ID of target testcase 

+ Parameters
    + sourceitemids (optional, Map) ... List of IDs of Tree testcase that are being cloned
    + link (optional, boolean) ... Enter true or false if this copied testcase is link, (Default is false)

+ Request (application/json application/xml)

        {"ids":{"33":1,"34":1},"selectedAll":1,"tcrCatalogTreeId":97}

+ Response 200 (application/json application/xml)

        [
          {
            "id": 1179,
            "tcrCatalogTreeId": 97,
            "revision": 0,
            "stateFlag": 0,
            "lastModifiedOn": 1597416881181,
            "versionNumber": 9,
            "testcase": {
              "customProperties": {},
              "customProcessedProperties": {},
              "id": 34,
              "name": "TestCase6 v9",
              "description": "",
              "lastModifiedOn": 1595228287000,
              "creationDate": 1594924200000,
              "createDatetime": 1595228280000,
              "tcCreationDate": "07/17/2020",
              "comments": "",
              "isComplex": false,
              "estimatedTime": 600,
              "writerId": 0,
              "creatorId": 1,
              "lastUpdaterId": 1,
              "oldId": 0,
              "automated": false,
              "customFieldProcessed": false,
              "customFieldValues": [],
              "testcaseSequence": {
                "seqNumber": 6
              },
              "testcaseId": 6,
              "versionNumber": 9,
              "projectId": 1,
              "testcaseType": "ORIGINAL",
              "requirementIds": [],
              "requirementIdsNew": [],
              "automatedDefault": false,
              "testcaseShared": false
            },
            "projectId": 1,
            "releaseId": 1,
            "isDerivedFromBDD": false,
            "orderId": 1060,
            "maxVersionNumber": 20,
            "projectIdParam": 1,
            "original": false
          },
          {
            "id": 1180,
            "tcrCatalogTreeId": 97,
            "revision": 0,
            "stateFlag": 0,
            "lastModifiedOn": 1597416881181,
            "versionNumber": 2,
            "testcase": {
              "customProperties": {},
              "customProcessedProperties": {},
              "id": 33,
              "name": "vern3",
              "description": "",
              "lastModifiedOn": 1595228250000,
              "creationDate": 1595183400000,
              "createDatetime": 1595228236000,
              "tcCreationDate": "07/20/2020",
              "comments": "",
              "isComplex": false,
              "estimatedTime": 600,
              "writerId": 0,
              "creatorId": 1,
              "lastUpdaterId": 1,
              "oldId": 0,
              "automated": false,
              "customFieldProcessed": false,
              "customFieldValues": [],
              "testcaseSequence": {
                "seqNumber": 12
              },
              "testcaseId": 12,
              "versionNumber": 2,
              "projectId": 1,
              "testcaseType": "ORIGINAL",
              "requirementIds": [],
              "requirementIdsNew": [],
              "automatedDefault": false,
              "testcaseShared": false
            },
            "projectId": 1,
            "releaseId": 1,
            "isDerivedFromBDD": false,
            "orderId": 1061,
            "maxVersionNumber": 1,
            "projectIdParam": 1,
            "original": false
          }
        ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Update Flag status by Tree Testcase ID  [/testcase/flag/{flag}{?testcaseids}{?tcrCatalogTreeId}]
### Update Flag status by Tree Testcase ID  [PUT]
To update Flag status (true/false) of tedtcases by Tree Testcase ID. Mandatory fields: List of testcase id are mandatry and should not be blank or null.
    
+ Parameters
    + flag (required, Boolean) ... Flag- Enter True or False

+ Parameters
    + testcaseids (required, List) ... Testcase ID- Required for bulk flag update
    + tcrCatalogTreeId (optional, Long) ... node id for which testcase needs to be deleted

+ Request (application/json application/xml)

        {"ids":null,"selectedAll":null,"sourceNodeId":null,"serachView":null,"teststepStausId":null,"teststepUpdate":false}

+ Response 200 (application/json application/xml)

        [ { "id" : 34, "tcrCatalogTreeId" : 5, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 6, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1510572888000, "creationDate" : 1510511400000, "tcCreationDate" : "11/13/2017", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ 1 ], "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 1, "shared" : true, "projectId" : 1, "automatedDefault" : false }, "revision" : 6, "stateFlag" : 0, "lastModifiedOn" : 1511179847888, "versionNumber" : 1, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 4, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1510572888000, "creationDate" : 1510511400000, "tcCreationDate" : "11/13/2017", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 1, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 6, "versionNumber" : 1, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1510511400000, "automatedDefault" : false }, "original" : false } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Update Testcase [/testcase/{id}{?forceCreateNewVersion}]
### Update Testcase [PUT]
Update details of testcase with "ID" submitted through URL. Details of testcase will be part of request payload.Mandatory fields:Testcase tree id.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>testcase </td>
                <td>update </td>
                <td>/testcase/{treeid} </td>
            </tr>
            </table>
    
+ Parameters
    + id (required, Long) ... ID of testcase that needs to be updated

+ Parameters
    + forceCreateNewVersion (optional, Boolean) ... Force to create new version

+ Request (application/json application/xml)

        {"id":1378,"testcase":{"customProperties":{},"customProcessedProperties":{},"id":1298,"name":"Updated Testcase Latest","priority":2,"estimatedTime":600,"testcaseId":1162,"projectId":1,"comments":"","tags":["Tag1","tag2"],"tagOptions":[],"tag":"Tag1 tag2"},"projectId":1,"releaseId":1}

+ Response 200 (application/json application/xml)

        {"id":1378,"tcrCatalogTreeId":148,"revision":0,"stateFlag":0,"lastModifiedOn":1597928764027,"versionNumber":1,"createDatetime":1597927746000,"createdById":1,"modifiedById":1,"testcase":{"customProperties":{},"customProcessedProperties":{},"id":1298,"name":"Updated Testcase Latest","priority":"2","tag":"Tag1 tag2","lastModifiedOn":1597928764027,"creationDate":1597861800000,"createDatetime":1597927746000,"tcCreationDate":"08/20/2020","comments":"","estimatedTime":600,"creatorId":1,"lastUpdaterId":1,"automated":false,"customFieldProcessed":true,"customFieldValues":[],"testcaseSequence":{"seqNumber":1162},"testcaseId":1162,"versionNumber":1,"projectId":1,"testcaseType":"ORIGINAL","requirementIds":[],"requirementIdsNew":[],"automatedDefault":false,"testcaseShared":false},"projectId":1,"releaseId":1,"isDerivedFromBDD":false,"orderId":1265,"maxVersionNumber":1,"projectIdParam":1,"original":true}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Update Testcase With Version  [/testcase/{tctId}/replacewithversion/{testcaseVersionId}{?releaseid}]
### Update Testcase With Version  [PUT]
Update Testcase With Version. Mandatory fields: Testcase Version Id and Test case Id.
    
+ Parameters
    + testcaseVersionId (required, Long) ... Testcase Version ID
    + tctId (required, Long) ... Testcase ID

+ Parameters
    + releaseid (required, Long) ... Release ID


+ Response 200 (application/json application/xml)

        { "id" : 49, "tcrCatalogTreeId" : 9, "testcase" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 43, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516794405545, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "writerId" : 0, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "requirementIds" : [ ], "releaseId" : 2, "customFieldProcessed" : false, "customFieldValues" : [ ], "versionNumber" : 4, "shared" : true, "projectId" : 1, "sourceTestcaseId" : 6, "sourceTestcaseVersionNumber" : 3, "automatedDefault" : false }, "revision" : 0, "stateFlag" : 0, "lastModifiedOn" : 1516794405545, "versionNumber" : 4, "testcaseVersion" : { "customProperties" : { }, "customProcessedProperties" : { }, "id" : 56, "name" : "Untitled", "description" : "", "lastModifiedOn" : 1516617860000, "creationDate" : 1516559400000, "tcCreationDate" : "01/22/2018", "isComplex" : false, "estimatedTime" : 600, "creatorId" : 1, "lastUpdaterId" : 1, "oldId" : 0, "automated" : false, "releaseId" : 2, "customFieldProcessed" : false, "customFieldValues" : [ ], "testcaseId" : 43, "versionNumber" : 4, "projectId" : 1, "versionCreatedBy" : 1, "versionCreationDate" : 1516794405513, "sourceTestcaseId" : 6, "sourceTestcaseVersionNumber" : 3, "automatedDefault" : false }, "original" : true }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error


# Group TestcaseTree
The following is a section of resources related to the TCRCatalog

## Copy Testcase tree node to another target node [/testcasetree/copy/{nodeid}/{sourcereleaseid}/to/{targetparentid}/{targetreleaseid}]
### Copy Testcase tree node to another target node [POST]
Copy a tree node to another target node along with all testcases and children nodes. 
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>tcr_catalog_tree </td>
                <td>add </td>
                <td>/tree/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + nodeid (required, Long) ... source id of tree node
    + sourcereleaseid (required, Long) ... source releaseid of tree node
    + targetparentid (required, Long) ... target parentid of tree node
    + targetreleaseid (required, Long) ... target releaseid of tree node



+ Response 200 (application/json application/xml)

        { "parentId" : 4, "id" : 6, "type" : "Module", "name" : "jhkhfm", "description" : "", "revision" : 0, "categories" : [ ], "assignedUsers" : [ 1, 2, 3 ], "releaseId" : 2, "linkedTCRCatalogTreeId" : 0, "createdOn" : 1510572881000, "lastModifiedOn" : 1511181060482 }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Create Tree node [/testcasetree{?parentid}{?assignedusers}]
### Create Tree node [POST]
Create tree child node with given details and assign the set of users to node. If aissigned users list is Empty,Users of Project will be assigned to created node. 

Note:-

releaseId = Id of the Release

parentid = Pass 0 to create under Release Level. Pass id of the Parent when creating the Sub folder

type = "Phase" for parent node. "Module" for Sub folder
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>tcr_catalog_tree </td>
                <td>add </td>
                <td>/tree/{releaseid} </td>
            </tr>
            </table>
    

+ Parameters
    + parentid (required, Long) ... parentid
    + assignedusers (optional, List) ... List of assigned user ids

+ Request (application/json application/xml)

        {"name":"N2","description":"","type":"Phase","releaseId":1}

+ Response 200 (application/json application/xml)

        { "id" : 203, "type" : "Phase", "name" : "N2", "description" : "", "revision" : 0, "categories" : [ ], "assignedUsers" : [ 1, 2 ], "releaseId" : 1, "linkedTCRCatalogTreeId" : 0, "createdOn" : 1597923605931, "createdBy" : 1, "lastModifiedBy" : 1, "lastModifiedOn" : 1597923605951, "testcaseCount" : 0, "cumulativeTestcaseCount" : 0 }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Delete Testcase Tree [/testcasetree/{id}]
### Delete Testcase Tree [DELETE]
Delete testcase tree based on user selection. Deleting node from tree will delete all children nodes under selected tree node.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>tcr_catalog_tree </td>
                <td>unsubscribe </td>
                <td>/tree/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + id (required, Long) ... Id of catalog tree to delete



+ Response 200 (application/json application/xml)

        true
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get Execution Tree by releaseid [/testcasetree/phases/execution/{releaseid}]
### Get Execution Tree by releaseid [GET]
Display information of all execution Tree nodes based on release.
    
+ Parameters
    + releaseid (required, Long) ... Release Id 



+ Response 200 (application/json application/xml)

        [ { "cycleName" : "cycle", "tcrCatalogTree" : { "id" : 3, "type" : "Phase", "name" : "testcase", "categories" : [ ], "assignedUsers" : [ ], "releaseId" : 1 } }, { "cycleName" : "cycle1", "tcrCatalogTree" : { "id" : 4, "type" : "Phase", "name" : "testcase", "categories" : [ ], "assignedUsers" : [ ], "releaseId" : 1 } } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get TCR hierarchy [/testcasetree/hierarchy/{treeid}]
### Get TCR hierarchy [GET]
Retrive all test case repository hierarchy based on tree. 
    
+ Parameters
    + treeid (required, Long) ... Tree Id 



+ Response 200 (application/json application/xml)

        [ 2 ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get Testcase Tree [/testcasetree/{tctId}]
### Get Testcase Tree [GET]
Display information of a tescase tree with help of id of catalog tree.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>tcr_catalog_tree </td>
                <td>subscribe </td>
                <td>/tree/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + tctId (required, Long) ... ID of catalog tree


+ Request (application/json application/xml)

        {"id":76,"type":"Phase","name":"P1","description":"","revision":0,"categories":[{"parentId":76,"id":78,"type":"Module","name":"S2","description":"","revision":0,"categories":[{"parentId":78,"id":80,"type":"Module","name":"SS3","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Feb 26, 2016 12:00:00 AM"},{"parentId":78,"id":79,"type":"Module","name":"SS2_MOD","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Feb 26, 2016 12:00:00 AM"}],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Feb 26, 2016 12:00:00 AM"},{"parentId":76,"id":77,"type":"Module","name":"S1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Feb 26, 2016 12:00:00 AM"}],"assignedUsers":[2],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Feb 26, 2016 12:00:00 AM"}

+ Response 200 (application/json application/xml)

        {"id":76,"type":"Phase","name":"P1","description":"","revision":0,"categories":[{"parentId":76,"id":78,"type":"Module","name":"S2","description":"","revision":0,"categories":[{"parentId":78,"id":80,"type":"Module","name":"SS3","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Feb 26, 2016 12:00:00 AM"},{"parentId":78,"id":79,"type":"Module","name":"SS2_MOD","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Feb 26, 2016 12:00:00 AM"}],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Feb 26, 2016 12:00:00 AM"},{"parentId":76,"id":77,"type":"Module","name":"S1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Feb 26, 2016 12:00:00 AM"}],"assignedUsers":[2],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Feb 26, 2016 12:00:00 AM"}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get Testcase Tree by releaseid [/testcasetree/phases/{releaseid}]
### Get Testcase Tree by releaseid [GET]
Display all the testcase tree nodes based on release. 
    
+ Parameters
    + releaseid (required, Long) ... Release Id 


+ Request (application/json application/xml)

        [{"id":1,"type":"Phase","name":"Phase1","categories":[],"assignedUsers":[],"releaseId":1},{"id":6,"type":"Phase","name":"NP1","categories":[],"assignedUsers":[],"releaseId":1},{"id":9,"type":"Phase","name":"Phase1","categories":[],"assignedUsers":[],"releaseId":1},{"id":11,"type":"Phase","name":"Phase11","categories":[],"assignedUsers":[],"releaseId":1},{"id":102,"type":"Phase","name":"Phase12","categories":[],"assignedUsers":[],"releaseId":1}]

+ Response 200 (application/json application/xml)

        [{"id":47,"jobName":"TestcaseExecutionDailySnapshotTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465283106000,"targetDate":1465196706000,"status":1,"result":"Error: exception is: Job TestcaseExecutionDailySnapshotTransformationJob has error(s): 1\njava.lang.Exception: Job TestcaseExecutionDailySnapshotTransformationJob has error(s): 1\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.im"},{"id":46,"jobName":"TestcaseExecutionTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465283105000,"targetDate":1465196705000,"status":1,"result":"Error: exception is: Job TestcaseExecutionTransformationJob has error(s): 1\njava.lang.Exception: Job TestcaseExecutionTransformationJob has error(s): 1\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.impl.QuartzETLJ"},{"id":45,"jobName":"TestcaseTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465283101000,"targetDate":1465196701000,"status":1,"result":"Error: exception is: Job TestcaseTransformationJob has error(s): 3\njava.lang.Exception: Job TestcaseTransformationJob has error(s): 3\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner."},{"id":44,"jobName":"DefectTrendJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465283100000,"targetDate":1465196700000,"status":0,"result":"ok"},{"id":43,"jobName":"TestcaseExecutionDailySnapshotTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465208201000,"targetDate":1465121801000,"status":1,"result":"Error: exception is: Job TestcaseExecutionDailySnapshotTransformationJob has error(s): 1\njava.lang.Exception: Job TestcaseExecutionDailySnapshotTransformationJob has error(s): 1\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.im"},{"id":42,"jobName":"TestcaseExecutionTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465208200000,"targetDate":1465121800000,"status":1,"result":"Error: exception is: Job TestcaseExecutionTransformationJob has error(s): 1\njava.lang.Exception: Job TestcaseExecutionTransformationJob has error(s): 1\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.impl.QuartzETLJ"},{"id":41,"jobName":"TestcaseTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465208195000,"targetDate":1465121795000,"status":1,"result":"Error: exception is: Job TestcaseTransformationJob has error(s): 3\njava.lang.Exception: Job TestcaseTransformationJob has error(s): 3\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner."},{"id":40,"jobName":"DefectTrendJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465208194000,"targetDate":1465121795000,"status":0,"result":"ok"},{"id":39,"jobName":"TestcaseExecutionDailySnapshotTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465151362000,"targetDate":1465064962000,"status":-1,"result":"Error: exception is: Job TestcaseExecutionTransformationJob has error(s): 1\njava.lang.Exception: Job TestcaseExecutionTransformationJob has error(s): 1\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.impl.QuartzETLJ"},{"id":38,"jobName":"TestcaseExecutionTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465151359000,"targetDate":1465064960000,"status":1,"result":"Error: exception is: Job TestcaseExecutionTransformationJob has error(s): 1\njava.lang.Exception: Job TestcaseExecutionTransformationJob has error(s): 1\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.impl.QuartzETLJ"},{"id":36,"jobName":"DefectTrendJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465151353000,"targetDate":1465064953000,"status":0,"result":"ok"},{"id":37,"jobName":"TestcaseTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465151353000,"targetDate":1465064953000,"status":1,"result":"Error: exception is: Job TestcaseTransformationJob has error(s): 3\njava.lang.Exception: Job TestcaseTransformationJob has error(s): 3\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner."},{"id":35,"jobName":"TestcaseExecutionDailySnapshotTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465061495000,"targetDate":1464975095000,"status":1,"result":"Error: exception is: Job TestcaseExecutionDailySnapshotTransformationJob has error(s): 1\njava.lang.Exception: Job TestcaseExecutionDailySnapshotTransformationJob has error(s): 1\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.im"},{"id":34,"jobName":"TestcaseExecutionTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465061494000,"targetDate":1464975094000,"status":1,"result":"Error: exception is: Job TestcaseExecutionTransformationJob has error(s): 1\njava.lang.Exception: Job TestcaseExecutionTransformationJob has error(s): 1\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.impl.QuartzETLJ"},{"id":33,"jobName":"TestcaseTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465061484000,"targetDate":1464975084000,"status":1,"result":"Error: exception is: Job TestcaseTransformationJob has error(s): 3\njava.lang.Exception: Job TestcaseTransformationJob has error(s): 3\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner."},{"id":32,"jobName":"DefectTrendJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1465061482000,"targetDate":1464975083000,"status":0,"result":"ok"},{"id":31,"jobName":"TestcaseExecutionDailySnapshotTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1464937782000,"targetDate":1464851382000,"status":1,"result":"Error: exception is: Job TestcaseExecutionDailySnapshotTransformationJob has error(s): 1\njava.lang.Exception: Job TestcaseExecutionDailySnapshotTransformationJob has error(s): 1\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.im"},{"id":30,"jobName":"TestcaseExecutionTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1464937780000,"targetDate":1464851380000,"status":1,"result":"Error: exception is: Job TestcaseExecutionTransformationJob has error(s): 1\njava.lang.Exception: Job TestcaseExecutionTransformationJob has error(s): 1\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.impl.QuartzETLJ"},{"id":29,"jobName":"TestcaseTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1464937775000,"targetDate":1464851375000,"status":1,"result":"Error: exception is: Job TestcaseTransformationJob has error(s): 3\njava.lang.Exception: Job TestcaseTransformationJob has error(s): 3\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner.executeEtlJob(QuartzETLJobRunner.java:390)\r\n\tat com.thed.quartz.impl.QuartzETLJobRunner."},{"id":28,"jobName":"DefectTrendJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1464937774000,"targetDate":1464851374000,"status":0,"result":"ok"},{"id":26,"jobName":"TestcaseExecutionTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1464929911000,"targetDate":1464843511000,"status":1,"result":"Error: exception is: Incorrect result size: expected 1, actual 0\norg.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\r\n\tat org.springframework.dao.support.DataAccessUtils.requiredSingleResult(DataAccessUtils.java:71)\r\n"},{"id":27,"jobName":"TestcaseExecutionDailySnapshotTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1464929911000,"targetDate":1464843512000,"status":1,"result":"Error: exception is: Incorrect result size: expected 1, actual 0\norg.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\r\n\tat org.springframework.dao.support.DataAccessUtils.requiredSingleResult(DataAccessUtils.java:71)\r\n"},{"id":24,"jobName":"DefectTrendJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1464929910000,"targetDate":1464843510000,"status":0,"result":"ok"},{"id":25,"jobName":"TestcaseTransformationJob","nodeName":"QInstanceId","jobGroup":"etlGroup","executionDate":1464929910000,"targetDate":1464843510000,"status":1,"result":"Error: exception is: Incorrect result size: expected 1, actual 0\norg.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\r\n\tat org.springframework.dao.support.DataAccessUtils.requiredSingleResult(DataAccessUtils.java:71)\r\n"}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get Project Repository Testcase Tree by projectid [/testcasetree/projectrepository/{projectid}]
### Get Project Repository Testcase Tree by projectid [GET]
Display all the testcase tree nodes of project repository. 
    
+ Parameters
    + projectid (required, Long) ... Project Id 



+ Response 200 (application/json application/xml)

        [ { "id": 3, "type": "Phase", "name": "node2", "description": "", "revision": 0, "categories": [], "assignedUsers": [ 1, 2, 3 ], "releaseId": 3, "linkedTCRCatalogTreeId": 0, "createdOn": 1536745735000, "lastModifiedOn": 1536745747000, "testcaseCount": 4 } ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get tree by criteria [/testcasetree{?type}{?releaseid}{?revisionid}{?parentid}{?isShared}]
### Get tree by criteria [GET]
This method will search for nodes using various search criteria such as node type, node's revision and node's parent node.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>tcr_catalog_tree </td>
                <td>subscribe </td>
                <td>/tree/{releaseid} </td>
            </tr>
            </table>
    

+ Parameters
    + type (optional, String) ... filter by type Values: Phase,Module,import
    + releaseid (optional, Long) ... filter by Release Id 
    + revisionid (optional, Integer) ... filter by revision Id 
    + parentid (optional, Long) ... filter by parent Id
    + isShared (optional, boolean) ... filter by isShared

+ Request (application/json application/xml)

        [{"id":1,"type":"Phase","name":"Phase1","description":"","revision":0,"categories":[{"parentId":1,"id":2,"type":"Module","name":"System1","description":"","revision":0,"categories":[{"parentId":2,"id":3,"type":"Module","name":"SS1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000},{"parentId":1,"id":4,"type":"Module","name":"System2","description":"","revision":0,"categories":[{"parentId":4,"id":5,"type":"Module","name":"SS2","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000},{"id":6,"type":"Phase","name":"NP1","description":"","revision":0,"categories":[{"parentId":6,"id":7,"type":"Module","name":"NS1","description":"","revision":0,"categories":[{"parentId":7,"id":8,"type":"Module","name":"NSS1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000},{"id":9,"type":"Phase","name":"Phase1","description":"","revision":0,"categories":[{"parentId":9,"id":10,"type":"Module","name":"Module1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000},{"id":11,"type":"Phase","name":"Phase11","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":76,"type":"Phase","name":"P1","description":"","revision":0,"categories":[{"parentId":76,"id":78,"type":"Module","name":"S2","description":"","revision":0,"categories":[{"parentId":78,"id":79,"type":"Module","name":"SS2_MOD","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"parentId":78,"id":80,"type":"Module","name":"SS3","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"parentId":76,"id":77,"type":"Module","name":"S1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000}],"assignedUsers":[2],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":102,"type":"Phase","name":"Phase12","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":104,"type":"Phase","name":"release1.1-phase11","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":3,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":105,"type":"Phase","name":"release1.1-phase12","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":3,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":354,"type":"import","name":"Jul:21:2013::17:56:37","description":"","revision":0,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1374345000000,"lastModifiedOn":1456425000000},{"id":375,"type":"import","name":"Jul:22:2013::00:04:20","description":"","revision":0,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1374345000000,"lastModifiedOn":1456425000000},{"id":376,"type":"import","name":"Jul:22:2013::10:51:03","description":"","revision":0,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1374431400000,"lastModifiedOn":1456425000000},{"id":397,"type":"import","name":"Jul:22:2013::16:11:53","description":"","revision":0,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1374431400000,"lastModifiedOn":1456425000000},{"id":398,"type":"Phase","name":"Android","description":"","revision":0,"categories":[{"parentId":398,"id":402,"type":"Module","name":"Jelly Bean","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"parentId":398,"id":400,"type":"Module","name":"Ginger Bread","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"parentId":398,"id":401,"type":"Module","name":"Ice Cream Sandwitch","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"id":399,"type":"Phase","name":"iPhone","description":"","revision":0,"categories":[{"parentId":399,"id":404,"type":"Module","name":"iPhone 4S","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"parentId":399,"id":403,"type":"Module","name":"iPhone 4","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"parentId":399,"id":405,"type":"Module","name":"iPhone 5","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"id":410,"type":"Phase","name":"Node with no TC","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":9,"linkedTCRCatalogTreeId":0,"createdOn":1385663400000,"lastModifiedOn":1456425000000},{"id":411,"type":"Phase","name":"a","description":"","revision":0,"categories":[{"parentId":411,"id":413,"type":"Module","name":"b","description":"","revision":0,"categories":[{"parentId":413,"id":416,"type":"Module","name":"c","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000},{"parentId":411,"id":414,"type":"Module","name":"b","description":"","revision":0,"categories":[{"parentId":414,"id":417,"type":"Module","name":"g","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000},{"parentId":411,"id":412,"type":"Module","name":"b","description":"","revision":0,"categories":[{"parentId":412,"id":415,"type":"Module","name":"h","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000},{"id":432,"type":"Phase","name":"divija","description":"changed","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1464936136000,"createdBy":1,"lastModifiedBy":2,"lastModifiedOn":1464936136000}]

+ Response 200 (application/json application/xml)

        [{"id":1,"type":"Phase","name":"Phase1","description":"","revision":0,"categories":[{"parentId":1,"id":2,"type":"Module","name":"System1","description":"","revision":0,"categories":[{"parentId":2,"id":3,"type":"Module","name":"SS1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000},{"parentId":1,"id":4,"type":"Module","name":"System2","description":"","revision":0,"categories":[{"parentId":4,"id":5,"type":"Module","name":"SS2","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000},{"id":6,"type":"Phase","name":"NP1","description":"","revision":0,"categories":[{"parentId":6,"id":7,"type":"Module","name":"NS1","description":"","revision":0,"categories":[{"parentId":7,"id":8,"type":"Module","name":"NSS1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000},{"id":9,"type":"Phase","name":"Phase1","description":"","revision":0,"categories":[{"parentId":9,"id":10,"type":"Module","name":"Module1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373826600000,"lastModifiedOn":1456425000000},{"id":11,"type":"Phase","name":"Phase11","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":76,"type":"Phase","name":"P1","description":"","revision":0,"categories":[{"parentId":76,"id":78,"type":"Module","name":"S2","description":"","revision":0,"categories":[{"parentId":78,"id":79,"type":"Module","name":"SS2_MOD","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"parentId":78,"id":80,"type":"Module","name":"SS3","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"parentId":76,"id":77,"type":"Module","name":"S1","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000}],"assignedUsers":[2],"releaseId":4,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":102,"type":"Phase","name":"Phase12","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":104,"type":"Phase","name":"release1.1-phase11","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":3,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":105,"type":"Phase","name":"release1.1-phase12","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":3,"linkedTCRCatalogTreeId":0,"createdOn":1373913000000,"lastModifiedOn":1456425000000},{"id":354,"type":"import","name":"Jul:21:2013::17:56:37","description":"","revision":0,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1374345000000,"lastModifiedOn":1456425000000},{"id":375,"type":"import","name":"Jul:22:2013::00:04:20","description":"","revision":0,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1374345000000,"lastModifiedOn":1456425000000},{"id":376,"type":"import","name":"Jul:22:2013::10:51:03","description":"","revision":0,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1374431400000,"lastModifiedOn":1456425000000},{"id":397,"type":"import","name":"Jul:22:2013::16:11:53","description":"","revision":0,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":0,"createdOn":1374431400000,"lastModifiedOn":1456425000000},{"id":398,"type":"Phase","name":"Android","description":"","revision":0,"categories":[{"parentId":398,"id":402,"type":"Module","name":"Jelly Bean","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"parentId":398,"id":400,"type":"Module","name":"Ginger Bread","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"parentId":398,"id":401,"type":"Module","name":"Ice Cream Sandwitch","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"id":399,"type":"Phase","name":"iPhone","description":"","revision":0,"categories":[{"parentId":399,"id":404,"type":"Module","name":"iPhone 4S","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"parentId":399,"id":403,"type":"Module","name":"iPhone 4","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"parentId":399,"id":405,"type":"Module","name":"iPhone 5","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1382553000000,"lastModifiedOn":1456425000000},{"id":410,"type":"Phase","name":"Node with no TC","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":9,"linkedTCRCatalogTreeId":0,"createdOn":1385663400000,"lastModifiedOn":1456425000000},{"id":411,"type":"Phase","name":"a","description":"","revision":0,"categories":[{"parentId":411,"id":413,"type":"Module","name":"b","description":"","revision":0,"categories":[{"parentId":413,"id":416,"type":"Module","name":"c","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000},{"parentId":411,"id":414,"type":"Module","name":"b","description":"","revision":0,"categories":[{"parentId":414,"id":417,"type":"Module","name":"g","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000},{"parentId":411,"id":412,"type":"Module","name":"b","description":"","revision":0,"categories":[{"parentId":412,"id":415,"type":"Module","name":"h","description":"","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000}],"assignedUsers":[1,2,3],"releaseId":10,"linkedTCRCatalogTreeId":0,"createdOn":1416853800000,"lastModifiedOn":1456425000000},{"id":432,"type":"Phase","name":"divija","description":"changed","revision":0,"categories":[],"assignedUsers":[1,2,3],"releaseId":8,"linkedTCRCatalogTreeId":0,"createdOn":1464936136000,"createdBy":1,"lastModifiedBy":2,"lastModifiedOn":1464936136000}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Move Testcase tree  [/testcasetree/move/{nodeid}/to/{targetid}]
### Move Testcase tree  [POST]
Move tree to another target node along with all testcases and children nodes.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>tcr_catalog_tree </td>
                <td>move </td>
                <td>/tree/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + nodeid (required, Long) ... source id of tree node
    + targetid (required, Long) ... target parentid of tree node



+ Response 200 (application/json application/xml)

        {
          "parentId": 168,
          "id": 170,
          "type": "Module",
          "name": "subSF1",
          "description": "",
          "revision": 0,
          "categories": [],
          "assignedUsers": [
            2,
            51
          ],
          "releaseId": 98,
          "linkedTCRCatalogTreeId": 0,
          "createdOn": 1597414294000,
          "createdBy": 1,
          "lastModifiedBy": 1,
          "lastModifiedOn": 1597414599949,
          "testcaseCount": 0
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Move Testcase tree to other Release [/testcasetree/move/{nodeid}/{sourcereleaseid}/to/{targetid}/{targetreleaseid}]
### Move Testcase tree to other Release [POST]
Move tree to another target node along with all testcases and children nodes At release Level.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>tcr_catalog_tree </td>
                <td>move </td>
                <td>/tree/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + nodeid (required, Long) ... source id of tree node
    + sourcereleaseid (required, Long) ... source releaseid of tree node
    + targetid (required, Long) ... target parentid of tree node
    + targetreleaseid (required, Long) ... target releaseid of tree node



+ Response 200 (application/json application/xml)

        {
          "parentId": 168,
          "id": 170,
          "type": "Module",
          "name": "subSF1",
          "description": "",
          "revision": 0,
          "categories": [],
          "assignedUsers": [
            2,
            51
          ],
          "releaseId": 98,
          "linkedTCRCatalogTreeId": 0,
          "createdOn": 1597414294000,
          "createdBy": 1,
          "lastModifiedBy": 1,
          "lastModifiedOn": 1597414599949,
          "testcaseCount": 0
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Share Testcase tree node to another target node [/testcasetree/share/{nodeid}/{sourcereleaseid}/to/{targetparentid}/{targetreleaseid}]
### Share Testcase tree node to another target node [POST]
Copy a tree node to another target node along with all testcases and children nodes. 
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>tcr_catalog_tree </td>
                <td>add </td>
                <td>/tree/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + nodeid (required, Long) ... source id of tree node
    + sourcereleaseid (required, Long) ... source releaseid of tree node
    + targetparentid (required, Long) ... target parentid of tree node
    + targetreleaseid (required, Long) ... target releaseid of tree node



+ Response 200 (application/json application/xml)

        { "id" : 7, "type" : "Phase", "name" : "test", "description" : "", "revision" : 0, "categories" : [ ], "assignedUsers" : [ 1, 2, 3 ], "releaseId" : 2, "linkedTCRCatalogTreeId" : 0, "createdOn" : 1516790532000, "lastModifiedOn" : 1516790590901 }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Update tree node values [/testcasetree/assignuser/{id}{?name}{?description}{?assignedusers}]
### Update tree node values [PUT]
Update a node with with name, description and assign it to set of users
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>tcr_catalog_tree </td>
                <td>update </td>
                <td>/tree/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + id (required, Long) ... Tree id to be updated

+ Parameters
    + name (optional, String) ... Name to be updated
    + description (optional, String) ... Description to be updated
    + assignedusers (optional, List) ... Assigned users to be updated

+ Request (application/json application/xml)

        {"id":101,"type":"Phase","name":"phy","description":"somedescription","revision":7,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":11,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Jun 3, 2016 4:36:35 PM"}

+ Response 200 (application/json application/xml)

        {"id":101,"type":"Phase","name":"phy","description":"somedescription","revision":7,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":11,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Jun 3, 2016 4:36:35 PM"}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Update tree node values [/testcasetree/{treeId}]
### Update tree node values [PUT]
Update a node based on the information provided by user. Only name and description of a tree will be updated. 
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>tcr_catalog_tree </td>
                <td>update </td>
                <td>/tree/{releaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + treeId (required, Long) ... Tree id to be updated


+ Request (application/json application/xml)

        {"id":101,"type":"Phase","name":"phy","description":"somedescription","revision":7,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":11,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Jun 3, 2016 4:36:35 PM"}

+ Response 200 (application/json application/xml)

        {"id":101,"type":"Phase","name":"phy","description":"somedescription","revision":7,"categories":[],"assignedUsers":[],"releaseId":1,"linkedTCRCatalogTreeId":11,"createdOn":"Jul 16, 2013 12:00:00 AM","lastModifiedOn":"Jun 3, 2016 4:36:35 PM"}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group TestcaseUsageHistory
The following API is related to test case usage history.

## Get Testcase usage history details [/tcuh/testcase/{id}{?isascorder}{?order}{?offset}{?pagesize}]
### Get Testcase usage history details [GET]
Return the list of usage history for test case.
    
+ Parameters
    + id (required, Long) ... TODO: please provide a description

+ Parameters
    + isascorder (optional, boolean) ... sort order
    + order (optional, String) ... Order by for results
    + offset (optional, Integer) ... Offset for starting results
    + pagesize (optional, Integer) ... Number of results per page, 0 will return all


+ Response 200 (application/json application/xml)

        { "firstResult": 0, "resultSize": 1, "pageNumber": 10, "results": [ { "id": 1, "projectName": "Sample Project", "releaseName": "Release 1.0", "cycleName": "cycle1", "phaseName": "node1", "versonNumber": 1, "executionStatus": "2", "tcrtype": "Phase", "defects": [], "username": "test.manager", "executionDate": 1536742920000 } ], "type": "testcaseusagehistory" }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error


# Group Teststep
The following is a section of resources related to the Teststeps of a testcase

## Create teststep [/testcase/{testcaseVersionId}/teststep/detail/{tctId}]
### Create teststep [POST]
Create/Add new teststep by testcase ID

Notes:-

testcaseVersionId = testcase versionId

tcId = testcase versionId

tctId = testcase link id

maxId = max number of steps

orderId = order of the step 
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>teststep </td>
                <td>update </td>
                <td>/teststep/{testcaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + testcaseVersionId (required, Long) ... testcase version id 
    + tctId (required, Long) ... tct Id


+ Request (application/json application/xml)

        {
        "tcId": 1,
        "maxId": 1,
        "step": {
        "step": "s1",
        "data": "",
        "result": "",
        "orderId": 1
        },
        "tctId": 1
        }

+ Response 200 (application/json application/xml)

        {
          "id" : 1,
          "tcId" : 1,
          "maxId" : 1,
          "step" : {
            "customProperties" : { },
            "customProcessedProperties" : { },
            "id" : 1,
            "localId" : 1,
            "orderId" : 1,
            "step" : "s1",
            "data" : "",
            "result" : "",
            "customFieldProcessed" : true,
            "customFieldValues" : [ ]
          },
          "maxVersionNumber" : 1,
          "testcaseVersionId" : 1,
          "releaseId" : 1,
          "projectId" : 1,
          "tctId" : 1
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Delete teststep [/testcase/{testcaseVersionId}/teststep/{tctId}]
### Delete teststep [DELETE]
Delete existing teststep by testcase ID
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>teststep </td>
                <td>update </td>
                <td>/teststep/{testcaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + testcaseVersionId (required, Long) ... testcase version id 
    + tctId (required, Long) ... tct Id


+ Request (application/json application/xml)

        {
          "id": 1,
          "tcId": 1,
          "maxId": 4,
          "steps": [
            {
              "localId": 3
            }
          ],
          "tctId": 1
        }

+ Response 200 (application/json application/xml)

        {
          "id" : 1,
          "tcId" : 1,
          "maxId" : 4,
          "steps" : [ {
            "customProperties" : { },
            "customProcessedProperties" : { },
            "id" : 4,
            "localId" : 4,
            "orderId" : 1,
            "step" : "s3",
            "data" : "d3",
            "result" : "r3",
            "customFieldProcessed" : true,
            "customFieldValues" : [ ]
          }, {
            "customProperties" : { },
            "customProcessedProperties" : { },
            "id" : 1,
            "localId" : 1,
            "orderId" : 2,
            "step" : "s1",
            "data" : "d1",
            "result" : "r1",
            "customFieldProcessed" : true,
            "customFieldValues" : [ ]
          }, {
            "customProperties" : { },
            "customProcessedProperties" : { },
            "id" : 2,
            "localId" : 2,
            "orderId" : 3,
            "step" : "s2",
            "data" : "d2",
            "result" : "r2",
            "customFieldProcessed" : true,
            "customFieldValues" : [ ]
          } ],
          "maxVersionNumber" : 1,
          "testcaseVersionId" : 1,
          "releaseId" : 1,
          "projectId" : 1,
          "tctId" : 1
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Get teststep [/testcase/{testcaseVersionId}/teststep{?isfetchstepversion}{?versionId}]
### Get teststep [GET]
Get teststep by testcase ID
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>teststep </td>
                <td>subscribe </td>
                <td>/teststep/{testcaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + testcaseVersionId (required, Long) ... testcase version id 

+ Parameters
    + isfetchstepversion (optional, Boolean) ... TODO: please provide a description
    + versionId (optional, Long) ... TODO: please provide a description


+ Response 200 (application/json application/xml)

        { "id" : 3, "tcId" : 15, "maxId" : 1, "steps" : [ { "id" : 4, "localId" : 1, "orderId" : 1, "step" : "annu singh", "data" : "", "result" : "" } ], "lastModificationDate" : 1537166439521, "lastModifiedBy" : 1, "testcaseVersionId" : 15, "releaseId" : 1, "projectId" : 1, "tctId" : 24 }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error

## Update teststep [/testcase/{testcaseVersionId}/teststep/detail/{tctid}]
### Update teststep [PUT]
Update existing teststep by testcase ID

Notes:-

testcaseVersionId = testcase versionId

tcId = testcase versionId

tctId = testcase link id

maxId = max number of steps

orderId = order of the step 
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>teststep </td>
                <td>update </td>
                <td>/teststep/{testcaseid} </td>
            </tr>
            </table>
    
+ Parameters
    + testcaseVersionId (required, Long) ... testcase version id 
    + tctid (required, Long) ... tct Id


+ Request (application/json application/xml)

        {
          "id": 1,
          "tcId": 1,
          "maxId": 1,
          "step": {
            "customProperties": {},
            "customProcessedProperties": {},
            "id": 1,
            "localId": 1,
            "orderId": 1,
            "step": "s1",
            "data": "ad",
            "result": "",
            "customFieldProcessed": true,
            "customFieldValues": []
          },
          "tctId": 1
        }

+ Response 200 (application/json application/xml)

        {
          "id" : 1,
          "tcId" : 1,
          "maxId" : 1,
          "step" : {
            "customProperties" : { },
            "customProcessedProperties" : { },
            "id" : 1,
            "localId" : 1,
            "orderId" : 1,
            "step" : "s1",
            "data" : "ad",
            "result" : "",
            "customFieldProcessed" : true,
            "customFieldValues" : [ ]
          },
          "maxVersionNumber" : 1,
          "testcaseVersionId" : 1,
          "releaseId" : 1,
          "projectId" : 1,
          "tctId" : 1
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group UIView
The following is a section of resources related to the Assignment tree/ Frozen TCRCatalog

## Get audit logs Grid view [/ui/auditLogs{?offset}{?pagesize}{?order}{?isascorder}]
### Get audit logs Grid view [POST]
Get all details for audit logs grid in one call
    
    Notes:-
    
    The date can be passed in "YYYY-MM-DD"
    
    example "2020-08-13"
    
    entity Value can be
    
    1. testcase
    
    2. testStep
    
    3. requirement
    
    4. release5. user
    
    6. cycle
    
    7. tCRCatalogTree
    
    8. requirementTree
    
    9. importJob10. fieldMap
    
    11. group
    
    12. attachment
    
    13. customField
    
    14. auditLogs
    
    15. cache
    
    16. reindex
    
    17. systemConfig
    
    18. trendData
    
    19. authentication
    
    20. mixPanel
    
    21. DTS
    
    22. Status
    
    23. Step status
    
    24. Test case config
    
    25. Test step config
    
    26. Bulk status config

+ Parameters
    + offset (optional, Integer) ... Offset for search
    + pagesize (optional, Integer) ... Page size for search
    + order (optional, String) ... order by column
    + isascorder (optional, Boolean) ... order by ASC or DESC

+ Request (application/json application/xml)

        {
          "entity": "testcase",
          "operation": "Test case creation",
          "userName": "test.manager",
          "fromDate": "2020-08-01",
          "toDate": "2020-08-17"
        }

+ Response 200 (application/json application/xml)

        {
            "firstResult": 0,
            "resultSize": 16,
            "pageNumber": 100,
            "results": [
                {
                    "id": 869,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>1113</strong>; version: <strong>1246</strong>) has been created from the project <strong>Sample Project</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597688918000,
                    "entity": "testcase"
                },
                {
                    "id": 868,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>1112</strong>; version: <strong>1245</strong>) has been created from the project <strong>Sample Project</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597688918000,
                    "entity": "testcase"
                },
                {
                    "id": 867,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>1111</strong>; version: <strong>1244</strong>) has been created from the project <strong>Sample Project</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597688918000,
                    "entity": "testcase"
                },
                {
                    "id": 866,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>1110</strong>; version: <strong>1243</strong>) has been created from the project <strong>Sample Project</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597688918000,
                    "entity": "testcase"
                },
                {
                    "id": 864,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>1109</strong>; version: <strong>1242</strong>) has been created from the project <strong>test1</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597688588000,
                    "entity": "testcase"
                },
                {
                    "id": 863,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>1108</strong>; version: <strong>1241</strong>) has been created from the project <strong>test1</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597688588000,
                    "entity": "testcase"
                },
                {
                    "id": 862,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>1107</strong>; version: <strong>1240</strong>) has been created from the project <strong>test1</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597688588000,
                    "entity": "testcase"
                },
                {
                    "id": 861,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>1106</strong>; version: <strong>1239</strong>) has been created from the project <strong>test1</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597688588000,
                    "entity": "testcase"
                },
                {
                    "id": 860,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>1105</strong>; version: <strong>1238</strong>) has been created from the project <strong>test1</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597688588000,
                    "entity": "testcase"
                },
                {
                    "id": 859,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>1104</strong>; version: <strong>1237</strong>) has been created from the project <strong>test1</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597688588000,
                    "entity": "testcase"
                },
                {
                    "id": 858,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>1103</strong>; version: <strong>1236</strong>) has been created from the project <strong>test1</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597688588000,
                    "entity": "testcase"
                },
                {
                    "id": 853,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>1100</strong>; version: <strong>1233</strong>) has been created from the project <strong>Sample Project</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597688108000,
                    "entity": "testcase"
                },
                {
                    "id": 852,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>1099</strong>; version: <strong>1232</strong>) has been created from the project <strong>Sample Project</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597688108000,
                    "entity": "testcase"
                },
                {
                    "id": 824,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>995</strong>; version: <strong>1127</strong>) has been created from the project <strong>test1</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597679618000,
                    "entity": "testcase"
                },
                {
                    "id": 823,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>994</strong>; version: <strong>1126</strong>) has been created from the project <strong>test1</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597679618000,
                    "entity": "testcase"
                },
                {
                    "id": 822,
                    "data": "Test case <strong>Untitled</strong> (ID: <strong>993</strong>; version: <strong>1125</strong>) has been created from the project <strong>test1</strong> (release: <strong>Release 1.0</strong>).",
                    "operation": "Test case creation",
                    "userName": "test.manager",
                    "createdOn": 1597679618000,
                    "entity": "testcase"
                }
            ],
            "type": "auditLogs"
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        unknown internal error


# Group User
The following API is to is to display information of various operations on user.

## Create User in the System [/user/]
### Create User in the System [POST]
Creating new User into system based on user information provided.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>user </td>
                <td>add </td>
                <td>/user/ </td>
            </tr>
            </table>
    


+ Request (application/json application/xml)

        {
          "firstName": "test",
          "lastName": "user",
          "email": "test.user@smartbear.com",
          "username": "test.user",
          "accountEnabled": true,
          "credentialsExpired": false,
          "isCustomizeUsername": null
          }

+ Response 200 (application/json application/xml)

        {
          "id": 48,
          "username": "test.user",
          "firstName": "test",
          "lastName": "user",
          "email": "test.user@smartbear.com",
          "accountEnabled": true,
          "accountExpired": false,
          "credentialsExpired": false,
          "roles": [],
          "userType": 0,
          "chargeableFlag": true,
          "onlyLoggedInUser": false,
          "groupSet": [],
          "projectTeams": [],
          "countAttempts": 0,
          "isInternal": true,
          "fullName": "test user"
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Current Logged-In Users [/user/current]
### Get Current Logged-In Users [GET]
To get user information of all users who are currenctly logged in to system
    



+ Response 200 (application/json application/xml)

        {"id":1,"title":"Manager","username":"test.manager","firstName":"Test","lastName":"Manager","address1":"","address2":"","city":"Sunnyvale","state":"CA","country":"US","picture":"","postalCode":"","location":"Sunnyvale","type":"1","email":"test.manager@yourcompany.com","workPhoneNumber":"+1-408-555-1212","mobilePhoneNumber":"","homePhoneNumber":"","website":"http://www.thedinc.com","accountEnabled":true,"accountExpired":false,"credentialsExpired":false,"loginName":"test.manager","roles":[{"id":1,"name":"manager","description":"Manager (Default role, cannot be modified)","hasManagerApp":7}],"userType":0,"chargeableFlag":true,"lastSuccessfulLogin":"Jun 7, 2016 5:29:06 PM","groups":[{"id":1,"name":"group1","editable":true,"disabled":false,"canCreate":false,"canAssign":true,"canChangeState":false,"createdOn":"Jul 15, 2013 12:00:00 AM"}]}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get Defect Users present in System. [/user/defect]
### Get Defect Users present in System. [GET]
Get information of all active users with user type as defect users.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>user </td>
                <td>subscribe </td>
                <td>/user/ </td>
            </tr>
            </table>
    



+ Response 200 (application/json application/xml)

        [
          {
            "id": 4,
            "title": "Developer",
            "username": "dev.one",
            "firstName": "Dev",
            "lastName": "One",
            "location": "Bangalore",
            "type": "1",
            "email": "dev.one@yourcompany.com",
            "workPhoneNumber": "+",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "loginName": "dev.one",
            "roles": [
              {
                "id": 4,
                "name": "defectuser",
                "description": "Defect User (Default role, cannot be modified)",
                "hasManagerApp": false,
                "deletable": false,
                "editable": false,
                "createdOn": 1436812200000,
                "roleTemplate": {
                  "id": 5,
                  "templateName": "Defect Apps",
                  "templateType": 5,
                  "templateApps": "{\"apps\": [{\"id\":5,\"name\":\"Defect Tracking\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              }
            ],
            "userType": 1,
            "chargeableFlag": false,
            "lastPasswordChange": 1557230757000,
            "onlyLoggedInUser": false,
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "Dev One"
          }
        ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get All Users Present in the System. [/user/filter{?includeDashboardUser}]
### Get All Users Present in the System. [GET]
Get information of all the users present in the system.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>user </td>
                <td>subscribe </td>
                <td>/user/ </td>
            </tr>
            </table>
    

+ Parameters
    + includeDashboardUser (required, boolean) ... true/false is  required


+ Response 200 (application/json application/xml)

        [
          {
            "id": 1,
            "title": "Manager",
            "username": "test.manager",
            "firstName": "Test",
            "lastName": "Manager",
            "city": "Sunnyvale",
            "state": "CA",
            "country": "US",
            "location": "Sunnyvale",
            "type": "1",
            "email": "test.manager@yourcompany.com",
            "workPhoneNumber": "+1-408-555-1212",
            "website": "http://www.thedinc.com",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "loginName": "test.manager",
            "roles": [
              {
                "id": 1,
                "name": "manager",
                "description": "Manager (Default role, cannot be modified)",
                "hasManagerApp": true,
                "deletable": false,
                "editable": false,
                "createdOn": 1436812200000,
                "roleTemplate": {
                  "id": 1,
                  "templateName": "Administration Apps",
                  "templateType": 1,
                  "templateApps": "{\"apps\": [{\"id\":1,\"name\":\"System Setup\"},{\"id\":2,\"name\":\"User Setup\"},{\"id\":3,\"name\":\"Project Setup\"},{\"id\":6,\"name\":\"Defect Admin\"},{\"id\":32,\"name\":\"Group Setup\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              },
              {
                "id": 102,
                "name": "manager-Global Repository Apps",
                "description": "custom role created during upgrade",
                "hasManagerApp": true,
                "deletable": false,
                "editable": false,
                "roleTemplate": {
                  "id": 3,
                  "templateName": "Global Repository Apps",
                  "templateType": 3,
                  "templateApps": "{\"apps\": [{\"id\":30,\"name\":\"Global Test Repository\"},{\"id\":31,\"name\":\"Global Repository Config\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              }
            ],
            "userType": 0,
            "chargeableFlag": true,
            "lastPasswordChange": 1557230757000,
            "lastSuccessfulLogin": 1557238555943,
            "onlyLoggedInUser": true,
            "lastSuccessfulLoginString": "05/07/2019 19:45:55",
            "groupSet": [
              {
                "id": 1,
                "name": "QA",
                "editable": true,
                "disabled": false,
                "canCreate": true,
                "canAssign": true,
                "canChangeState": true,
                "createdOn": 1436812200000,
                "userGroups": [],
                "childGroupsIds": [],
                "isInternal": true,
                "role": {
                  "id": 0,
                  "hasManagerApp": false,
                  "deletable": true,
                  "editable": true,
                  "isProjectAppRole": false
                },
                "userCount": 0
              }
            ],
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "Test Manager"
          },
          {
            "id": 2,
            "title": "Lead",
            "username": "test.lead",
            "firstName": "Test",
            "lastName": "Lead",
            "city": "Sunnyvale",
            "state": "CA",
            "country": "US",
            "location": "Sunnyvale",
            "type": "1",
            "email": "test.lead@yourcompany.com",
            "workPhoneNumber": "+1-408-555-1212",
            "website": "http://www.thedinc.com",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "loginName": "test.lead",
            "roles": [],
            "userType": 0,
            "chargeableFlag": true,
            "lastPasswordChange": 1557230757000,
            "onlyLoggedInUser": false,
            "groupSet": [
              {
                "id": 1,
                "name": "QA",
                "editable": true,
                "disabled": false,
                "canCreate": true,
                "canAssign": true,
                "canChangeState": true,
                "createdOn": 1436812200000,
                "userGroups": [],
                "childGroupsIds": [],
                "isInternal": true,
                "role": {
                  "id": 0,
                  "hasManagerApp": false,
                  "deletable": true,
                  "editable": true,
                  "isProjectAppRole": false
                },
                "userCount": 0
              }
            ],
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "Test Lead"
          },
          {
            "id": 3,
            "title": "Tester",
            "username": "tester.one",
            "firstName": "Tester",
            "lastName": "One",
            "city": "Bangalore",
            "country": "India",
            "location": "Bangalore",
            "type": "1",
            "email": "tester.one@yourcompany.com",
            "workPhoneNumber": "+91-80-5551212",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "loginName": "tester.one",
            "roles": [],
            "userType": 0,
            "chargeableFlag": true,
            "lastPasswordChange": 1557230757000,
            "onlyLoggedInUser": false,
            "groupSet": [
              {
                "id": 1,
                "name": "QA",
                "editable": true,
                "disabled": false,
                "canCreate": true,
                "canAssign": true,
                "canChangeState": true,
                "createdOn": 1436812200000,
                "userGroups": [],
                "childGroupsIds": [],
                "isInternal": true,
                "role": {
                  "id": 0,
                  "hasManagerApp": false,
                  "deletable": true,
                  "editable": true,
                  "isProjectAppRole": false
                },
                "userCount": 0
              }
            ],
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "Tester One"
          },
          {
            "id": 5,
            "username": "uu.uu",
            "firstName": "uu",
            "lastName": "uu",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "roles": [
              {
                "id": 103,
                "name": "admin",
                "hasManagerApp": false,
                "deletable": true,
                "editable": true,
                "createdOn": 1557231118621,
                "roleTemplate": {
                  "id": 1,
                  "templateName": "Administration Apps",
                  "templateType": 1,
                  "templateApps": "{\"apps\": [{\"id\":1,\"name\":\"System Setup\"},{\"id\":2,\"name\":\"User Setup\"},{\"id\":3,\"name\":\"Project Setup\"},{\"id\":6,\"name\":\"Defect Admin\"},{\"id\":32,\"name\":\"Group Setup\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              },
              {
                "id": 104,
                "name": "global",
                "hasManagerApp": false,
                "deletable": true,
                "editable": true,
                "createdOn": 1557231142286,
                "roleTemplate": {
                  "id": 3,
                  "templateName": "Global Repository Apps",
                  "templateType": 3,
                  "templateApps": "{\"apps\": [{\"id\":30,\"name\":\"Global Test Repository\"},{\"id\":31,\"name\":\"Global Repository Config\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              }
            ],
            "userType": 0,
            "chargeableFlag": true,
            "lastSuccessfulLogin": 1557231403605,
            "onlyLoggedInUser": true,
            "lastSuccessfulLoginString": "05/07/2019 17:46:43",
            "groupSet": [
              {
                "id": 3,
                "name": "gr1",
                "editable": true,
                "disabled": false,
                "canCreate": false,
                "canAssign": false,
                "canChangeState": false,
                "createdOn": 1557231288724,
                "userGroups": [],
                "childGroupsIds": [],
                "isInternal": true,
                "createdBy": 1,
                "role": {
                  "id": 0,
                  "hasManagerApp": false,
                  "deletable": true,
                  "editable": true,
                  "isProjectAppRole": false
                },
                "userCount": 0
              }
            ],
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "uu uu"
          },
          {
            "id": 6,
            "username": "tt.tt",
            "firstName": "tt",
            "lastName": "tt",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "roles": [],
            "userType": 0,
            "chargeableFlag": true,
            "lastPasswordChange": 1557236571361,
            "lastSuccessfulLogin": 1557236576627,
            "onlyLoggedInUser": true,
            "lastSuccessfulLoginString": "05/07/2019 19:12:56",
            "groupSet": [
              {
                "id": 4,
                "name": "gr4",
                "editable": true,
                "disabled": false,
                "canCreate": false,
                "canAssign": false,
                "canChangeState": false,
                "createdOn": 1557236463105,
                "userGroups": [],
                "childGroupsIds": [],
                "isInternal": true,
                "createdBy": 1,
                "role": {
                  "id": 0,
                  "hasManagerApp": false,
                  "deletable": true,
                  "editable": true,
                  "isProjectAppRole": false
                },
                "userCount": 0
              }
            ],
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "tt tt"
          }
        ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Getting all the Logged-In in User count [/user/loggedin/count{?skipdefectuser}]
### Getting all the Logged-In in User count [GET]
Get number of users logged in to system. Do not consider any User if he is of type DefectUser and Param skipDefectUser is set to true.
    

+ Parameters
    + skipdefectuser (required, boolean) ... skipdefectuser is  required


+ Response 200 (application/json application/xml)

        1
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get User by ID [/user/{id}{?isLite}]
### Get User by ID [GET]
Display all the information of user with respect to the user searched.
    
+ Parameters
    + id (required, Long) ... ID to get user

+ Parameters
    + isLite (required, Boolean) ... isLite value


+ Response 200 (application/json application/xml)

        {
          "id": 1,
          "title": "Manager",
          "username": "test.manager",
          "firstName": "Test",
          "lastName": "Manager",
          "city": "Sunnyvale",
          "state": "CA",
          "country": "US",
          "location": "Sunnyvale",
          "type": "1",
          "email": "test.manager@yourcompany.com",
          "workPhoneNumber": "+1-408-555-1212",
          "website": "http://www.thedinc.com",
          "accountEnabled": true,
          "accountExpired": false,
          "credentialsExpired": false,
          "loginName": "test.manager",
          "roles": [
            {
              "id": 1,
              "name": "manager",
              "description": "Manager (Default role, cannot be modified)",
              "hasManagerApp": true,
              "deletable": false,
              "editable": false,
              "createdOn": 1436812200000,
              "roleTemplate": {
                "id": 1,
                "templateName": "Administration Apps",
                "templateType": 1,
                "templateApps": "{\"apps\": [{\"id\":1,\"name\":\"System Setup\"},{\"id\":2,\"name\":\"User Setup\"},{\"id\":3,\"name\":\"Project Setup\"},{\"id\":6,\"name\":\"Defect Admin\"},{\"id\":32,\"name\":\"Group Setup\"}]}",
                "editable": true,
                "deletable": true
              },
              "isProjectAppRole": false
            },
            {
              "id": 102,
              "name": "manager-Global Repository Apps",
              "description": "custom role created during upgrade",
              "hasManagerApp": true,
              "deletable": false,
              "editable": false,
              "roleTemplate": {
                "id": 3,
                "templateName": "Global Repository Apps",
                "templateType": 3,
                "templateApps": "{\"apps\": [{\"id\":30,\"name\":\"Global Test Repository\"},{\"id\":31,\"name\":\"Global Repository Config\"}]}",
                "editable": true,
                "deletable": true
              },
              "isProjectAppRole": false
            }
          ],
          "userType": 0,
          "chargeableFlag": true,
          "lastPasswordChange": 1557230757000,
          "lastSuccessfulLogin": 1557238954367,
          "onlyLoggedInUser": true,
          "lastSuccessfulLoginString": "05/07/2019 19:52:34",
          "countAttempts": 0,
          "isInternal": true,
          "fullName": "Test Manager"
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get All Users Present in the System. [/user{?hidedisabledusers}]
### Get All Users Present in the System. [GET]
Get information of all the users in the system.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>user </td>
                <td>subscribe </td>
                <td>/user/ </td>
            </tr>
            </table>
    

+ Parameters
    + hidedisabledusers (required, boolean) ... true/false is  required


+ Response 200 (application/json application/xml)

        [
          {
            "id": -10,
            "username": "any.one",
            "firstName": "Anyone",
            "lastName": " ",
            "location": "Sunnyvale",
            "email": "any.one@yourcompany.com",
            "accountEnabled": false,
            "accountExpired": false,
            "credentialsExpired": true,
            "loginName": "any.one",
            "roles": [],
            "userType": 0,
            "chargeableFlag": false,
            "lastPasswordChange": 1557230757000,
            "onlyLoggedInUser": false,
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "Anyone  "
          },
          {
            "id": 1,
            "title": "Manager",
            "username": "test.manager",
            "firstName": "Test",
            "lastName": "Manager",
            "city": "Sunnyvale",
            "state": "CA",
            "country": "US",
            "location": "Sunnyvale",
            "type": "1",
            "email": "test.manager@yourcompany.com",
            "workPhoneNumber": "+1-408-555-1212",
            "website": "http://www.thedinc.com",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "loginName": "test.manager",
            "roles": [
              {
                "id": 1,
                "name": "manager",
                "description": "Manager (Default role, cannot be modified)",
                "hasManagerApp": true,
                "deletable": false,
                "editable": false,
                "createdOn": 1436812200000,
                "roleTemplate": {
                  "id": 1,
                  "templateName": "Administration Apps",
                  "templateType": 1,
                  "templateApps": "{\"apps\": [{\"id\":1,\"name\":\"System Setup\"},{\"id\":2,\"name\":\"User Setup\"},{\"id\":3,\"name\":\"Project Setup\"},{\"id\":6,\"name\":\"Defect Admin\"},{\"id\":32,\"name\":\"Group Setup\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              },
              {
                "id": 101,
                "name": "manager-Project Apps",
                "description": "custom role created during upgrade",
                "hasManagerApp": true,
                "deletable": false,
                "editable": false,
                "roleTemplate": {
                  "id": 2,
                  "templateName": "Project Apps",
                  "templateType": 2,
                  "templateApps": "{\"apps\": [{\"id\":8,\"name\":\"Release Setup\"},{\"id\":9,\"name\":\"Requirements\"},{\"id\":11,\"name\":\"Test Planning\"},{\"id\":13,\"name\":\"Reporting\"},{\"id\":15,\"name\":\"Test Repository\"},{\"id\":16,\"name\":\"Test Execution\"},{\"id\":17,\"name\":\"Defect Tracking\"},{\"id\":20,\"name\":\"Execute All Executions\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              },
              {
                "id": 102,
                "name": "manager-Global Repository Apps",
                "description": "custom role created during upgrade",
                "hasManagerApp": true,
                "deletable": false,
                "editable": false,
                "roleTemplate": {
                  "id": 3,
                  "templateName": "Global Repository Apps",
                  "templateType": 3,
                  "templateApps": "{\"apps\": [{\"id\":30,\"name\":\"Global Test Repository\"},{\"id\":31,\"name\":\"Global Repository Config\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              }
            ],
            "userType": 0,
            "chargeableFlag": true,
            "lastPasswordChange": 1557230757000,
            "lastSuccessfulLogin": 1557239061788,
            "onlyLoggedInUser": true,
            "lastSuccessfulLoginString": "05/07/2019 19:54:21",
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "Test Manager"
          },
          {
            "id": 2,
            "title": "Lead",
            "username": "test.lead",
            "firstName": "Test",
            "lastName": "Lead",
            "city": "Sunnyvale",
            "state": "CA",
            "country": "US",
            "location": "Sunnyvale",
            "type": "1",
            "email": "test.lead@yourcompany.com",
            "workPhoneNumber": "+1-408-555-1212",
            "website": "http://www.thedinc.com",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "loginName": "test.lead",
            "roles": [
              {
                "id": 2,
                "name": "lead",
                "description": "Test Lead (Default role, cannot be modified)",
                "hasManagerApp": false,
                "deletable": false,
                "editable": true,
                "createdOn": 1436812200000,
                "roleTemplate": {
                  "id": 2,
                  "templateName": "Project Apps",
                  "templateType": 2,
                  "templateApps": "{\"apps\": [{\"id\":8,\"name\":\"Release Setup\"},{\"id\":9,\"name\":\"Requirements\"},{\"id\":11,\"name\":\"Test Planning\"},{\"id\":13,\"name\":\"Reporting\"},{\"id\":15,\"name\":\"Test Repository\"},{\"id\":16,\"name\":\"Test Execution\"},{\"id\":17,\"name\":\"Defect Tracking\"},{\"id\":20,\"name\":\"Execute All Executions\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              }
            ],
            "userType": 0,
            "chargeableFlag": true,
            "lastPasswordChange": 1557230757000,
            "onlyLoggedInUser": false,
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "Test Lead"
          },
          {
            "id": 3,
            "title": "Tester",
            "username": "tester.one",
            "firstName": "Tester",
            "lastName": "One",
            "city": "Bangalore",
            "country": "India",
            "location": "Bangalore",
            "type": "1",
            "email": "tester.one@yourcompany.com",
            "workPhoneNumber": "+91-80-5551212",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "loginName": "tester.one",
            "roles": [
              {
                "id": 3,
                "name": "tester-Project Apps",
                "description": "Tester (Default role, cannot be modified)",
                "hasManagerApp": false,
                "deletable": false,
                "editable": true,
                "createdOn": 1436812200000,
                "roleTemplate": {
                  "id": 2,
                  "templateName": "Project Apps",
                  "templateType": 2,
                  "templateApps": "{\"apps\": [{\"id\":8,\"name\":\"Release Setup\"},{\"id\":9,\"name\":\"Requirements\"},{\"id\":11,\"name\":\"Test Planning\"},{\"id\":13,\"name\":\"Reporting\"},{\"id\":15,\"name\":\"Test Repository\"},{\"id\":16,\"name\":\"Test Execution\"},{\"id\":17,\"name\":\"Defect Tracking\"},{\"id\":20,\"name\":\"Execute All Executions\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              }
            ],
            "userType": 0,
            "chargeableFlag": true,
            "lastPasswordChange": 1557230757000,
            "onlyLoggedInUser": false,
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "Tester One"
          },
          {
            "id": 5,
            "username": "uu.uu",
            "firstName": "uu",
            "lastName": "uu",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "roles": [
              {
                "id": 103,
                "name": "admin",
                "hasManagerApp": false,
                "deletable": true,
                "editable": true,
                "createdOn": 1557231118621,
                "roleTemplate": {
                  "id": 1,
                  "templateName": "Administration Apps",
                  "templateType": 1,
                  "templateApps": "{\"apps\": [{\"id\":1,\"name\":\"System Setup\"},{\"id\":2,\"name\":\"User Setup\"},{\"id\":3,\"name\":\"Project Setup\"},{\"id\":6,\"name\":\"Defect Admin\"},{\"id\":32,\"name\":\"Group Setup\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              },
              {
                "id": 103,
                "name": "admin",
                "hasManagerApp": false,
                "deletable": true,
                "editable": true,
                "createdOn": 1557231118621,
                "roleTemplate": {
                  "id": 1,
                  "templateName": "Administration Apps",
                  "templateType": 1,
                  "templateApps": "{\"apps\": [{\"id\":1,\"name\":\"System Setup\"},{\"id\":2,\"name\":\"User Setup\"},{\"id\":3,\"name\":\"Project Setup\"},{\"id\":6,\"name\":\"Defect Admin\"},{\"id\":32,\"name\":\"Group Setup\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              },
              {
                "id": 104,
                "name": "global",
                "hasManagerApp": false,
                "deletable": true,
                "editable": true,
                "createdOn": 1557231142286,
                "roleTemplate": {
                  "id": 3,
                  "templateName": "Global Repository Apps",
                  "templateType": 3,
                  "templateApps": "{\"apps\": [{\"id\":30,\"name\":\"Global Test Repository\"},{\"id\":31,\"name\":\"Global Repository Config\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              },
              {
                "id": 105,
                "name": "role1",
                "hasManagerApp": false,
                "deletable": true,
                "editable": true,
                "createdOn": 1557231173167,
                "roleTemplate": {
                  "id": 2,
                  "templateName": "Project Apps",
                  "templateType": 2,
                  "templateApps": "{\"apps\": [{\"id\":8,\"name\":\"Release Setup\"},{\"id\":9,\"name\":\"Requirements\"},{\"id\":11,\"name\":\"Test Planning\"},{\"id\":13,\"name\":\"Reporting\"},{\"id\":15,\"name\":\"Test Repository\"},{\"id\":16,\"name\":\"Test Execution\"},{\"id\":17,\"name\":\"Defect Tracking\"},{\"id\":20,\"name\":\"Execute All Executions\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              },
              {
                "id": 106,
                "name": "role2",
                "hasManagerApp": false,
                "deletable": true,
                "editable": true,
                "createdOn": 1557231208103,
                "roleTemplate": {
                  "id": 2,
                  "templateName": "Project Apps",
                  "templateType": 2,
                  "templateApps": "{\"apps\": [{\"id\":8,\"name\":\"Release Setup\"},{\"id\":9,\"name\":\"Requirements\"},{\"id\":11,\"name\":\"Test Planning\"},{\"id\":13,\"name\":\"Reporting\"},{\"id\":15,\"name\":\"Test Repository\"},{\"id\":16,\"name\":\"Test Execution\"},{\"id\":17,\"name\":\"Defect Tracking\"},{\"id\":20,\"name\":\"Execute All Executions\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              }
            ],
            "userType": 0,
            "chargeableFlag": true,
            "lastSuccessfulLogin": 1557231403605,
            "onlyLoggedInUser": true,
            "lastSuccessfulLoginString": "05/07/2019 17:46:43",
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "uu uu"
          },
          {
            "id": 6,
            "username": "tt.tt",
            "firstName": "tt",
            "lastName": "tt",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "roles": [
              {
                "id": 105,
                "name": "role1",
                "hasManagerApp": false,
                "deletable": true,
                "editable": true,
                "createdOn": 1557231173167,
                "roleTemplate": {
                  "id": 2,
                  "templateName": "Project Apps",
                  "templateType": 2,
                  "templateApps": "{\"apps\": [{\"id\":8,\"name\":\"Release Setup\"},{\"id\":9,\"name\":\"Requirements\"},{\"id\":11,\"name\":\"Test Planning\"},{\"id\":13,\"name\":\"Reporting\"},{\"id\":15,\"name\":\"Test Repository\"},{\"id\":16,\"name\":\"Test Execution\"},{\"id\":17,\"name\":\"Defect Tracking\"},{\"id\":20,\"name\":\"Execute All Executions\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              },
              {
                "id": 106,
                "name": "role2",
                "hasManagerApp": false,
                "deletable": true,
                "editable": true,
                "createdOn": 1557231208103,
                "roleTemplate": {
                  "id": 2,
                  "templateName": "Project Apps",
                  "templateType": 2,
                  "templateApps": "{\"apps\": [{\"id\":8,\"name\":\"Release Setup\"},{\"id\":9,\"name\":\"Requirements\"},{\"id\":11,\"name\":\"Test Planning\"},{\"id\":13,\"name\":\"Reporting\"},{\"id\":15,\"name\":\"Test Repository\"},{\"id\":16,\"name\":\"Test Execution\"},{\"id\":17,\"name\":\"Defect Tracking\"},{\"id\":20,\"name\":\"Execute All Executions\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              }
            ],
            "userType": 0,
            "chargeableFlag": true,
            "lastPasswordChange": 1557236571361,
            "lastSuccessfulLogin": 1557236576627,
            "onlyLoggedInUser": true,
            "lastSuccessfulLoginString": "05/07/2019 19:12:56",
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "tt tt"
          }
        ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get User by Project ID [/user/project/{projectid}{?isLite}{?adminUser}]
### Get User by Project ID [GET]
Display information of all the users who has access to project
    
+ Parameters
    + projectid (required, Long) ... Project ID to get user for

+ Parameters
    + isLite (required, String) ... Boolean for fetching ony few details
    + adminUser (optional, Boolean) ... Value for is admin user 


+ Response 200 (application/json application/xml)

        [
          {
            "id": 1,
            "title": "Manager",
            "username": "test.manager",
            "firstName": "Test",
            "lastName": "Manager",
            "city": "Sunnyvale",
            "state": "CA",
            "country": "US",
            "location": "Sunnyvale",
            "type": "1",
            "email": "test.manager@yourcompany.com",
            "workPhoneNumber": "+1-408-555-1212",
            "website": "http://www.thedinc.com",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "loginName": "test.manager",
            "roles": [
              {
                "id": 1,
                "name": "manager",
                "description": "Manager (Default role, cannot be modified)",
                "hasManagerApp": true,
                "deletable": false,
                "editable": false,
                "createdOn": 1436812200000,
                "roleTemplate": {
                  "id": 1,
                  "templateName": "Administration Apps",
                  "templateType": 1,
                  "templateApps": "{\"apps\": [{\"id\":1,\"name\":\"System Setup\"},{\"id\":2,\"name\":\"User Setup\"},{\"id\":3,\"name\":\"Project Setup\"},{\"id\":6,\"name\":\"Defect Admin\"},{\"id\":32,\"name\":\"Group Setup\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              },
              {
                "id": 102,
                "name": "manager-Global Repository Apps",
                "description": "custom role created during upgrade",
                "hasManagerApp": true,
                "deletable": false,
                "editable": false,
                "roleTemplate": {
                  "id": 3,
                  "templateName": "Global Repository Apps",
                  "templateType": 3,
                  "templateApps": "{\"apps\": [{\"id\":30,\"name\":\"Global Test Repository\"},{\"id\":31,\"name\":\"Global Repository Config\"}]}",
                  "editable": true,
                  "deletable": true
                },
                "isProjectAppRole": false
              }
            ],
            "userType": 0,
            "chargeableFlag": true,
            "lastPasswordChange": 1557230757000,
            "lastSuccessfulLogin": 1557239136874,
            "onlyLoggedInUser": true,
            "lastSuccessfulLoginString": "05/07/2019 19:55:36",
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "Test Manager"
          },
          {
            "id": 2,
            "title": "Lead",
            "username": "test.lead",
            "firstName": "Test",
            "lastName": "Lead",
            "city": "Sunnyvale",
            "state": "CA",
            "country": "US",
            "location": "Sunnyvale",
            "type": "1",
            "email": "test.lead@yourcompany.com",
            "workPhoneNumber": "+1-408-555-1212",
            "website": "http://www.thedinc.com",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "loginName": "test.lead",
            "roles": [],
            "userType": 0,
            "chargeableFlag": true,
            "lastPasswordChange": 1557230757000,
            "onlyLoggedInUser": false,
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "Test Lead"
          },
          {
            "id": 3,
            "title": "Tester",
            "username": "tester.one",
            "firstName": "Tester",
            "lastName": "One",
            "city": "Bangalore",
            "country": "India",
            "location": "Bangalore",
            "type": "1",
            "email": "tester.one@yourcompany.com",
            "workPhoneNumber": "+91-80-5551212",
            "accountEnabled": true,
            "accountExpired": false,
            "credentialsExpired": false,
            "loginName": "tester.one",
            "roles": [],
            "userType": 0,
            "chargeableFlag": true,
            "lastPasswordChange": 1557230757000,
            "onlyLoggedInUser": false,
            "countAttempts": 0,
            "isInternal": true,
            "fullName": "Tester One"
          }
        ]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get valid users for Zbot. [/user/validZbotUsers{?projectId}]
### Get valid users for Zbot. [GET]
get only those users who have access to repository,planning and execution apps.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>user </td>
                <td>subscribe </td>
                <td>/user/ </td>
            </tr>
            </table>
    

+ Parameters
    + projectId (required, Long) ... projectId Id


+ Response 200 (application/json application/xml)

+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Logout User from System [/user/logout]
### Logout User from System [DELETE]
To logout Currently Logged-In User from System.
    



+ Request (application/json application/xml)

        $jsonRequestSingleLine

+ Response 200 (application/json application/xml)

        true
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Assign Role to User or Update User [/user/{id}]
### Assign Role to User or Update User [PUT]
Update the user information with new details. Field User Id corresponds to the user entity for which the update should be done.
        <p>Notification(s): </p>

    <table>
        <thead>
        <tr>
            <th>Entity</th>
            <th>Action</th>
            <th>Topic</th>
        </tr>
        </thead>
                    <tr>
                <td>user </td>
                <td>update </td>
                <td>/user/ </td>
            </tr>
            </table>
    
+ Parameters
    + id (required, Long) ... For update needs userDTO


+ Request (application/json application/xml)

        {
        "firstName":"govind",
        "lastName":"one",
        "type":"",
        "roles":[
                  {"id":5,"name":"dashboard"},
                  {"id":104,"name":"Administration Role "}
                ],
        "email":"govind.drolia@abc.com",
        "username":"govind.one",
        "accountEnabled":true,
        "credentialsExpired":true,
        "id":15,
        "isCustomizeUsername":null,
        "userType":0,
        "chargeableFlag":true,
        "groupSet":[]
        }

+ Response 200 (application/json application/xml)

        {
          "id": 15,
          "username": "govind.one",
          "firstName": "govind",
          "lastName": "one",
          "type": "",
          "email": "govind.drolia@abc.com",
          "accountEnabled": true,
          "accountExpired": false,
          "credentialsExpired": true,
          "loginName": "govind.one",
          "roles": [
            {
              "id": 5,
              "name": "dashboard",
              "description": "Dashboard (Default role, cannot be modified)",
              "hasManagerApp": false,
              "deletable": false,
              "editable": false,
              "createdOn": 1436812200000,
              "roleTemplate": {
                "id": 4,
                "templateName": "Dashboard Apps",
                "templateType": 4,
                "templateApps": "{\"apps\": [{\"id\":18,\"name\":\"ProjectDashboard\"},{\"id\":19,\"name\":\"Department Dashboard\"}]}",
                "editable": true,
                "deletable": true
              },
              "isProjectAppRole": false
            },
            {
              "id": 104,
              "name": "Administration Role ",
              "hasManagerApp": false,
              "deletable": true,
              "editable": true,
              "createdOn": 1595590640000,
              "roleTemplate": {
                "id": 1,
                "templateName": "Administration Apps",
                "templateType": 1,
                "templateApps": "{\"apps\": [{\"id\":1,\"name\":\"System Setup\"},{\"id\":2,\"name\":\"User Setup\"},{\"id\":3,\"name\":\"Project Setup\"},{\"id\":6,\"name\":\"Defect Admin\"},{\"id\":32,\"name\":\"Group Setup\"}]}",
                "editable": true,
                "deletable": true
              },
              "isProjectAppRole": false
            }
          ],
          "userType": 0,
          "chargeableFlag": false,
          "onlyLoggedInUser": false,
          "groupSet": [],
          "projectTeams": [],
          "countAttempts": 0,
          "isInternal": true,
          "fullName": "govind one"
        }
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication token missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error


# Group UserToken
The following API is a section of resources related to the user-token.

## delete all token  [/usertoken/all]
### delete all token  [DELETE]
Delete all tokens
    



+ Response 200 (application/json application/xml)

        true
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## delete token  [/usertoken/{id}]
### delete token  [DELETE]
Delete token by ID
    
+ Parameters
    + id (required, Long) ... token id



+ Response 200 (application/json application/xml)

        true
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## generate token  [/usertoken/]
### generate token  [POST]
Create new token
    


+ Request (application/json application/xml)

        {"label":"new  token"}

+ Response 200 (application/json application/xml)

        {"id":26,"label":"new  token","token":"53c734dbf9f0354c900685c38ab194bf7db03a5f","createdBy":1}
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error

## Get all token  [/usertoken]
### Get all token  [GET]
Get all token
    



+ Response 200 (application/json application/xml)

        [{"id":3,"label":"testtoken","createdBy":1}]
+ Response 400 (application/json application/xml)

        Bad request. Requirement not matching
+ Response 401 (application/json application/xml)

        Authentication Token Missing
+ Response 403 (application/json application/xml)

        User does not have access to perform this operation
+ Response 500 (application/json application/xml)

        Unknown Internal Error